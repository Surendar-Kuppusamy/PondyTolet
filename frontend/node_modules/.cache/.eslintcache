[{"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\index.js":"1","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\reportWebVitals.js":"2","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\App.js":"3","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\Footer.js":"4","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\Header.js":"5","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\Loader.js":"6","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\Contents.js":"7","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\Home.js":"8","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\login\\Login.js":"9","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\signup\\Signup.js":"10","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\routes\\RouterOutlet.js":"11","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\routes\\AllRoutes.js":"12","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AddAssets.js":"13","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\actions\\assetActions.js":"14","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetSubForm.js":"15","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep1.js":"16","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep2.js":"17","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\common\\LoadingIndicator.js":"18","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep3.js":"19","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep4.js":"20","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep5.js":"21","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep6.js":"22","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep7.js":"23","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\commonFunctions\\Validations.js":"24","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\common\\FileUploadComponent.js":"25","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\store\\store.js":"26","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\reducers\\assetReducer.js":"27","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\reducers\\userReducer.js":"28","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\actions\\userActions.js":"29","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\constants\\constants.js":"30","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\constants\\Apiconstants.js":"31"},{"size":723,"mtime":1632041016129,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":523,"mtime":1632043021838,"results":"35","hashOfConfig":"33"},{"size":219,"mtime":1623690014944,"results":"36","hashOfConfig":"33"},{"size":2008,"mtime":1624295228843,"results":"37","hashOfConfig":"33"},{"size":269,"mtime":1623868826853,"results":"38","hashOfConfig":"33"},{"size":156,"mtime":1623350397739,"results":"39","hashOfConfig":"33"},{"size":145,"mtime":1623353182748,"results":"40","hashOfConfig":"33"},{"size":2789,"mtime":1623961544189,"results":"41","hashOfConfig":"33"},{"size":12609,"mtime":1632331917565,"results":"42","hashOfConfig":"33"},{"size":605,"mtime":1624046624486,"results":"43","hashOfConfig":"33"},{"size":1543,"mtime":1632043754807,"results":"44","hashOfConfig":"33"},{"size":21111,"mtime":1632342072425,"results":"45","hashOfConfig":"33"},{"size":4424,"mtime":1632341116524,"results":"46","hashOfConfig":"33"},{"size":19908,"mtime":1624565560910,"results":"47","hashOfConfig":"33"},{"size":3220,"mtime":1632342064999,"results":"48","hashOfConfig":"33"},{"size":8079,"mtime":1632336676567,"results":"49","hashOfConfig":"33"},{"size":403,"mtime":1630348968060,"results":"50","hashOfConfig":"33"},{"size":3619,"mtime":1632341614824,"results":"51","hashOfConfig":"33"},{"size":4847,"mtime":1632341603503,"results":"52","hashOfConfig":"33"},{"size":8562,"mtime":1632341662950,"results":"53","hashOfConfig":"33"},{"size":6035,"mtime":1632342074370,"results":"54","hashOfConfig":"33"},{"size":4478,"mtime":1632339804037,"results":"55","hashOfConfig":"33"},{"size":591,"mtime":1631206803577,"results":"56","hashOfConfig":"33"},{"size":2639,"mtime":1631301818340,"results":"57","hashOfConfig":"33"},{"size":861,"mtime":1631994292527,"results":"58","hashOfConfig":"33"},{"size":1970,"mtime":1632043524970,"results":"59","hashOfConfig":"33"},{"size":1274,"mtime":1632331839357,"results":"60","hashOfConfig":"33"},{"size":807,"mtime":1632333160131,"results":"61","hashOfConfig":"33"},{"size":1184,"mtime":1632331780334,"results":"62","hashOfConfig":"33"},{"size":102,"mtime":1632041606076,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"1erqxcl",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":9,"source":"107","usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":7,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"67"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"67"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"67"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"67"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\index.js",["142"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport dotenv from 'dotenv';\nimport './index.css';\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle.min\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["143","144"],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\reportWebVitals.js",[],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\App.js",[],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\Footer.js",[],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\Header.js",[],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\Loader.js",[],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\Contents.js",[],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\Home.js",[],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\login\\Login.js",["145","146"],"import React from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nfunction Login() {\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        selectValue:''\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n                .required('Email is required')\r\n                .email('Email is invalid'),\r\n        password: Yup.string()\r\n                .required('Password is required')\r\n                .min(8, 'Password must have 8 characters')\r\n                .max(50, 'Password must be less than 50 characters')\r\n    });\r\n    \r\n    const onSubmit = (values) => {\r\n        console.log(values);\r\n    }\r\n    \r\n    return (\r\n        <section id=\"login\">\r\n            <h3>Login Page</h3>\r\n            <div className=\"container\">\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {({ errors, values, touched, setValues, setFieldValue, handleChange, handleBlur }) => (\r\n                        <Form>\r\n                            <pre>{JSON.stringify(values)}</pre>\r\n                            <div className=\"container\">\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <input type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} id=\"email\" name=\"email\" placeholder=\"Enter your email\" onChange={handleChange} onBlur={handleBlur} value={values.email} />\r\n                                    <ErrorMessage name=\"email\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <input type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} id=\"password\" name=\"password\" placeholder=\"Enter your password\" onChange={handleChange} onBlur={handleBlur} value={values.password} />\r\n                                    <ErrorMessage name=\"password\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mt-3 text-right\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">Login</button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\signup\\Signup.js",["147","148","149","150","151","152","153","154","155","156","157"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch, connect }  from 'react-redux';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { subYears } from 'date-fns';\r\nimport { toast } from 'react-toastify';\r\nimport { signup } from '../../../actions/userActions';\r\nimport Loader from '../../Loader';\r\nimport { USER_LOADER, SIGNUP_FORM } from '../../../constants/constants';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        register: () => {\r\n            dispatch(signup());\r\n        }\r\n    }   \r\n}\r\n\r\nfunction Signup(props) {\r\n\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n\r\n    const userState = useSelector((state) => state.userState);\r\n\r\n    const { signup_result, signup_error } = userState;\r\n\r\n    const dispatch = useDispatch();    \r\n    /* dispatch({type:'counter/decremented'}); */\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(signup_result).length != 0) {\r\n            console.log('Result ===>'+JSON.stringify(signup_result));\r\n            if(signup_result.status == 'error') {\r\n                toast.error(signup_result.message, {theme: \"colored\"});\r\n            } else if(signup_result.status == 'success') {\r\n                toast.success(signup_result.message, {theme: \"colored\"});\r\n                //history.push(\"/home\");\r\n            }\r\n        }\r\n    },[signup_result])\r\n\r\n\r\n    \r\n\r\n    const initialValues = {\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        password: '',\r\n        confirm_password:'',\r\n        dob: '',\r\n        mobile_number: '',\r\n        std_code:'',\r\n        phone_number: '',\r\n        telephone_number: '',\r\n        address: '',\r\n        user_type:3\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        first_name: Yup.string()\r\n            .max(50, 'First name must be 50 characters or less')\r\n            .required('First name is required'),\r\n        last_name: Yup.string()\r\n            .max(50, 'Last name must be 50 characters or less')\r\n            .required('Last name is required'),\r\n        email: Yup.string()\r\n            .email('Invalid email address')\r\n            .required('Email required'),\r\n        password: Yup.string()\r\n            .required('Password is required'),\r\n        confirm_password:Yup.string()\r\n            .required('Confirm password is required')\r\n            .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n        dob: Yup.date('DOB is date'),\r\n        mobile_number: Yup.string().matches(/^\\d{10}$/, 'Invalid mobile number')\r\n            .min(10, 'Invalid mobile number')\r\n            .max(10,'Invalid mobile number')\r\n            .required('Mobile number is required'),\r\n        std_code:Yup.string().matches(/^\\d{4}$/, 'Invalid STD code')\r\n            .min(3, 'Invalid STD code')\r\n            .max(4,'Invalid STD code'),\r\n        phone_number: Yup.string().matches(/^\\d{4}$/, 'Invalid telephone number')\r\n            .min(3, 'Invalid telephone number')\r\n            .max(4,'Invalid telephone number'),\r\n        telephone_number: Yup.number(),\r\n        address: Yup.string()\r\n            .required('Address is required'),\r\n        user_type:Yup.number()\r\n            .required('User type is required'),\r\n    });\r\n\r\n    const onDobDateChange = (e, field, values, setFieldValue) => {\r\n        console.log(e.getDate(), e.getFullYear(), e.getMonth());\r\n        var dobDate = e.getFullYear()+'-'+(e.getMonth() + 1)+'-'+e.getDate();\r\n        console.log(dobDate);\r\n        setFieldValue(field, dobDate);\r\n    };\r\n\r\n    const onSubmit = async (values) => {\r\n        console.log(values, userState, props);\r\n        dispatch({type:SIGNUP_FORM, payload: values});\r\n        await props.register();\r\n        \r\n    };\r\n\r\n    return (\r\n        <section id=\"signup\">\r\n            {userState.user_loader == true ? <Loader /> : <div>\r\n                <h3 className=\"text-center\">Signup Page</h3>\r\n                <div className=\"container\">\r\n                    <Formik initialValues={initialValues} /* validationSchema={validationSchema}  */onSubmit={onSubmit}>\r\n                        {({ errors, values, field, touched, setValues, setFieldValue, handleChange, handleBlur }) => (\r\n                            <Form>                        \r\n                                <pre>\r\n                                    {JSON.stringify(values)}\r\n                                </pre>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"first_name\" className=\"form-label\">First Name</label>\r\n                                    <input type=\"text\" className={'form-control' + (errors.first_name && touched.first_name ? ' is-invalid' : '')} id=\"first_name\" name=\"first_name\" placeholder=\"Enter your first name\" onChange={handleChange} onBlur={handleBlur} value={values.first_name}  />\r\n                                    <ErrorMessage name=\"first_name\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"last_name\" className=\"form-label\">Last Name</label>\r\n                                    <input type=\"text\" className={'form-control' + (errors.last_name && touched.last_name ? ' is-invalid' : '')} id=\"last_name\" name=\"last_name\" placeholder=\"Enter your last name\" onChange={handleChange} onBlur={handleBlur} value={values.last_name} />\r\n                                    <ErrorMessage name=\"last_name\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <input type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} id=\"email\" name=\"email\" placeholder=\"Enter your email\" onChange={handleChange} onBlur={handleBlur} value={values.email} />\r\n                                    <ErrorMessage name=\"email\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <input type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} id=\"password\" name=\"password\" placeholder=\"Enter your password\" onChange={handleChange} onBlur={handleBlur} value={values.password} />\r\n                                    <ErrorMessage name=\"password\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"confirm_password\" className=\"form-label\">Confirm Password</label>\r\n                                    <input type=\"password\" className={'form-control' + (errors.confirm_password && touched.confirm_password ? ' is-invalid' : '')} id=\"confirm_password\" name=\"confirm_password\" placeholder=\"Re-enter password\" onChange={handleChange} onBlur={handleBlur} value={values.confirm_password} />\r\n                                    <ErrorMessage name=\"confirm_password\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"dob\" className=\"form-label\">DOB</label>\r\n                                    {/* <input type=\"text\" className=\"form-control\" id=\"dob\" name=\"dob\" placeholder=\"Enter your DOB\" onChange={handleChange} onBlur={handleBlur} /> */}\r\n                                    <div>\r\n                                        <DatePicker id=\"dob\" className={'form-control' + (errors.dob && touched.dob ? ' is-invalid' : '')} name=\"dob\" maxDate={subYears(new Date(), 17)} onChange={e => onDobDateChange(e, 'dob', values, setFieldValue)} value={values.dob} />\r\n                                    </div>\r\n                                    <ErrorMessage name=\"dob\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"mobile_number\" className=\"form-label\">Mobile Number</label>\r\n                                    <input type=\"text\" className={'form-control' + (errors.mobile_number && touched.mobile_number ? ' is-invalid' : '')} id=\"mobile_number\" name=\"mobile_number\" placeholder=\"Enter your Mobile number\" onChange={handleChange} onBlur={handleBlur} value={values.mobile_number} />\r\n                                    <ErrorMessage name=\"mobile_number\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"row g-3 align-items-center\">\r\n                                    <div className=\"col-md-12\">\r\n                                        Telephone Number\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                        <label htmlFor=\"std_code\" className=\"\">STD Code</label>\r\n                                        <input type=\"text\" className={'form-control'} id=\"std_code\" name=\"std_code\" placeholder=\"Enter STD code\" onChange={handleChange} onBlur={handleBlur} value={values.std_code} />\r\n                                        <ErrorMessage name=\"std_code\" component=\"span\" className=\"text-danger\" />\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                        <label htmlFor=\"phone_number\" className=\"\">Phone Number</label>\r\n                                        <input type=\"text\" className={'form-control'} id=\"phone_number\" name=\"phone_number\" placeholder=\"Enter phone number\" onChange={handleChange} onBlur={handleBlur} value={values.phone_number} />\r\n                                        <ErrorMessage name=\"phone_number\" component=\"span\" className=\"text-danger\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"address\" className=\"form-label\">Address</label>\r\n                                    <textarea className={'form-control' + (errors.address && touched.address ? ' is-invalid' : '')} id=\"address\" name=\"address\" placeholder=\"Enter address\" rows=\"3\" onChange={handleChange} onBlur={handleBlur} value={values.address}></textarea>\r\n                                    <ErrorMessage name=\"address\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                    User Type\r\n                                    <ErrorMessage name=\"user_type\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"user_type\" id=\"user_type_tenant\" value=\"3\"  onChange={handleChange} onBlur={handleBlur} checked={values.user_type == 3 ? true : false} />\r\n                                    <label className=\"form-check-label\" htmlFor=\"user_type_tenant\">Tenant</label>\r\n                                </div>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"user_type\" id=\"user_type_owner\" value=\"2\" onChange={handleChange} onBlur={handleBlur} checked={values.user_type == 2 ? true : false} />\r\n                                    <label className=\"form-check-label\" htmlFor=\"user_type_owner\">Owner</label>\r\n                                </div>\r\n                                <div className=\"mt-2 text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Signup</button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n            }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup);","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\routes\\RouterOutlet.js",["158","159","160","161"],"import React, { Suspense, lazy } from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Loader from '../components/Loader';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport AllRoutes from './AllRoutes'\r\n\r\n\r\nfunction RouterOutlet() {\r\n    return (\r\n        <Router forceRefresh={false}>\r\n            <Suspense fallback={<Loader />}>\r\n                <Header />\r\n                <AllRoutes />\r\n                <Footer />\r\n            </Suspense>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default RouterOutlet;","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\routes\\AllRoutes.js",["162","163","164","165","166"],"import React, { Suspense, lazy } from 'react';\r\nimport { HashRouter as Router, Route, Redirect, Switch, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SET_SITE_LOADER } from '../constants/constants';\r\nimport Loader from '../components/Loader';\r\n\r\n\r\nconst Content = lazy(() => import('../components/Contents'));\r\nconst Home = lazy(() => import('../components/pages/Home'));\r\nconst Login = lazy(() => import('../components/pages/login/Login'));\r\nconst Signup = lazy(() => import('../components/pages/signup/Signup'));\r\nconst AddAssets = lazy(() => import('../components/pages/assets/AddAssets'));\r\n\r\nfunction AllRoutes() {\r\n    let location = useLocation();\r\n    /* const dispatch = useDispatch();\r\n    dispatch({type: SET_SITE_LOADER, payload: true}); */\r\n    React.useEffect(() => {\r\n        console.log(location)\r\n    }, [location]);\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Redirect to=\"/home\" />\r\n            </Route>\r\n            <Route exact path=\"/home\" component={() => (<Home />)} />\r\n            <Route exact path=\"/loader\" component={() => <Loader />} />\r\n            <Route exact path=\"/content\" component={() => <Content />} />\r\n\r\n            <Route exact path=\"/login\" component={() => <Login />} />\r\n            <Route exact path=\"/signup\" component={() => <Signup />} />\r\n\r\n            <Route exact path=\"/asset/add\" component={() => <AddAssets />} />\r\n            \r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default AllRoutes;","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AddAssets.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import React, { useEffect, useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { Formik, Form, FieldArray, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DatePicker from \"react-datepicker\";\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport { parse, isDate } from \"date-fns\";\r\nimport StepWizard from \"react-step-wizard\";\r\nimport { SITE_LOADER, ALL_OPTIONS, SET_WHO_CAN_CONTACT_OPTIONS } from '../../../constants/constants';\r\nimport { getAllOptions, createAsset } from '../../../actions/assetActions';\r\nimport AssetAddFormWizzardStep1 from './AssetAddFormWizzardStep1';\r\nimport AssetAddFormWizzardStep2 from './AssetAddFormWizzardStep2';\r\nimport AssetAddFormWizzardStep3 from './AssetAddFormWizzardStep3';\r\nimport AssetAddFormWizzardStep4 from './AssetAddFormWizzardStep4';\r\nimport AssetAddFormWizzardStep5 from './AssetAddFormWizzardStep5';\r\nimport AssetAddFormWizzardStep6 from './AssetAddFormWizzardStep6';\r\nimport AssetAddFormWizzardStep7 from './AssetAddFormWizzardStep7';\r\n\r\nconst onSelectMultipleChange = (value, actionMeta, field, values, setFieldValue) => {\r\n    var loader = field+'_is_loading';\r\n    setFieldValue(loader, true);\r\n    console.log(value, actionMeta);\r\n    let tempValue = [];\r\n    tempValue = values.who_can_contact;\r\n    if(actionMeta.action == \"create-option\" && actionMeta.option.__isNew__) {\r\n        console.log(actionMeta.option.value);\r\n        //Save and select\r\n        //all_options.who_can_contact_options.unshift({label: actionMeta.option.value, value: actionMeta.option.value});\r\n        setFieldValue(loader, false);\r\n    } else if(actionMeta.action == \"select-option\") {\r\n        tempValue.push(actionMeta.option.value);\r\n        setFieldValue(field, tempValue);\r\n        setFieldValue(loader, false);\r\n    } else if(actionMeta.action == \"remove-value\") {\r\n        var removedIndex = tempValue.indexOf(actionMeta.removedValue.value);\r\n        tempValue.splice(removedIndex, 1);\r\n        setFieldValue(field, tempValue);\r\n        setFieldValue(loader, false);\r\n    }\r\n    setFieldValue(loader, false);\r\n};\r\n\r\n\r\n\r\nconst onDobDateChange = (e, field, values, setFieldValue) => {\r\n    var asset_available_on_from = e.getFullYear()+'-'+(e.getMonth() + 1)+'-'+e.getDate();\r\n    setFieldValue(field, asset_available_on_from);\r\n};    \r\n\r\nconst onClickDMYTypes = (e, field, values, setFieldValue) => {\r\n    console.log(e, field, values, setFieldValue);\r\n    setFieldValue(field, e.value);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        assetState: state.assetState\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getoptions: () => {\r\n            dispatch(getAllOptions());\r\n        }\r\n    }   \r\n}\r\n\r\nfunction AddAssets(props) {\r\n    /* const dispatch = useDispatch();\r\n    dispatch({type: ALL_OPTIONS, payload: {'te': 'function'}});\r\n    const assetState = useSelector((state) => state.assetState) */\r\n\r\n    const customStyles = {\r\n        singleValue: (provided, state) => {\r\n          const color = state.selectProps.isLoading ? 'white' : 'black';\r\n          return { ...provided, color };\r\n        },\r\n        valueContainer: (provided, state) => {\r\n            const color = state.selectProps.isLoading ? 'white' : 'black';\r\n            return { ...provided, color };\r\n          }\r\n    }\r\n\r\n    const assetState = useSelector((state) => state.assetState)\r\n    console.log(assetState);\r\n    \r\n    if(Object.keys(props.assetState.alloptions).length == 0) {\r\n        props.getoptions();\r\n        console.log(assetState);\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n    },[])\r\n\r\n    const onSelectChange = (e, field, values, setFieldValue, loader) => {\r\n        var loader = field+'_is_loading';\r\n        setFieldValue(loader, true);\r\n        if(e.__isNew__) {\r\n            //Save and select\r\n            assetState.alloptions.city_options.push({'label': 'Loading', 'value': 0});\r\n            setFieldValue(field, 0);\r\n            setTimeout(function() {\r\n                assetState.alloptions.city_options.unshift({'label': e.value, 'value': e.value});\r\n                setFieldValue(loader, false);\r\n                setFieldValue(field, e.value);\r\n                //setFieldValue(field, 0);\r\n            }, 2000);\r\n        } else {\r\n            setFieldValue(field, e.value);\r\n            setFieldValue(loader, false);\r\n        }\r\n    };\r\n    \r\n    /* const onClickRoomsTypes = (e, field, index, values, setFieldValue) => {\r\n        console.log(values);\r\n        setFieldValue(field, e.value);\r\n    }\r\n\r\n    const handleRoomChange = (e, index, field, room, setFieldValue) => {\r\n        setFieldValue(room[field], e.value);\r\n    }; */\r\n\r\n    const initialValues = {\r\n        user_id: 0,\r\n        type_of_asset: 1,\r\n        asset_for: 1,\r\n        asset_name: '',\r\n        door_number: 0,\r\n        address_hint:'',\r\n        street: '',\r\n        nagar: '',\r\n        city: 0,\r\n        city_is_loading: false,\r\n        state: 0,\r\n        state_is_loading: false,\r\n        pincode:0,\r\n        landmark: '',\r\n        number_of_rooms: 0,\r\n        bhk: 0,\r\n        age_of_asset: 0,\r\n        age_of_asset_type: 1,\r\n        asset_main_image: [],\r\n        asset_size_in_length_type: 1,\r\n        asset_size_in_length: 0,\r\n        asset_size_in_width_type: 1,\r\n        asset_size_in_width: 0,\r\n        asset_notes_by_owner: '',\r\n        who_can_contact: [],\r\n        who_can_contact_is_loading: false,\r\n        advance_amount_for_asset:0,\r\n        monthly_rent_for_asset: 0,\r\n        lease_amount_for_asset: 0,\r\n        lease_period_for_asset: 0,\r\n        lease_period_for_asset_type: 1,\r\n        asset_price:0,\r\n        asset_available_on_from: '',\r\n        notice_period_for_vocate_asset: 0,\r\n        notice_period_for_vocate_asset_type: 1,\r\n        asset_status_now: 0,\r\n        asset_status_now_is_loading: false,\r\n        show_my_asset_for_tenants: 1,\r\n\r\n        rooms: []\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        type_of_asset: Yup.number()\r\n            .required('Asset type is required.'),\r\n        asset_for: Yup.number()\r\n            .required('Asset for is required.'),\r\n        asset_name: Yup.string()\r\n            .required('Asset name is required.')\r\n            .min(3, 'Asset name must be minimum 3 characters.')\r\n            .max(50, 'Asset name character must be less than 50 characters.'),\r\n        door_number: Yup.number()\r\n            .when('type_of_asset', {\r\n                is: (type_of_asset, validationSchema) => {\r\n                    if(type_of_asset  != 5 && type_of_asset  != 3 && type_of_asset  != 4) {   //5 => 'Land', 3 => 'Store', 4 => 'Koddon'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Door number is required.').min(1, 'Door number must be valid.')\r\n            }),\r\n        address_hint: Yup.string(),\r\n        street: Yup.string(),\r\n        nagar: Yup.string(),\r\n        city: Yup.number()\r\n            .required('City is required.')\r\n            .min(1, 'City is required.'),\r\n        state: Yup.number()\r\n            .required('State is required.')\r\n            .min(1, 'State is required.'),\r\n        pincode: Yup.number()\r\n            .required('Pincode is required.')\r\n            .min(1, 'Pincode is required.'),\r\n        landmark: Yup.string(),\r\n        number_of_rooms: Yup.number()\r\n            .when('type_of_asset', {\r\n                is: (type_of_asset, validationSchema) => {\r\n                    if(type_of_asset  == 1 || type_of_asset  == 2) {   //1 => 'House', 2 => 'Appartment'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Number of room is required.').min(1, 'Number of room must be valid.').max(20, 'Number of room must be valid.')\r\n            }),\r\n        bhk: Yup.number()\r\n            .when('type_of_asset', {\r\n                is: (type_of_asset, validationSchema) => {\r\n                    if(type_of_asset  == 1 || type_of_asset  == 2) {   //1 => 'House', 2 => 'Appartment'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('BHK is required.').min(1, 'BHK must be valid.').max(20, 'BHK must be valid.')\r\n            }),\r\n        age_of_asset: Yup.number()\r\n            .when('type_of_asset', {\r\n                is: (type_of_asset, validationSchema) => {\r\n                    if(type_of_asset != 5) {  //5 => 'Land'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Age of asset is required.').min(1, 'Age of asset must be valid.').max(50, 'Age of asst must be valid.')\r\n            }),\r\n        age_of_asset_type: Yup.number()\r\n            .when('type_of_asset', {\r\n                is: (type_of_asset, validationSchema) => {\r\n                    if(type_of_asset != 5) {  //5 => 'Land'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Age of asset type is required.')\r\n            }),\r\n        asset_main_image: Yup.array(),\r\n        asset_size_in_length_type: Yup.number(),\r\n        asset_size_in_length: Yup.number(),\r\n        asset_size_in_width_type: Yup.number(),\r\n        asset_size_in_width: Yup.number(),\r\n        asset_notes_by_owner: Yup.string(),\r\n        who_can_contact: Yup.array().min(1, 'Select any one of the tenant type'),\r\n        advance_amount_for_asset: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for == 1) {  //1 => 'Rent'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset advance amount is required.').min(100, 'Asset advance amount must be valid.').max(500000, 'Asset advance amount must be valid.')\r\n            }),\r\n        monthly_rent_for_asset: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for == 1) {  //1 => 'Rent'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset monthly rent amount is required.').min(100, 'Asset monthly rent amount must be valid.').max(500000, 'Asset monthly rent amount must be valid.')\r\n            }),\r\n        lease_amount_for_asset: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for == 2) { //2 => 'Lease'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset lease amount is required.').min(100, 'Asset lease amount must be valid.')\r\n            }),\r\n        lease_period_for_asset: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for == 2) { //2 => 'Lease'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset lease period is required.').min(1, 'Asset lease period is required.')\r\n            }),\r\n        lease_period_for_asset_type: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for == 2) { //2 => 'Lease'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset lease amount type is required.')\r\n            }),\r\n        asset_price: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for  == 3) {  //3 => 'Sale'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset price is required.').min(100, 'Asset price must be valid.')\r\n            }),\r\n        asset_available_on_from: Yup.date().required('Asset available date required.'),\r\n        notice_period_for_vocate_asset: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for == 1) {  //1 => 'Rent'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Notice period to vocate is required.').min(1, 'Notice period to vocate must be valid.').test('notice_period_for_vocate_asset', 'Only numeric allowed.',(value) => Number.isInteger(value))\r\n            }),\r\n        notice_period_for_vocate_asset_type: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for == 1) {  //1 => 'Rent'\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Notice period to vocate type is required.')\r\n            }),\r\n        asset_status_now: Yup.number()\r\n            .required('Asset status is required.')\r\n            .min(1, 'Asset status is required.'),\r\n        show_my_asset_for_tenants: Yup.number()\r\n            .required('Show my asset to tenant status is required.'),\r\n        rooms: Yup.array().of(Yup.object().shape({\r\n            room_name: Yup.string()\r\n                .when('type_of_asset', {\r\n                    is: (type_of_asset, validationSchema) => {\r\n                        if(type_of_asset  == 1 || type_of_asset  == 2) {   //1 => 'House', 2 => 'Appartment'\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    then:  Yup.string().required('Room name required.')\r\n                }),\r\n            room_size_in_length: Yup.number()\r\n                .when('type_of_asset', {\r\n                    is: (type_of_asset, validationSchema) => {\r\n                        if(type_of_asset  == 1 || type_of_asset  == 2) {   //1 => 'House', 2 => 'Appartment'\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    then:  Yup.number().required('Room length required.')\r\n                }),\r\n            room_size_in_length_type: Yup.string()\r\n                .when('type_of_asset', {\r\n                    is: (type_of_asset, validationSchema) => {\r\n                        if(type_of_asset  == 1 || type_of_asset  == 2) {   //1 => 'House', 2 => 'Appartment'\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    then:  Yup.string().required('Room length type required.')\r\n                }),\r\n            room_size_in_width: Yup.number()\r\n                .when('type_of_asset', {\r\n                    is: (type_of_asset, validationSchema) => {\r\n                        if(type_of_asset  == 1 || type_of_asset  == 2) {   //1 => 'House', 2 => 'Appartment'\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    then:  Yup.number().required('Room width required.')\r\n                }),\r\n            room_size_in_width_type: Yup.string()\r\n                .when('type_of_asset', {\r\n                    is: (type_of_asset, validationSchema) => {\r\n                        if(type_of_asset  == 1 || type_of_asset  == 2) {   //1 => 'House', 2 => 'Appartment'\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    then:  Yup.string().required('Room width type required.')\r\n                })\r\n        }))\r\n    });\r\n\r\n    let custom = {\r\n        enterLeft: 'animate__backInUp'\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        console.log(values);\r\n        props.createAsset(values);\r\n    };\r\n\r\n    return (\r\n        <section id=\"AddAssets\">\r\n            <h3>Add Asset</h3>\r\n            <div className=\"container\">\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {({ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }) => (\r\n                        <Form>\r\n                            <pre>\r\n                                {JSON.stringify(values)}\r\n                            </pre>\r\n                        \r\n                            <StepWizard transitions={custom}>\r\n                                <AssetAddFormWizzardStep1 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={assetState.alloptions} />\r\n                                <AssetAddFormWizzardStep2 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={assetState.alloptions} customStyles={customStyles} onSelectChange={onSelectChange} onSelectMultipleChange={onSelectMultipleChange} />\r\n                                { (values.type_of_asset == 2 || values.type_of_asset == 1)/* 2 => 'Appartment', 1 => 'House' */ &&\r\n                                    <AssetAddFormWizzardStep3 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={assetState.alloptions} onClickDMYTypes={onClickDMYTypes} />\r\n                                }\r\n                                <AssetAddFormWizzardStep4 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={assetState.alloptions} onClickDMYTypes={onClickDMYTypes} />\r\n                                <AssetAddFormWizzardStep5 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={assetState.alloptions} customStyles={customStyles} onSelectChange={onSelectChange} onSelectMultipleChange={onSelectMultipleChange} onClickDMYTypes={onClickDMYTypes} />\r\n                                <AssetAddFormWizzardStep6 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={assetState.alloptions} customStyles={customStyles} onSelectChange={onSelectChange} onSelectMultipleChange={onSelectMultipleChange} onClickDMYTypes={onClickDMYTypes} onDobDateChange={onDobDateChange} />\r\n                                { (values.type_of_asset == 2 || values.type_of_asset == 1)/* 2 => 'Appartment', 1 => 'House' */ &&\r\n                                    <AssetAddFormWizzardStep7 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={assetState.alloptions} customStyles={customStyles} onSelectChange={onSelectChange} onSelectMultipleChange={onSelectMultipleChange} onClickDMYTypes={onClickDMYTypes} onDobDateChange={onDobDateChange} />\r\n                                }\r\n                            </StepWizard>\r\n                            <div className=\"mb-2 mt-2\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAssets);","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\actions\\assetActions.js",["218","219","220","221","222","223","224","225","226","227"],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetSubForm.js",["228","229","230","231","232","233","234","235","236","237"],"import React from 'react';\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport { FieldArray, ErrorMessage } from 'formik';\r\n\r\nfunction AssetSubForm(props) {\r\n\r\n    const onSelectChange = (e, field, values, setFieldValue) => {\r\n        //console.log(e);\r\n        if(e.__isNew__) {\r\n            //Save and select\r\n        } else {\r\n            setFieldValue(field, e.value);\r\n        }\r\n    };\r\n    \r\n    const onSelectMultipleChange = (e, field, values, setFieldValue) => {\r\n        console.log(e);\r\n    };\r\n    \r\n    \r\n    \r\n    const onClickDMYTypes = (e, field, values, setFieldValue) => {\r\n        setFieldValue(field, e.value);\r\n    }\r\n\r\n    if(props.asset_type == 'House') {\r\n        return(\r\n            <div>\r\n                <h4>\r\n                    {props.asset_type}\r\n                </h4>\r\n                <div className=\"my-2\">\r\n                    Address\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    Door No.\r\n                </div>\r\n                \r\n                <div className=\"input-group mb-3\">\r\n                    <span className=\"input-group-text\" id=\"door_numbers\">No.</span>\r\n                    <input type=\"number\" className=\"form-control max-wid-5\" placeholder=\"Door Number\" min=\"0\"  id=\"door_number\"  name=\"door_number\" aria-label=\"Door Number\" aria-describedby=\"basic-addon1\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.door_number} />\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"street\" className=\"form-label\">Street:</label>\r\n                    <input type=\"text\" className={'form-control' + (props.func.errors.street && props.func.touched.street ? ' is-invalid' : '')} id=\"street\" name=\"street\" placeholder=\"Enter street\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.street} />\r\n                    <ErrorMessage name=\"street\" component=\"span\" className=\"text-danger\" />\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"nagar\" className=\"form-label\">Nagar:</label>\r\n                    <input type=\"text\" className={'form-control' + (props.func.errors.nagar && props.func.touched.nagar ? ' is-invalid' : '')} id=\"nagar\" name=\"nagar\" placeholder=\"Enter street\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.nagar} />\r\n                    <ErrorMessage name=\"nagar\" component=\"span\" className=\"text-danger\" />\r\n                </div>\r\n                \r\n                <div className=\"my-2\">\r\n                    <div className=\"my-2\">\r\n                        City:\r\n                    </div>\r\n                    <CreatableSelect formatCreateLabel={(inputValue) => 'Add or Create \"'+inputValue+'\"'} className=\"basic-single\" classNamePrefix=\"select\" id=\"city\" name=\"city\" options={props.options.city_options} onChange={e => onSelectChange(e, 'city', props.func.values, props.func.setFieldValue)} defaultValue={props.func.values.city} />\r\n                </div>\r\n                \r\n                <div className=\"my-2\">\r\n                    <div className=\"my-2\">\r\n                        State:\r\n                    </div>\r\n                    <CreatableSelect formatCreateLabel={(inputValue) => 'Add or Create \"'+inputValue+'\"'} className=\"basic-single\" classNamePrefix=\"select\" id=\"state\" name=\"state\" options={props.options.state_options} onChange={e => onSelectChange(e, 'state', props.func.values, props.func.setFieldValue)} defaultValue={props.func.values.state} />\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"pincode\" className=\"form-label\">Pincode:</label>\r\n                    <input type=\"number\" className={'form-control' + (props.func.errors.pincode && props.func.touched.pincode ? ' is-invalid' : '')} min=\"0\" id=\"pincode\" name=\"pincode\" placeholder=\"Enter pincode\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.pincode} />\r\n                    <ErrorMessage name=\"street\" component=\"span\" className=\"text-danger\" />\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"landmark\" className=\"form-label\">Landmark</label>\r\n                    <textarea className=\"form-control\" id=\"landmark\" name=\"landmark\" rows=\"3\"  onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.landmark}></textarea>\r\n                    <ErrorMessage name=\"landmark\" component=\"span\" className=\"text-danger\" />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"number_of_rooms\" className=\"form-label\">Number of Rooms:</label>\r\n                    <input type=\"number\" className={'form-control' + (props.func.errors.number_of_rooms && props.func.touched.number_of_rooms ? ' is-invalid' : '')} min=\"0\" id=\"number_of_rooms\" name=\"number_of_rooms\" placeholder=\"Enter number of rooms\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.number_of_rooms} />\r\n                    <ErrorMessage name=\"number_of_rooms\" component=\"span\" className=\"text-danger\" />\r\n                </div>\r\n\r\n                <div className=\"mb-2\">\r\n                    BHK\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"number\" className=\"form-control\" id=\"bhk\" name=\"bhk\" placeholder=\"BHK\" aria-label=\"BHK\" aria-describedby=\"bhks\" min=\"0\" placeholder=\"Enter BHK\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.bhk} />\r\n                    <span className=\"input-group-text\" id=\"bhks\">BHK</span>\r\n                </div>\r\n\r\n                <div className=\"mb-2\">\r\n                    Age of Asset:\r\n                </div>\r\n                <div className=\"input-group mb-3\">    \r\n                    <input type=\"number\" className={'form-control' + (props.func.errors.age_of_asset && props.func.touched.age_of_asset ? ' is-invalid' : '')} aria-label=\"Asset age\" min=\"0\" name=\"age_of_asset\" id=\"age_of_asset\" placeholder=\"Enter asset age\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.age_of_asset} />\r\n                    <ErrorMessage name=\"age_of_asset\" component=\"span\" className=\"text-danger\" />\r\n                    <Dropdown options={props.options.days_month_years_options} onChange={e => onClickDMYTypes(e, 'age_of_asset_type', props.func.values, props.func.setFieldValue)} value={props.func.values.age_of_asset_type} placeholder=\"Select an option\" />\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"asset_main_image\" className=\"form-label\">Asset Image</label>\r\n                    <input id=\"asset_main_image\" name=\"asset_main_image\" type=\"file\" onChange={(event) => { props.func.setFieldValue(\"asset_main_image\", event.currentTarget.files[0]); }} className=\"form-control\" />\r\n                </div>\r\n                \r\n                <div className=\"mb-2\">\r\n                    Asset width:\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"number\" className={'form-control' + (props.func.errors.asset_size_in_width && props.func.touched.asset_size_in_width ? ' is-invalid' : '')} aria-label=\"Asset width\" name=\"asset_size_in_width\" id=\"asset_size_in_width\" min=\"0\" placeholder=\"Enter asset width\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.asset_size_in_width} />\r\n                    <ErrorMessage name=\"asset_size_in_width\" component=\"span\" className=\"text-danger\" />\r\n                    <Dropdown options={props.options.asset_height_width_options} onChange={e => onClickDMYTypes(e, 'asset_size_in_width_type', props.func.values, props.func.setFieldValue)} value={props.func.values.asset_size_in_width_type} placeholder=\"Select an option\" />\r\n                </div>\r\n                \r\n                <div className=\"mb-2\">\r\n                    Asset height:\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"number\" className={'form-control' + (props.func.errors.asset_size_in_height && props.func.touched.asset_size_in_height ? ' is-invalid' : '')} aria-label=\"Asset height\" name=\"asset_size_in_height\" id=\"asset_size_in_height\" min=\"0\" placeholder=\"Enter asset height\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.asset_size_in_height} />\r\n                    <ErrorMessage name=\"asset_size_in_height\" component=\"span\" className=\"text-danger\" />\r\n                    <Dropdown options={props.options.asset_height_width_options} onChange={e => onClickDMYTypes(e, 'asset_size_in_height_type', props.func.values, props.func.setFieldValue)} value={props.func.values.asset_size_in_height_type} placeholder=\"Select an option\" />\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"asset_notes_by_owner\" className=\"form-label\">Notes or hints about asset</label>\r\n                    <textarea className=\"form-control\" id=\"asset_notes_by_owner\" name=\"asset_notes_by_owner\" rows=\"3\"  onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.asset_notes_by_owner}></textarea>\r\n                    <ErrorMessage name=\"asset_notes_by_owner\" component=\"span\" className=\"text-danger\" />\r\n                </div>\r\n                \r\n                <div className=\"my-2\">\r\n                    <div className=\"my-2\">\r\n                        Who can contacts you:\r\n                    </div>\r\n                    <CreatableSelect isMulti formatCreateLabel={(inputValue) => 'Add or Create \"'+inputValue+'\"'} className=\"basic-single\" classNamePrefix=\"select\" id=\"who_can_contact\" name=\"who_can_contact\" options={props.options.who_can_contact_options} onChange={e => onSelectMultipleChange(e, 'who_can_contact', props.func.values, props.func.setFieldValue)} defaultValue={props.func.values.who_can_contact} />\r\n                </div>\r\n                { props.func.values.asset_for == 'Rent' && \r\n                    (\r\n                        <div>\r\n                            <div className=\"mb-2\">\r\n                                Advance Amount:\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"asset_amount_rupees\">Rs.</span>\r\n                                <input type=\"number\" aria-label=\"Advance Amount for Asset\" aria-describedby=\"asset_amount_rupees\" className={'form-control' + (props.func.errors.advance_amount_for_asset && props.func.touched.advance_amount_for_asset ? ' is-invalid' : '')} id=\"advance_amount_for_asset\" name=\"advance_amount_for_asset\" placeholder=\"Enter advance amount for asset\" min=\"0\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.advance_amount_for_asset} />\r\n                                <ErrorMessage name=\"advance_amount_for_asset\" component=\"span\" className=\"text-danger\" />\r\n                            </div>\r\n                            \r\n                            <div className=\"mb-2\">\r\n                                Monthly Rent Amount:\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"asset_monthly_rupees\">Rs.</span>\r\n                                <input type=\"number\" aria-label=\"Rent Amount for Asset\" aria-describedby=\"asset_monthly_rupees\" className={'form-control' + (props.func.errors.monthly_rent_for_asset && props.func.touched.monthly_rent_for_asset ? ' is-invalid' : '')} id=\"monthly_rent_for_asset\" name=\"monthly_rent_for_asset\" placeholder=\"Enter monthly rent amount for asset\" min=\"0\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.monthly_rent_for_asset} />\r\n                                <ErrorMessage name=\"monthly_rent_for_asset\" component=\"span\" className=\"text-danger\" />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                { props.func.values.asset_for == 'Lease' &&\r\n                    (\r\n                        <div>\r\n                            <div className=\"mb-2\">\r\n                                Lease Amount:\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"asset_lease_rupees\">Rs.</span>\r\n                                <input type=\"number\" aria-label=\"Lease Amount for Asset\" aria-describedby=\"asset_lease_rupees\" className={'form-control' + (props.func.errors.lease_amount_for_asset && props.func.touched.lease_amount_for_asset ? ' is-invalid' : '')} id=\"lease_amount_for_asset\" name=\"lease_amount_for_asset\" placeholder=\"Enter advance amount for asset\" min=\"0\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.lease_amount_for_asset} />\r\n                                <ErrorMessage name=\"lease_amount_for_asset\" component=\"span\" className=\"text-danger\" />\r\n                            </div>\r\n                            \r\n                            <div className=\"mb-2\">\r\n                                Lease Period:\r\n                            </div>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"number\" className={'form-control' + (props.func.errors.lease_period_for_asset && props.func.touched.lease_period_for_asset ? ' is-invalid' : '')} aria-label=\"Asset lease period\" name=\"lease_period_for_asset\" id=\"lease_period_for_asset\" placeholder=\"Enter asset lease period\" min=\"0\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.lease_period_for_asset} />\r\n                                <ErrorMessage name=\"lease_period_for_asset\" component=\"span\" className=\"text-danger\" />\r\n                                <Dropdown options={props.options.days_month_years_options} onChange={e => onClickDMYTypes(e, 'lease_period_for_asset_type', props.func.values, props.func.setFieldValue)} value={props.func.values.lease_period_for_asset_type} placeholder=\"Select an option\" />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n                \r\n                \r\n               \r\n                <div className=\"mb-2\">\r\n                    Asset Available within:\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"number\" className={'form-control' + (props.func.errors.asset_available_within && props.func.touched.asset_available_within ? ' is-invalid' : '')} aria-label=\"Asset available within\"  min=\"0\" name=\"asset_available_within\" id=\"asset_available_within\" placeholder=\"Enter asset within in avaible\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.asset_available_within} />\r\n                    <ErrorMessage name=\"asset_available_within\" component=\"span\" className=\"text-danger\" />\r\n                    <Dropdown options={props.options.days_month_years_options} onChange={e => onClickDMYTypes(e, 'asset_available_within_type', props.func.values, props.func.setFieldValue)} value={props.func.values.asset_available_within_type} placeholder=\"Select an option\" />\r\n                </div>\r\n\r\n                <div className=\"mb-2\">\r\n                    Notice period for vocate asset:\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"number\" className={'form-control' + (props.func.errors.notice_period_for_vocate_asset && props.func.touched.notice_period_for_vocate_asset ? ' is-invalid' : '')} aria-label=\"Asset notice period for vocate\" name=\"notice_period_for_vocate_asset\" id=\"notice_period_for_vocate_asset\"  min=\"0\" placeholder=\"Enter asset notice period for vocate\" onChange={props.func.handleChange} onBlur={props.func.handleBlur} value={props.func.values.notice_period_for_vocate_asset} />\r\n                    <ErrorMessage name=\"notice_period_for_vocate_asset\" component=\"span\" className=\"text-danger\" />\r\n                    <Dropdown options={props.options.days_month_years_options} onChange={e => onClickDMYTypes(e, 'notice_period_for_vocate_asset_type', props.func.values, props.func.setFieldValue)} value={props.func.values.notice_period_for_vocate_asset_type} placeholder=\"Select an option\" />\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <div className=\"my-2\">\r\n                        Asset status now:\r\n                    </div>\r\n                    <CreatableSelect formatCreateLabel={(inputValue) => 'Add or Create \"'+inputValue+'\"'} className=\"basic-single\" classNamePrefix=\"select\" id=\"asset_status_now\" name=\"asset_status_now\" options={props.options.asset_status_now_options} onChange={e => onSelectChange(e, 'asset_status_now', props.func.values, props.func.setFieldValue)} defaultValue={props.func.values.onSelectChange} />\r\n                </div>\r\n\r\n                <FieldArray\r\n                    name=\"arrayShowMyAssetForTenantsTypes\"\r\n                    render={arrayHelpers => (\r\n                        <div className=\"my-2\">\r\n                            <div className=\"mb-2\">\r\n                                Can we show your asset show to tenants?\r\n                                <ErrorMessage name=\"show_my_asset_for_tenants\" component=\"span\" className=\"text-danger\" />\r\n                            </div>\r\n                            {props.options.show_my_asset_for_tenants_options.map((type, index) => \r\n                                (\r\n                                    <div className=\"form-check form-check-inline\"  key={index}>\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"show_my_asset_for_tenants\" id={'show_my_asset_for_tenants_'+index} value={type.value} onChange={props.func.handleChange} onBlur={props.func.handleBlur} checked={props.func.values.show_my_asset_for_tenants == type.value } />\r\n                                        <label className=\"form-check-label\" htmlFor={'show_my_asset_for_tenants_'+index}>{type.label}</label>\r\n                                    </div>\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    } else if(props.asset_type == 'Appartment') {\r\n        return(\r\n            <div>\r\n                <h4>\r\n                    {props.asset_type}\r\n                </h4>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if(props.asset_type == 'Store') {\r\n        return(\r\n            <div>\r\n                <h4>\r\n                    {props.asset_type}\r\n                </h4>\r\n            </div>\r\n        );\r\n    } else if(props.asset_type == 'Koddon') {\r\n        return(\r\n            <div>\r\n                <h4>\r\n                    {props.asset_type}\r\n                </h4>\r\n            </div>\r\n        );\r\n    } else if(props.asset_type == 'Land') {\r\n        return(\r\n            <div>\r\n                <h4>\r\n                    {props.asset_type}\r\n                </h4>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AssetSubForm;",["238","239"],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep1.js",["240","241","242","243","244","245","246"],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep2.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"import React from 'react';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport LoadingIndicator from '../common/LoadingIndicator';\r\nimport { FieldArray, ErrorMessage } from 'formik';\r\n\r\n\r\nfunction AssetAddFormWizzardStep2(props) {\r\n    window.scrollTo(0, 0);\r\n    const handleNext = async () => {\r\n        await props.formikProps.setTouched({['asset_name']:true, ['door_number']:true, ['address_hint']:true, ['street']:true, ['nagar']:true, ['city']:true, ['state']:true, ['pincode']:true, ['landmark']:true});\r\n        if(props.formikProps.errors.asset_name == undefined && props.formikProps.errors.door_number == undefined && props.formikProps.errors.address_hint == undefined && props.formikProps.errors.street == undefined && props.formikProps.errors.nagar == undefined && props.formikProps.errors.city == undefined && props.formikProps.errors.state == undefined && props.formikProps.errors.pincode == undefined && props.formikProps.errors.landmark == undefined) {\r\n            props.nextStep();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4>\r\n                {props.formikProps.values.type_of_asset}\r\n            </h4>\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"asset_name\" className=\"form-label\">Asset Name:</label>\r\n                <input type=\"text\" className={'form-control' + (props.formikProps.errors.asset_name && props.formikProps.touched.asset_name ? ' is-invalid' : '')} id=\"asset_name\" name=\"asset_name\" placeholder=\"Enter your last name\" onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} value={props.formikProps.values.asset_name} />\r\n                <ErrorMessage name=\"asset_name\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n            \r\n            <div className=\"my-2\">\r\n                Address\r\n            </div>\r\n\r\n            { props.formikProps.values.type_of_asset != 5 /*5 => 'Land' */ && (\r\n                    <div>\r\n                        <div className=\"my-2\">\r\n                            Door No.\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <span className=\"input-group-text\" id=\"door_numbers\">No.</span>\r\n                            <input type=\"number\" className=\"form-control max-wid-5\" placeholder=\"Enter door number\" min=\"0\" id=\"door_number\"  name=\"door_number\" aria-label=\"Door Number\" aria-describedby=\"door_numbers\" onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} value={props.formikProps.values.door_number} />\r\n                            <input type=\"text\" className={'form-control ml-3' + (props.formikProps.errors.address_hint && props.formikProps.touched.address_hint ? ' is-invalid' : '')} id=\"address_hint\" name=\"address_hint\" placeholder=\"\" onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} value={props.formikProps.values.address_hint} />\r\n                        </div>\r\n                        <div className=\"mt-n2 mb-3\">\r\n                            <ErrorMessage name=\"door_number\" component=\"span\" className=\"text-danger\" />\r\n                            <ErrorMessage name=\"address_hint\" component=\"span\" className=\"text-danger\" />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n            { props.formikProps.values.type_of_asset == 5 /*5 => 'Land' */ && (\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"address_hint\">Hint</label>\r\n                        <input type=\"text\" className={'form-control' + (props.formikProps.errors.address_hint && props.formikProps.touched.address_hint ? ' is-invalid' : '')} id=\"address_hint\" name=\"address_hint\" placeholder=\"\" onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} value={props.formikProps.values.address_hint} />\r\n                        <ErrorMessage name=\"address_hint\" component=\"span\" className=\"text-danger\" />\r\n                    </div>                                        \r\n                )\r\n            }\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"street\" className=\"form-label\">Street:</label>\r\n                <input type=\"text\" className={'form-control' + (props.formikProps.errors.street && props.formikProps.touched.street ? ' is-invalid' : '')} id=\"street\" name=\"street\" placeholder=\"Enter street\" onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} value={props.formikProps.values.street} />\r\n                <ErrorMessage name=\"street\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n            \r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"nagar\" className=\"form-label\">Nagar:</label>\r\n                <input type=\"text\" className={'form-control' + (props.formikProps.errors.nagar && props.formikProps.touched.nagar ? ' is-invalid' : '')} id=\"nagar\" name=\"nagar\" placeholder=\"Enter nagar\" onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} value={props.formikProps.values.nagar} />\r\n                <ErrorMessage name=\"nagar\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n            \r\n            <div className=\"my-2\">\r\n                <div className=\"my-2\">\r\n                    City:\r\n                </div>\r\n                <CreatableSelect isLoading={props.formikProps.values.city_is_loading} formatCreateLabel={(inputValue) => 'Add or Create \"'+inputValue+'\"'} className=\"basic-single\" classNamePrefix=\"select\" id=\"city\" name=\"city\" options={props.all_options.city_options} onChange={e => props.onSelectChange(e, 'city', props.formikProps.values, props.formikProps.setFieldValue)} defaultValue={props.formikProps.values.city} components={{LoadingIndicator}} styles={props.customStyles} />\r\n                <ErrorMessage name=\"city\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n            \r\n            <div className=\"my-2\">\r\n                <div className=\"my-2\">\r\n                    State:\r\n                </div>\r\n                <CreatableSelect isLoading={props.formikProps.values.state_is_loading} formatCreateLabel={(inputValue) => 'Add or Create \"'+inputValue+'\"'} className=\"basic-single\" classNamePrefix=\"select\" id=\"state\" name=\"state\" options={props.all_options.state_options} onChange={e => props.onSelectChange(e, 'state', props.formikProps.values, props.formikProps.setFieldValue)} defaultValue={props.formikProps.values.state} components={{LoadingIndicator}} styles={props.customStyles} />\r\n                <ErrorMessage name=\"state\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n            \r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"pincode\" className=\"form-label\">Pincode:</label>\r\n                <input type=\"number\" className={'form-control' + (props.formikProps.errors.pincode && props.formikProps.touched.pincode ? ' is-invalid' : '')} min=\"0\" id=\"pincode\" name=\"pincode\" placeholder=\"Enter pincode\" onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} value={props.formikProps.values.pincode} />\r\n                <ErrorMessage name=\"pincode\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n            \r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"landmark\" className=\"form-label\">Landmark</label>\r\n                <textarea className=\"form-control\" id=\"landmark\" name=\"landmark\" rows=\"3\"  onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} value={props.formikProps.values.landmark}></textarea>\r\n                <ErrorMessage name=\"landmark\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n\r\n            <p>\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={handleNext}>Next Step</button>\r\n                <button type=\"button\" className=\"btn btn-info\" onClick={props.previousStep}>Previous</button>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\nexport default AssetAddFormWizzardStep2;","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\common\\LoadingIndicator.js",[],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep3.js",["268","269","270","271","272","273","274","275","276","277"],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep4.js",["278","279","280","281","282","283","284","285","286","287","288","289"],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep5.js",["290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307"],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep6.js",["308","309","310","311","312","313","314","315","316","317","318","319"],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\assets\\AssetAddFormWizzardStep7.js",["320","321","322"],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\commonFunctions\\Validations.js",["323"],"export function isNumber(evt) {\r\n    var iKeyCode = (evt.which) ? evt.which : evt.keyCode\r\n    if (iKeyCode != 46 && iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))\r\n        return false;\r\n\r\n    return true;\r\n}\r\n\r\nexport function validateSpecialCharacters() {\r\n    var regex = /^[A-Za-z0-9 ]+$/\r\n    //Validate TextBox value against the Regex.\r\n    var isValid = regex.test(document.getElementById(\"txtName\").value);\r\n    if (!isValid) {\r\n        alert(\"Contains Special Characters.\");\r\n    } else {\r\n        alert(\"Does not contain Special Characters.\");\r\n    }\r\n\r\n    return isValid;\r\n}","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\components\\pages\\common\\FileUploadComponent.js",["324","325","326","327"],"import React, { useCallback, useState } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\n\r\nconst thumbsContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: 'auto',\r\n  height: '100%'\r\n};\r\n\r\n\r\nfunction FileUploadComponent(props) {\r\n  \r\n  const [files, setFiles] = useState([]);\r\n  const [filesData, setFilesData] = useState([]);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const reader = new FileReader()\r\n      reader.onabort = () => console.log('file reading was aborted')\r\n      reader.onerror = () => console.log('file reading has failed')\r\n      reader.onloadend = () => {\r\n      // Do whatever you want with the file contents\r\n        const binaryStr = reader.result\r\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })));\r\n        \r\n        setFilesData(filesData.push(binaryStr));\r\n        props.setField.setFieldValue(props.fieldName, filesData)\r\n        console.log(binaryStr);\r\n      }\r\n      reader.readAsText(file);\r\n    })\r\n  }, []);\r\n  const {getRootProps, getInputProps, acceptedFiles, fileRejections} = useDropzone({noDrag: true, multiple: true, maxSize: 900000, onDrop, maxFiles:props.maxFiles, accept:props.fileTypes });\r\n  const acceptedFileItems = files.map(file => (\r\n    <div style={thumb} key={file.name}>\r\n      <div style={thumbInner}>\r\n        <img\r\n          src={file.preview}\r\n          style={img}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n  const fileRejectionItems = fileRejections.map(({ file, errors }) => (\r\n    <li key={file.path} className=\"text-danger\">\r\n      {file.path} - {file.size} bytes\r\n      <ul>\r\n        {errors.map(e => (\r\n          <li key={e.code}>{e.message}</li>\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone'})}>\r\n        <button type=\"button\" className=\"btn btn-sm btn-primary\">Upload File</button>\r\n        <input {...getInputProps()} />\r\n      </div>\r\n      <aside>\r\n        <h4>Files</h4>\r\n        <ul>{acceptedFileItems}</ul>\r\n        <ul>{fileRejectionItems}</ul>\r\n      </aside>\r\n    </section>\r\n  );\r\n}\r\nexport default FileUploadComponent;","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\store\\store.js",["328"],"import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    assetReducer,\r\n    assetReducer1,\r\n} from '../reducers/assetReducer';\r\nimport { userReducer } from '../reducers/userReducer';\r\n\r\nconst reducer = combineReducers({\r\n    userState:userReducer,\r\n    assetState: assetReducer,\r\n    assetState1: assetReducer1\r\n})\r\n\r\nconst allOptions = localStorage.getItem('allopt')\r\n  ? JSON.parse(localStorage.getItem('allopt'))\r\n  : {}\r\n\r\nconst initialState = {\r\n    assetState: {    //key should be from above any one of the reducer\r\n        alloptions: allOptions\r\n    }\r\n}\r\n  \r\n  const middleware = [thunk]\r\n  \r\n  const store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  )\r\n  \r\n  export default store;","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\reducers\\assetReducer.js",["329","330"],"import {\r\n    SITE_LOADER,\r\n    TYPE_OF_ASSET_OPTIONS, \r\n    ASSET_FOR_OPTIONS,\r\n    WHO_CAN_CONTACT_OPTIONS,\r\n    SET_WHO_CAN_CONTACT_OPTIONS,\r\n    ASSET_STATUS_NOW_OPTIONS,\r\n    SHOW_MY_ASSET_FOR_TENANTS_OPTIONS,\r\n    LIKE_OR_DISLIKE_OPTIONS,\r\n    IS_PROPOSAL_CANCELLED_OPTIONS,\r\n    ASSET_LENGTH_WIDTH_OPTIONS,\r\n    ALL_OPTIONS,\r\n    ALLOPT,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT\r\n} from '../actions/constants';\r\n\r\n\r\nconst allOptions = localStorage.getItem('alloptions')\r\n  ? JSON.parse(localStorage.getItem('alloptions'))\r\n  : {}\r\n\r\nconst initialState = {\r\n    site_loader: false,\r\n    alloptions: allOptions\r\n};\r\n\r\nexport const assetReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SITE_LOADER: {\r\n            return {...state }\r\n        }\r\n        case TYPE_OF_ASSET_OPTIONS: {\r\n            return { ...state }\r\n        }\r\n        case ASSET_FOR_OPTIONS: {\r\n            return { ...state }\r\n        }\r\n        case WHO_CAN_CONTACT_OPTIONS: {\r\n            return { ...state }\r\n        }\r\n        case ASSET_STATUS_NOW_OPTIONS: {\r\n            return { ...state }\r\n        }\r\n        case SHOW_MY_ASSET_FOR_TENANTS_OPTIONS: {\r\n            return { ...state }\r\n        }\r\n        case LIKE_OR_DISLIKE_OPTIONS: {\r\n            return { ...state }\r\n        }\r\n        case IS_PROPOSAL_CANCELLED_OPTIONS: {\r\n            return { ...state }\r\n        }\r\n        case ASSET_LENGTH_WIDTH_OPTIONS: {\r\n            return { ...state }\r\n        }\r\n        case ALL_OPTIONS: {\r\n            let alloptions = action.payload;\r\n            localStorage.setItem('alloptions', JSON.stringify(alloptions));\r\n            return { ...state, alloptions }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const assetReducer1 = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_LOGIN_FAIL:\r\n        return { }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n}","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\reducers\\userReducer.js",["331","332"],"import {\r\n    SITE_LOADER,\r\n    USER_INFO,\r\n    USER_LOADER,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    SIGNUP_FORM,\r\n    SIGNUP_RESULT,\r\n    SIGNUP_ERROR\r\n} from '../constants/constants';\r\n\r\n\r\nconst user_info = localStorage.getItem('user_info')\r\n  ? JSON.parse(localStorage.getItem('user_info'))\r\n  : {}\r\n\r\nconst initialState = {\r\n    site_loader: false,\r\n    user_loader: false,\r\n    user_info: user_info,\r\n    signup_result:{}\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SITE_LOADER: {\r\n            return {...state }\r\n        }\r\n        case SIGNUP_FORM: {\r\n            return {...state, signup_form:action.payload, user_loader: true }\r\n        }\r\n        case SIGNUP_RESULT: {\r\n            return {...state, signup_result:action.payload, user_loader: false }\r\n        }\r\n        case SIGNUP_ERROR: {\r\n            return {...state, signup_error:action.payload, user_loader: false }\r\n        }\r\n        \r\n        case USER_LOADER: {\r\n            return {...state, user_loader:action.payload }\r\n        }\r\n        case USER_INFO: {\r\n            let user_details = action.payload;\r\n            return { ...state, user_info:user_details }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\actions\\userActions.js",["333","334"],"import axios from 'axios';\r\nimport { USER_LOADER, SIGNUP_RESULT, SIGNUP_ERROR } from '../constants/constants';\r\nimport { USERSIGNUP } from '../constants/Apiconstants';\r\n\r\n\r\nexport const signup = () => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const { userState } = state;\r\n    console.log('Action==>'+JSON.stringify(userState.signup_form));\r\n    \r\n    try {\r\n        const { data } = await axios.post(\r\n            USERSIGNUP,\r\n            userState.signup_form\r\n        );\r\n        dispatch({type:SIGNUP_RESULT, payload: data});\r\n    } catch(error) {\r\n        let tempData = { status: 'error', message: 'Something went wrong', 'error': error  };\r\n        dispatch({type:SIGNUP_RESULT, payload: tempData});\r\n    }\r\n    \r\n    \r\n    //dispatch({type:USER_LOADER, payload: false});\r\n}","D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\constants\\constants.js",[],"D:\\Apache\\Apache24\\htdocs\\Server\\React\\DemoProject\\demo\\src\\constants\\Apiconstants.js",[],{"ruleId":"335","severity":1,"message":"336","line":3,"column":8,"nodeType":"337","messageId":"338","endLine":3,"endColumn":14},{"ruleId":"339","replacedBy":"340"},{"ruleId":"341","replacedBy":"342"},{"ruleId":"335","severity":1,"message":"343","line":2,"column":24,"nodeType":"337","messageId":"338","endLine":2,"endColumn":29},{"ruleId":"335","severity":1,"message":"344","line":2,"column":31,"nodeType":"337","messageId":"338","endLine":2,"endColumn":41},{"ruleId":"335","severity":1,"message":"345","line":11,"column":10,"nodeType":"337","messageId":"338","endLine":11,"endColumn":21},{"ruleId":"335","severity":1,"message":"346","line":23,"column":9,"nodeType":"337","messageId":"338","endLine":23,"endColumn":17},{"ruleId":"335","severity":1,"message":"347","line":24,"column":9,"nodeType":"337","messageId":"338","endLine":24,"endColumn":16},{"ruleId":"335","severity":1,"message":"348","line":28,"column":28,"nodeType":"337","messageId":"338","endLine":28,"endColumn":40},{"ruleId":"349","severity":1,"message":"350","line":34,"column":46,"nodeType":"351","messageId":"352","endLine":34,"endColumn":48},{"ruleId":"349","severity":1,"message":"353","line":36,"column":37,"nodeType":"351","messageId":"352","endLine":36,"endColumn":39},{"ruleId":"349","severity":1,"message":"353","line":38,"column":44,"nodeType":"351","messageId":"352","endLine":38,"endColumn":46},{"ruleId":"335","severity":1,"message":"354","line":63,"column":11,"nodeType":"337","messageId":"338","endLine":63,"endColumn":27},{"ruleId":"349","severity":1,"message":"353","line":112,"column":36,"nodeType":"351","messageId":"352","endLine":112,"endColumn":38},{"ruleId":"349","severity":1,"message":"353","line":184,"column":206,"nodeType":"351","messageId":"352","endLine":184,"endColumn":208},{"ruleId":"349","severity":1,"message":"353","line":188,"column":204,"nodeType":"351","messageId":"352","endLine":188,"endColumn":206},{"ruleId":"335","severity":1,"message":"355","line":1,"column":27,"nodeType":"337","messageId":"338","endLine":1,"endColumn":31},{"ruleId":"335","severity":1,"message":"356","line":2,"column":35,"nodeType":"337","messageId":"338","endLine":2,"endColumn":40},{"ruleId":"335","severity":1,"message":"357","line":2,"column":42,"nodeType":"337","messageId":"338","endLine":2,"endColumn":50},{"ruleId":"335","severity":1,"message":"358","line":2,"column":52,"nodeType":"337","messageId":"338","endLine":2,"endColumn":58},{"ruleId":"335","severity":1,"message":"359","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":25},{"ruleId":"335","severity":1,"message":"360","line":2,"column":24,"nodeType":"337","messageId":"338","endLine":2,"endColumn":30},{"ruleId":"335","severity":1,"message":"361","line":3,"column":10,"nodeType":"337","messageId":"338","endLine":3,"endColumn":21},{"ruleId":"335","severity":1,"message":"362","line":3,"column":23,"nodeType":"337","messageId":"338","endLine":3,"endColumn":34},{"ruleId":"335","severity":1,"message":"363","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":25},{"ruleId":"335","severity":1,"message":"364","line":1,"column":28,"nodeType":"337","messageId":"338","endLine":1,"endColumn":36},{"ruleId":"335","severity":1,"message":"361","line":2,"column":19,"nodeType":"337","messageId":"338","endLine":2,"endColumn":30},{"ruleId":"335","severity":1,"message":"344","line":3,"column":24,"nodeType":"337","messageId":"338","endLine":3,"endColumn":34},{"ruleId":"335","severity":1,"message":"343","line":3,"column":36,"nodeType":"337","messageId":"338","endLine":3,"endColumn":41},{"ruleId":"335","severity":1,"message":"365","line":3,"column":43,"nodeType":"337","messageId":"338","endLine":3,"endColumn":55},{"ruleId":"335","severity":1,"message":"366","line":5,"column":8,"nodeType":"337","messageId":"338","endLine":5,"endColumn":18},{"ruleId":"335","severity":1,"message":"367","line":6,"column":8,"nodeType":"337","messageId":"338","endLine":6,"endColumn":14},{"ruleId":"335","severity":1,"message":"368","line":7,"column":8,"nodeType":"337","messageId":"338","endLine":7,"endColumn":23},{"ruleId":"335","severity":1,"message":"369","line":8,"column":8,"nodeType":"337","messageId":"338","endLine":8,"endColumn":16},{"ruleId":"335","severity":1,"message":"370","line":10,"column":10,"nodeType":"337","messageId":"338","endLine":10,"endColumn":15},{"ruleId":"335","severity":1,"message":"371","line":10,"column":17,"nodeType":"337","messageId":"338","endLine":10,"endColumn":23},{"ruleId":"335","severity":1,"message":"372","line":12,"column":10,"nodeType":"337","messageId":"338","endLine":12,"endColumn":21},{"ruleId":"335","severity":1,"message":"373","line":12,"column":23,"nodeType":"337","messageId":"338","endLine":12,"endColumn":34},{"ruleId":"335","severity":1,"message":"374","line":12,"column":36,"nodeType":"337","messageId":"338","endLine":12,"endColumn":63},{"ruleId":"335","severity":1,"message":"375","line":13,"column":25,"nodeType":"337","messageId":"338","endLine":13,"endColumn":36},{"ruleId":"349","severity":1,"message":"353","line":28,"column":26,"nodeType":"351","messageId":"352","endLine":28,"endColumn":28},{"ruleId":"349","severity":1,"message":"353","line":33,"column":33,"nodeType":"351","messageId":"352","endLine":33,"endColumn":35},{"ruleId":"349","severity":1,"message":"353","line":37,"column":33,"nodeType":"351","messageId":"352","endLine":37,"endColumn":35},{"ruleId":"349","severity":1,"message":"353","line":91,"column":56,"nodeType":"351","messageId":"352","endLine":91,"endColumn":58},{"ruleId":"376","severity":1,"message":"377","line":101,"column":13,"nodeType":"337","messageId":"378","endLine":101,"endColumn":19},{"ruleId":"349","severity":1,"message":"350","line":183,"column":39,"nodeType":"351","messageId":"352","endLine":183,"endColumn":41},{"ruleId":"349","severity":1,"message":"350","line":183,"column":62,"nodeType":"351","messageId":"352","endLine":183,"endColumn":64},{"ruleId":"349","severity":1,"message":"350","line":183,"column":85,"nodeType":"351","messageId":"352","endLine":183,"endColumn":87},{"ruleId":"349","severity":1,"message":"353","line":207,"column":39,"nodeType":"351","messageId":"352","endLine":207,"endColumn":41},{"ruleId":"349","severity":1,"message":"353","line":207,"column":62,"nodeType":"351","messageId":"352","endLine":207,"endColumn":64},{"ruleId":"349","severity":1,"message":"353","line":218,"column":39,"nodeType":"351","messageId":"352","endLine":218,"endColumn":41},{"ruleId":"349","severity":1,"message":"353","line":218,"column":62,"nodeType":"351","messageId":"352","endLine":218,"endColumn":64},{"ruleId":"349","severity":1,"message":"350","line":229,"column":38,"nodeType":"351","messageId":"352","endLine":229,"endColumn":40},{"ruleId":"349","severity":1,"message":"350","line":240,"column":38,"nodeType":"351","messageId":"352","endLine":240,"endColumn":40},{"ruleId":"349","severity":1,"message":"353","line":258,"column":34,"nodeType":"351","messageId":"352","endLine":258,"endColumn":36},{"ruleId":"349","severity":1,"message":"353","line":269,"column":34,"nodeType":"351","messageId":"352","endLine":269,"endColumn":36},{"ruleId":"349","severity":1,"message":"353","line":280,"column":34,"nodeType":"351","messageId":"352","endLine":280,"endColumn":36},{"ruleId":"349","severity":1,"message":"353","line":291,"column":34,"nodeType":"351","messageId":"352","endLine":291,"endColumn":36},{"ruleId":"349","severity":1,"message":"353","line":302,"column":34,"nodeType":"351","messageId":"352","endLine":302,"endColumn":36},{"ruleId":"349","severity":1,"message":"353","line":313,"column":35,"nodeType":"351","messageId":"352","endLine":313,"endColumn":37},{"ruleId":"349","severity":1,"message":"353","line":325,"column":34,"nodeType":"351","messageId":"352","endLine":325,"endColumn":36},{"ruleId":"349","severity":1,"message":"353","line":336,"column":34,"nodeType":"351","messageId":"352","endLine":336,"endColumn":36},{"ruleId":"349","severity":1,"message":"353","line":353,"column":43,"nodeType":"351","messageId":"352","endLine":353,"endColumn":45},{"ruleId":"349","severity":1,"message":"353","line":353,"column":66,"nodeType":"351","messageId":"352","endLine":353,"endColumn":68},{"ruleId":"349","severity":1,"message":"353","line":364,"column":43,"nodeType":"351","messageId":"352","endLine":364,"endColumn":45},{"ruleId":"349","severity":1,"message":"353","line":364,"column":66,"nodeType":"351","messageId":"352","endLine":364,"endColumn":68},{"ruleId":"349","severity":1,"message":"353","line":375,"column":43,"nodeType":"351","messageId":"352","endLine":375,"endColumn":45},{"ruleId":"349","severity":1,"message":"353","line":375,"column":66,"nodeType":"351","messageId":"352","endLine":375,"endColumn":68},{"ruleId":"349","severity":1,"message":"353","line":386,"column":43,"nodeType":"351","messageId":"352","endLine":386,"endColumn":45},{"ruleId":"349","severity":1,"message":"353","line":386,"column":66,"nodeType":"351","messageId":"352","endLine":386,"endColumn":68},{"ruleId":"349","severity":1,"message":"353","line":397,"column":43,"nodeType":"351","messageId":"352","endLine":397,"endColumn":45},{"ruleId":"349","severity":1,"message":"353","line":397,"column":66,"nodeType":"351","messageId":"352","endLine":397,"endColumn":68},{"ruleId":"349","severity":1,"message":"353","line":431,"column":57,"nodeType":"351","messageId":"352","endLine":431,"endColumn":59},{"ruleId":"349","severity":1,"message":"353","line":431,"column":86,"nodeType":"351","messageId":"352","endLine":431,"endColumn":88},{"ruleId":"349","severity":1,"message":"353","line":437,"column":57,"nodeType":"351","messageId":"352","endLine":437,"endColumn":59},{"ruleId":"349","severity":1,"message":"353","line":437,"column":86,"nodeType":"351","messageId":"352","endLine":437,"endColumn":88},{"ruleId":"335","severity":1,"message":"372","line":2,"column":5,"nodeType":"337","messageId":"338","endLine":2,"endColumn":16},{"ruleId":"335","severity":1,"message":"379","line":3,"column":5,"nodeType":"337","messageId":"338","endLine":3,"endColumn":26},{"ruleId":"335","severity":1,"message":"380","line":4,"column":5,"nodeType":"337","messageId":"338","endLine":4,"endColumn":22},{"ruleId":"335","severity":1,"message":"381","line":5,"column":5,"nodeType":"337","messageId":"338","endLine":5,"endColumn":28},{"ruleId":"335","severity":1,"message":"374","line":6,"column":5,"nodeType":"337","messageId":"338","endLine":6,"endColumn":32},{"ruleId":"335","severity":1,"message":"382","line":7,"column":5,"nodeType":"337","messageId":"338","endLine":7,"endColumn":29},{"ruleId":"335","severity":1,"message":"383","line":8,"column":5,"nodeType":"337","messageId":"338","endLine":8,"endColumn":38},{"ruleId":"335","severity":1,"message":"384","line":9,"column":5,"nodeType":"337","messageId":"338","endLine":9,"endColumn":28},{"ruleId":"335","severity":1,"message":"385","line":10,"column":5,"nodeType":"337","messageId":"338","endLine":10,"endColumn":34},{"ruleId":"335","severity":1,"message":"386","line":11,"column":5,"nodeType":"337","messageId":"338","endLine":11,"endColumn":31},{"ruleId":"335","severity":1,"message":"367","line":2,"column":8,"nodeType":"337","messageId":"338","endLine":2,"endColumn":14},{"ruleId":"349","severity":1,"message":"353","line":29,"column":25,"nodeType":"351","messageId":"352","endLine":29,"endColumn":27},{"ruleId":"387","severity":1,"message":"388","line":95,"column":154,"nodeType":"389","messageId":"390","endLine":95,"endColumn":177},{"ruleId":"349","severity":1,"message":"353","line":143,"column":47,"nodeType":"351","messageId":"352","endLine":143,"endColumn":49},{"ruleId":"349","severity":1,"message":"353","line":167,"column":47,"nodeType":"351","messageId":"352","endLine":167,"endColumn":49},{"ruleId":"349","severity":1,"message":"353","line":230,"column":301,"nodeType":"351","messageId":"352","endLine":230,"endColumn":303},{"ruleId":"349","severity":1,"message":"353","line":240,"column":32,"nodeType":"351","messageId":"352","endLine":240,"endColumn":34},{"ruleId":"349","severity":1,"message":"353","line":251,"column":32,"nodeType":"351","messageId":"352","endLine":251,"endColumn":34},{"ruleId":"349","severity":1,"message":"353","line":259,"column":32,"nodeType":"351","messageId":"352","endLine":259,"endColumn":34},{"ruleId":"349","severity":1,"message":"353","line":267,"column":32,"nodeType":"351","messageId":"352","endLine":267,"endColumn":34},{"ruleId":"339","replacedBy":"391"},{"ruleId":"341","replacedBy":"392"},{"ruleId":"335","severity":1,"message":"364","line":1,"column":28,"nodeType":"337","messageId":"338","endLine":1,"endColumn":36},{"ruleId":"393","severity":1,"message":"394","line":11,"column":45,"nodeType":"395","messageId":"396","endLine":11,"endColumn":67,"fix":"397"},{"ruleId":"393","severity":1,"message":"398","line":11,"column":69,"nodeType":"395","messageId":"396","endLine":11,"endColumn":87,"fix":"399"},{"ruleId":"349","severity":1,"message":"353","line":12,"column":51,"nodeType":"351","messageId":"352","endLine":12,"endColumn":53},{"ruleId":"349","severity":1,"message":"353","line":12,"column":102,"nodeType":"351","messageId":"352","endLine":12,"endColumn":104},{"ruleId":"349","severity":1,"message":"353","line":28,"column":283,"nodeType":"351","messageId":"352","endLine":28,"endColumn":285},{"ruleId":"349","severity":1,"message":"353","line":48,"column":279,"nodeType":"351","messageId":"352","endLine":48,"endColumn":281},{"ruleId":"335","severity":1,"message":"344","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":20},{"ruleId":"393","severity":1,"message":"400","line":10,"column":45,"nodeType":"395","messageId":"396","endLine":10,"endColumn":64,"fix":"401"},{"ruleId":"393","severity":1,"message":"402","line":10,"column":66,"nodeType":"395","messageId":"396","endLine":10,"endColumn":86,"fix":"403"},{"ruleId":"393","severity":1,"message":"404","line":10,"column":88,"nodeType":"395","messageId":"396","endLine":10,"endColumn":109,"fix":"405"},{"ruleId":"393","severity":1,"message":"406","line":10,"column":111,"nodeType":"395","messageId":"396","endLine":10,"endColumn":126,"fix":"407"},{"ruleId":"393","severity":1,"message":"408","line":10,"column":128,"nodeType":"395","messageId":"396","endLine":10,"endColumn":142,"fix":"409"},{"ruleId":"393","severity":1,"message":"410","line":10,"column":144,"nodeType":"395","messageId":"396","endLine":10,"endColumn":157,"fix":"411"},{"ruleId":"393","severity":1,"message":"412","line":10,"column":159,"nodeType":"395","messageId":"396","endLine":10,"endColumn":173,"fix":"413"},{"ruleId":"393","severity":1,"message":"414","line":10,"column":175,"nodeType":"395","messageId":"396","endLine":10,"endColumn":191,"fix":"415"},{"ruleId":"393","severity":1,"message":"416","line":10,"column":193,"nodeType":"395","messageId":"396","endLine":10,"endColumn":210,"fix":"417"},{"ruleId":"349","severity":1,"message":"353","line":11,"column":48,"nodeType":"351","messageId":"352","endLine":11,"endColumn":50},{"ruleId":"349","severity":1,"message":"353","line":11,"column":101,"nodeType":"351","messageId":"352","endLine":11,"endColumn":103},{"ruleId":"349","severity":1,"message":"353","line":11,"column":155,"nodeType":"351","messageId":"352","endLine":11,"endColumn":157},{"ruleId":"349","severity":1,"message":"353","line":11,"column":203,"nodeType":"351","messageId":"352","endLine":11,"endColumn":205},{"ruleId":"349","severity":1,"message":"353","line":11,"column":250,"nodeType":"351","messageId":"352","endLine":11,"endColumn":252},{"ruleId":"349","severity":1,"message":"353","line":11,"column":296,"nodeType":"351","messageId":"352","endLine":11,"endColumn":298},{"ruleId":"349","severity":1,"message":"353","line":11,"column":343,"nodeType":"351","messageId":"352","endLine":11,"endColumn":345},{"ruleId":"349","severity":1,"message":"353","line":11,"column":392,"nodeType":"351","messageId":"352","endLine":11,"endColumn":394},{"ruleId":"349","severity":1,"message":"353","line":11,"column":442,"nodeType":"351","messageId":"352","endLine":11,"endColumn":444},{"ruleId":"349","severity":1,"message":"350","line":32,"column":54,"nodeType":"351","messageId":"352","endLine":32,"endColumn":56},{"ruleId":"349","severity":1,"message":"353","line":50,"column":54,"nodeType":"351","messageId":"352","endLine":50,"endColumn":56},{"ruleId":"335","severity":1,"message":"418","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":26},{"ruleId":"393","severity":1,"message":"419","line":8,"column":45,"nodeType":"395","messageId":"396","endLine":8,"endColumn":69,"fix":"420"},{"ruleId":"393","severity":1,"message":"421","line":8,"column":71,"nodeType":"395","messageId":"396","endLine":8,"endColumn":83,"fix":"422"},{"ruleId":"393","severity":1,"message":"423","line":8,"column":85,"nodeType":"395","messageId":"396","endLine":8,"endColumn":106,"fix":"424"},{"ruleId":"393","severity":1,"message":"425","line":8,"column":108,"nodeType":"395","messageId":"396","endLine":8,"endColumn":134,"fix":"426"},{"ruleId":"349","severity":1,"message":"353","line":10,"column":53,"nodeType":"351","messageId":"352","endLine":10,"endColumn":55},{"ruleId":"349","severity":1,"message":"353","line":10,"column":98,"nodeType":"351","messageId":"352","endLine":10,"endColumn":100},{"ruleId":"349","severity":1,"message":"353","line":10,"column":152,"nodeType":"351","messageId":"352","endLine":10,"endColumn":154},{"ruleId":"349","severity":1,"message":"353","line":10,"column":211,"nodeType":"351","messageId":"352","endLine":10,"endColumn":213},{"ruleId":"387","severity":1,"message":"388","line":27,"column":239,"nodeType":"389","messageId":"390","endLine":27,"endColumn":262},{"ruleId":"393","severity":1,"message":"427","line":10,"column":45,"nodeType":"395","messageId":"396","endLine":10,"endColumn":70,"fix":"428"},{"ruleId":"393","severity":1,"message":"429","line":10,"column":72,"nodeType":"395","messageId":"396","endLine":10,"endColumn":100,"fix":"430"},{"ruleId":"393","severity":1,"message":"431","line":10,"column":102,"nodeType":"395","messageId":"396","endLine":10,"endColumn":135,"fix":"432"},{"ruleId":"393","severity":1,"message":"433","line":10,"column":137,"nodeType":"395","messageId":"396","endLine":10,"endColumn":166,"fix":"434"},{"ruleId":"393","severity":1,"message":"435","line":10,"column":168,"nodeType":"395","messageId":"396","endLine":10,"endColumn":202,"fix":"436"},{"ruleId":"393","severity":1,"message":"437","line":10,"column":204,"nodeType":"395","messageId":"396","endLine":10,"endColumn":233,"fix":"438"},{"ruleId":"349","severity":1,"message":"353","line":12,"column":54,"nodeType":"351","messageId":"352","endLine":12,"endColumn":56},{"ruleId":"349","severity":1,"message":"353","line":12,"column":115,"nodeType":"351","messageId":"352","endLine":12,"endColumn":117},{"ruleId":"349","severity":1,"message":"353","line":12,"column":181,"nodeType":"351","messageId":"352","endLine":12,"endColumn":183},{"ruleId":"349","severity":1,"message":"353","line":12,"column":243,"nodeType":"351","messageId":"352","endLine":12,"endColumn":245},{"ruleId":"349","severity":1,"message":"353","line":12,"column":310,"nodeType":"351","messageId":"352","endLine":12,"endColumn":312},{"ruleId":"349","severity":1,"message":"353","line":12,"column":372,"nodeType":"351","messageId":"352","endLine":12,"endColumn":374},{"ruleId":"393","severity":1,"message":"439","line":11,"column":45,"nodeType":"395","messageId":"396","endLine":11,"endColumn":69,"fix":"440"},{"ruleId":"393","severity":1,"message":"441","line":11,"column":71,"nodeType":"395","messageId":"396","endLine":11,"endColumn":104,"fix":"442"},{"ruleId":"393","severity":1,"message":"443","line":11,"column":106,"nodeType":"395","messageId":"396","endLine":11,"endColumn":137,"fix":"444"},{"ruleId":"393","severity":1,"message":"445","line":11,"column":139,"nodeType":"395","messageId":"396","endLine":11,"endColumn":170,"fix":"446"},{"ruleId":"393","severity":1,"message":"447","line":11,"column":172,"nodeType":"395","messageId":"396","endLine":11,"endColumn":203,"fix":"448"},{"ruleId":"393","severity":1,"message":"449","line":11,"column":205,"nodeType":"395","messageId":"396","endLine":11,"endColumn":241,"fix":"450"},{"ruleId":"393","severity":1,"message":"451","line":11,"column":243,"nodeType":"395","messageId":"396","endLine":11,"endColumn":263,"fix":"452"},{"ruleId":"349","severity":1,"message":"353","line":12,"column":53,"nodeType":"351","messageId":"352","endLine":12,"endColumn":55},{"ruleId":"349","severity":1,"message":"353","line":12,"column":119,"nodeType":"351","messageId":"352","endLine":12,"endColumn":121},{"ruleId":"349","severity":1,"message":"353","line":12,"column":183,"nodeType":"351","messageId":"352","endLine":12,"endColumn":185},{"ruleId":"349","severity":1,"message":"353","line":12,"column":247,"nodeType":"351","messageId":"352","endLine":12,"endColumn":249},{"ruleId":"349","severity":1,"message":"353","line":12,"column":311,"nodeType":"351","messageId":"352","endLine":12,"endColumn":313},{"ruleId":"349","severity":1,"message":"353","line":12,"column":380,"nodeType":"351","messageId":"352","endLine":12,"endColumn":382},{"ruleId":"349","severity":1,"message":"353","line":12,"column":433,"nodeType":"351","messageId":"352","endLine":12,"endColumn":435},{"ruleId":"387","severity":1,"message":"388","line":23,"column":350,"nodeType":"389","messageId":"390","endLine":23,"endColumn":380},{"ruleId":"349","severity":1,"message":"353","line":26,"column":50,"nodeType":"351","messageId":"352","endLine":26,"endColumn":52},{"ruleId":"349","severity":1,"message":"353","line":54,"column":50,"nodeType":"351","messageId":"352","endLine":54,"endColumn":52},{"ruleId":"349","severity":1,"message":"353","line":85,"column":50,"nodeType":"351","messageId":"352","endLine":85,"endColumn":52},{"ruleId":"393","severity":1,"message":"453","line":12,"column":45,"nodeType":"395","messageId":"396","endLine":12,"endColumn":77,"fix":"454"},{"ruleId":"393","severity":1,"message":"455","line":12,"column":79,"nodeType":"395","messageId":"396","endLine":12,"endColumn":118,"fix":"456"},{"ruleId":"393","severity":1,"message":"457","line":12,"column":120,"nodeType":"395","messageId":"396","endLine":12,"endColumn":164,"fix":"458"},{"ruleId":"393","severity":1,"message":"459","line":12,"column":166,"nodeType":"395","messageId":"396","endLine":12,"endColumn":191,"fix":"460"},{"ruleId":"393","severity":1,"message":"461","line":12,"column":193,"nodeType":"395","messageId":"396","endLine":12,"endColumn":227,"fix":"462"},{"ruleId":"349","severity":1,"message":"353","line":14,"column":61,"nodeType":"351","messageId":"352","endLine":14,"endColumn":63},{"ruleId":"349","severity":1,"message":"353","line":14,"column":133,"nodeType":"351","messageId":"352","endLine":14,"endColumn":135},{"ruleId":"349","severity":1,"message":"353","line":14,"column":210,"nodeType":"351","messageId":"352","endLine":14,"endColumn":212},{"ruleId":"349","severity":1,"message":"353","line":14,"column":268,"nodeType":"351","messageId":"352","endLine":14,"endColumn":270},{"ruleId":"349","severity":1,"message":"353","line":14,"column":335,"nodeType":"351","messageId":"352","endLine":14,"endColumn":337},{"ruleId":"349","severity":1,"message":"353","line":31,"column":50,"nodeType":"351","messageId":"352","endLine":31,"endColumn":52},{"ruleId":"349","severity":1,"message":"353","line":68,"column":319,"nodeType":"351","messageId":"352","endLine":68,"endColumn":321},{"ruleId":"335","severity":1,"message":"365","line":2,"column":29,"nodeType":"337","messageId":"338","endLine":2,"endColumn":41},{"ruleId":"463","severity":1,"message":"464","line":11,"column":57,"nodeType":"465","messageId":"466","endLine":11,"endColumn":59},{"ruleId":"349","severity":1,"message":"353","line":13,"column":32,"nodeType":"351","messageId":"352","endLine":13,"endColumn":34},{"ruleId":"349","severity":1,"message":"350","line":3,"column":18,"nodeType":"351","messageId":"352","endLine":3,"endColumn":20},{"ruleId":"335","severity":1,"message":"467","line":5,"column":7,"nodeType":"337","messageId":"338","endLine":5,"endColumn":22},{"ruleId":"468","severity":1,"message":"469","line":60,"column":6,"nodeType":"470","endLine":60,"endColumn":8,"suggestions":"471"},{"ruleId":"335","severity":1,"message":"472","line":61,"column":39,"nodeType":"337","messageId":"338","endLine":61,"endColumn":52},{"ruleId":"473","severity":1,"message":"474","line":65,"column":9,"nodeType":"475","endLine":68,"endColumn":11},{"ruleId":"335","severity":1,"message":"476","line":20,"column":7,"nodeType":"337","messageId":"338","endLine":20,"endColumn":19},{"ruleId":"335","severity":1,"message":"374","line":6,"column":5,"nodeType":"337","messageId":"338","endLine":6,"endColumn":32},{"ruleId":"335","severity":1,"message":"477","line":13,"column":5,"nodeType":"337","messageId":"338","endLine":13,"endColumn":11},{"ruleId":"335","severity":1,"message":"478","line":5,"column":5,"nodeType":"337","messageId":"338","endLine":5,"endColumn":20},{"ruleId":"335","severity":1,"message":"479","line":6,"column":5,"nodeType":"337","messageId":"338","endLine":6,"endColumn":16},{"ruleId":"335","severity":1,"message":"345","line":2,"column":10,"nodeType":"337","messageId":"338","endLine":2,"endColumn":21},{"ruleId":"335","severity":1,"message":"480","line":2,"column":38,"nodeType":"337","messageId":"338","endLine":2,"endColumn":50},"no-unused-vars","'dotenv' is defined but never used.","Identifier","unusedVar","no-native-reassign",["481"],"no-negated-in-lhs",["482"],"'Field' is defined but never used.","'FieldArray' is defined but never used.","'USER_LOADER' is defined but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'signup_error' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'validationSchema' is assigned a value but never used.","'lazy' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'Suspense' is defined but never used.","'Router' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'SET_SITE_LOADER' is defined but never used.","'useState' is defined but never used.","'ErrorMessage' is defined but never used.","'DatePicker' is defined but never used.","'Select' is defined but never used.","'CreatableSelect' is defined but never used.","'Dropdown' is defined but never used.","'parse' is defined but never used.","'isDate' is defined but never used.","'SITE_LOADER' is defined but never used.","'ALL_OPTIONS' is defined but never used.","'SET_WHO_CAN_CONTACT_OPTIONS' is defined but never used.","'createAsset' is defined but never used.","no-redeclare","'loader' is already defined.","redeclared","'TYPE_OF_ASSET_OPTIONS' is defined but never used.","'ASSET_FOR_OPTIONS' is defined but never used.","'WHO_CAN_CONTACT_OPTIONS' is defined but never used.","'ASSET_STATUS_NOW_OPTIONS' is defined but never used.","'SHOW_MY_ASSET_FOR_TENANTS_OPTIONS' is defined but never used.","'LIKE_OR_DISLIKE_OPTIONS' is defined but never used.","'IS_PROPOSAL_CANCELLED_OPTIONS' is defined but never used.","'ASSET_LENGTH_WIDTH_OPTIONS' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["481"],["482"],"no-useless-computed-key","Unnecessarily computed property ['type_of_asset'] found.","Property","unnecessarilyComputedProperty",{"range":"483","text":"484"},"Unnecessarily computed property ['asset_for'] found.",{"range":"485","text":"486"},"Unnecessarily computed property ['asset_name'] found.",{"range":"487","text":"488"},"Unnecessarily computed property ['door_number'] found.",{"range":"489","text":"490"},"Unnecessarily computed property ['address_hint'] found.",{"range":"491","text":"492"},"Unnecessarily computed property ['street'] found.",{"range":"493","text":"494"},"Unnecessarily computed property ['nagar'] found.",{"range":"495","text":"496"},"Unnecessarily computed property ['city'] found.",{"range":"497","text":"498"},"Unnecessarily computed property ['state'] found.",{"range":"499","text":"500"},"Unnecessarily computed property ['pincode'] found.",{"range":"501","text":"502"},"Unnecessarily computed property ['landmark'] found.",{"range":"503","text":"504"},"'useEffect' is defined but never used.","Unnecessarily computed property ['number_of_rooms'] found.",{"range":"505","text":"506"},"Unnecessarily computed property ['bhk'] found.",{"range":"507","text":"508"},"Unnecessarily computed property ['age_of_asset'] found.",{"range":"509","text":"510"},"Unnecessarily computed property ['age_of_asset_type'] found.",{"range":"511","text":"512"},"Unnecessarily computed property ['asset_main_image'] found.",{"range":"513","text":"514"},"Unnecessarily computed property ['asset_size_in_width'] found.",{"range":"515","text":"516"},"Unnecessarily computed property ['asset_size_in_width_type'] found.",{"range":"517","text":"518"},"Unnecessarily computed property ['asset_size_in_length'] found.",{"range":"519","text":"520"},"Unnecessarily computed property ['asset_size_in_length_type'] found.",{"range":"521","text":"522"},"Unnecessarily computed property ['asset_notes_by_owner'] found.",{"range":"523","text":"524"},"Unnecessarily computed property ['who_can_contact'] found.",{"range":"525","text":"526"},"Unnecessarily computed property ['advance_amount_for_asset'] found.",{"range":"527","text":"528"},"Unnecessarily computed property ['monthly_rent_for_asset'] found.",{"range":"529","text":"530"},"Unnecessarily computed property ['lease_amount_for_asset'] found.",{"range":"531","text":"532"},"Unnecessarily computed property ['lease_period_for_asset'] found.",{"range":"533","text":"534"},"Unnecessarily computed property ['lease_period_for_asset_type'] found.",{"range":"535","text":"536"},"Unnecessarily computed property ['asset_price'] found.",{"range":"537","text":"538"},"Unnecessarily computed property ['asset_available_on_from'] found.",{"range":"539","text":"540"},"Unnecessarily computed property ['notice_period_for_vocate_asset'] found.",{"range":"541","text":"542"},"Unnecessarily computed property ['notice_period_for_vocate_asset_type'] found.",{"range":"543","text":"544"},"Unnecessarily computed property ['asset_status_now'] found.",{"range":"545","text":"546"},"Unnecessarily computed property ['show_my_asset_for_tenants'] found.",{"range":"547","text":"548"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'thumbsContainer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'filesData', 'props.fieldName', and 'props.setField'. Either include them or remove the dependency array. You can also do a functional update 'setFilesData(f => ...)' if you only need 'filesData' in the 'setFilesData' call.","ArrayExpression",["549"],"'acceptedFiles' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'initialState' is assigned a value but never used.","'ALLOPT' is defined but never used.","'USER_LOGIN_FAIL' is defined but never used.","'USER_LOGOUT' is defined but never used.","'SIGNUP_ERROR' is defined but never used.","no-global-assign","no-unsafe-negation",[303,320],"'type_of_asset'",[327,340],"'asset_for'",[353,367],"'asset_name'",[374,389],"'door_number'",[396,412],"'address_hint'",[419,429],"'street'",[436,445],"'nagar'",[452,460],"'city'",[467,476],"'state'",[483,494],"'pincode'",[501,513],"'landmark'",[279,298],"'number_of_rooms'",[305,312],"'bhk'",[319,335],"'age_of_asset'",[342,363],"'age_of_asset_type'",[332,352],"'asset_main_image'",[359,382],"'asset_size_in_width'",[389,417],"'asset_size_in_width_type'",[424,448],"'asset_size_in_length'",[455,484],"'asset_size_in_length_type'",[491,515],"'asset_notes_by_owner'",[381,400],"'who_can_contact'",[407,435],"'advance_amount_for_asset'",[442,468],"'monthly_rent_for_asset'",[475,501],"'lease_amount_for_asset'",[508,534],"'lease_period_for_asset'",[541,572],"'lease_period_for_asset_type'",[579,594],"'asset_price'",[437,464],"'asset_available_on_from'",[471,505],"'notice_period_for_vocate_asset'",[512,551],"'notice_period_for_vocate_asset_type'",[558,578],"'asset_status_now'",[585,614],"'show_my_asset_for_tenants'",{"desc":"550","fix":"551"},"Update the dependencies array to be: [filesData, props.fieldName, props.setField]",{"range":"552","text":"553"},[1476,1478],"[filesData, props.fieldName, props.setField]"]