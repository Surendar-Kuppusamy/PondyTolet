{"ast":null,"code":"var _jsxFileName = \"D:\\\\Apache\\\\Apache24\\\\htdocs\\\\Server\\\\React\\\\DemoProject\\\\frontend\\\\src\\\\components\\\\pages\\\\signup\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport DatePicker from \"react-datepicker\";\nimport { subYears } from 'date-fns';\nimport { toast } from 'react-toastify';\nimport { signup } from '../../../actions/userActions';\nimport Loader from '../../Loader';\nimport { USER_LOADER, SIGNUP_FORM } from '../../../constants/constants';\nimport { isNumber } from '../../../commonFunctions/Validations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    register: () => {\n      dispatch(signup());\n    }\n  };\n};\n\nfunction Signup(props) {\n  _s();\n\n  let location = useLocation();\n  let history = useHistory();\n  const userState = useSelector(state => state.userState);\n  const {\n    signup_result,\n    signup_error,\n    signup_form\n  } = userState;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (Object.keys(signup_result).length != 0) {\n      console.log('Result ===>' + signup_result);\n\n      if (signup_result.status == 'error') {\n        let message = signup_result.params.toUpperCase() + ': ' + signup_result.message;\n        toast.error(message, {\n          theme: \"colored\"\n        });\n      } else if (signup_result.status == 'success') {\n        toast.success(signup_result.message, {\n          theme: \"colored\"\n        }); //history.push(\"/home\");\n      }\n    }\n  }, [signup_result]);\n  console.log(signup_form);\n  let initialValues = {};\n\n  if (signup_form == undefined) {\n    initialValues = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      confirm_password: '',\n      dob: '',\n      mobile_number: '',\n      std_code: '',\n      telephone_number: '',\n      address: '',\n      user_type: 3\n    };\n  } else {\n    initialValues = signup_form;\n  }\n\n  const validationSchema = Yup.object({\n    first_name: Yup.string().max(50, 'First name must be 50 characters or less').required('First name is required'),\n    last_name: Yup.string().max(50, 'Last name must be 50 characters or less').required('Last name is required'),\n    email: Yup.string().email('Invalid email address').required('Email required'),\n    password: Yup.string().required('Password is required'),\n    confirm_password: Yup.string().required('Confirm password is required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\n    dob: Yup.date('DOB is date'),\n    mobile_number: Yup.string().matches(/^\\d{10}$/, 'Invalid mobile number').min(10, 'Invalid mobile number').max(10, 'Invalid mobile number').required('Mobile number is required'),\n    std_code: Yup.string().matches(/^\\d{4}$/, 'Invalid STD code').min(3, 'Invalid STD code').max(4, 'Invalid STD code'),\n    telephone_number: Yup.string().matches(/^\\d{4}$/, 'Invalid telephone number').min(3, 'Invalid telephone number').max(4, 'Invalid telephone number'),\n    address: Yup.string().required('Address is required'),\n    user_type: Yup.number().required('User type is required')\n  });\n\n  const onDobDateChange = (e, field, values, setFieldValue) => {\n    console.log(e.getDate(), e.getFullYear(), e.getMonth());\n    var dobDate = e.getFullYear() + '-' + (e.getMonth() + 1) + '-' + e.getDate();\n    console.log(dobDate);\n    setFieldValue(field, dobDate);\n  };\n\n  const handleForms = async values => {\n    console.log('Test');\n  };\n\n  const onSubmit = async (values, formikBag) => {\n    //console.log(values, userState, props);\n    dispatch({\n      type: SIGNUP_FORM,\n      payload: values\n    });\n    await props.register();\n    /* console.log(props);\r\n    //formikBag.setSubmitting(false);\r\n    //actions.resetForm(initialValues); */\n\n    /* dispatch({type:SIGNUP_FORM, payload: values});\r\n    await props.register(); */\n  };\n\n  const handleSignup = async values => {};\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"signup\",\n    children: userState.user_loader == true ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 46\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Signup Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues\n          /* validationSchema={validationSchema}  */\n          ,\n          onSubmit: onSubmit,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              children: JSON.stringify(props.values)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"first_name\",\n                className: \"form-label\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: 'form-control' + (props.errors.first_name && props.touched.first_name ? ' is-invalid' : ''),\n                id: \"first_name\",\n                name: \"first_name\",\n                placeholder: \"Enter your first name\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.first_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"first_name\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"last_name\",\n                className: \"form-label\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: 'form-control' + (props.errors.last_name && props.touched.last_name ? ' is-invalid' : ''),\n                id: \"last_name\",\n                name: \"last_name\",\n                placeholder: \"Enter your last name\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.last_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"last_name\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"form-label\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: 'form-control' + (props.errors.email && props.touched.email ? ' is-invalid' : ''),\n                id: \"email\",\n                name: \"email\",\n                placeholder: \"Enter your email\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"form-label\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: 'form-control' + (props.errors.password && props.touched.password ? ' is-invalid' : ''),\n                id: \"password\",\n                name: \"password\",\n                placeholder: \"Enter your password\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirm_password\",\n                className: \"form-label\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: 'form-control' + (props.errors.confirm_password && props.touched.confirm_password ? ' is-invalid' : ''),\n                id: \"confirm_password\",\n                name: \"confirm_password\",\n                placeholder: \"Re-enter password\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.confirm_password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"confirm_password\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"dob\",\n                className: \"form-label\",\n                children: \"DOB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  id: \"dob\",\n                  className: 'form-control' + (props.errors.dob && props.touched.dob ? ' is-invalid' : ''),\n                  name: \"dob\",\n                  maxDate: subYears(new Date(), 17),\n                  onChange: e => onDobDateChange(e, 'dob', props.values, props.setFieldValue),\n                  value: props.values.dob\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"dob\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mobile_number\",\n                className: \"form-label\",\n                children: \"Mobile Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: 'form-control' + (props.errors.mobile_number && props.touched.mobile_number ? ' is-invalid' : ''),\n                id: \"mobile_number\",\n                name: \"mobile_number\",\n                placeholder: \"Enter your Mobile number\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.mobile_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"mobile_number\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row g-3 align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: \"Telephone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"std_code\",\n                  className: \"\",\n                  children: \"STD Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: 'form-control',\n                  id: \"std_code\",\n                  name: \"std_code\",\n                  placeholder: \"Enter STD code\",\n                  onChange: props.handleChange,\n                  onBlur: props.handleBlur,\n                  value: props.values.std_code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"std_code\",\n                  component: \"span\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"telephone_number\",\n                  className: \"\",\n                  children: \"Phone Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: 'form-control',\n                  id: \"telephone_number\",\n                  name: \"telephone_number\",\n                  placeholder: \"Enter phone number\",\n                  onChange: props.handleChange,\n                  onBlur: props.handleBlur,\n                  value: props.values.telephone_number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"telephone_number\",\n                  component: \"span\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                className: \"form-label\",\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: 'form-control' + (props.errors.address && props.touched.address ? ' is-invalid' : ''),\n                id: \"address\",\n                name: \"address\",\n                placeholder: \"Enter address\",\n                rows: \"3\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                value: props.values.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"address\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: [\"User Type\", /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"user_type\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input\",\n                type: \"radio\",\n                name: \"user_type\",\n                id: \"user_type_tenant\",\n                value: \"3\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                checked: props.values.user_type == 3 ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"user_type_tenant\",\n                children: \"Tenant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input\",\n                type: \"radio\",\n                name: \"user_type\",\n                id: \"user_type_owner\",\n                value: \"2\",\n                onChange: props.handleChange,\n                onBlur: props.handleBlur,\n                checked: props.values.user_type == 2 ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"user_type_owner\",\n                children: \"Owner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 59\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Signup, \"Wc6oEXUmudmmT7HqsB2KfoG2KWg=\", false, function () {\n  return [useLocation, useHistory, useSelector, useDispatch];\n});\n\n_c = Signup;\nexport default connect(null, mapDispatchToProps)(Signup);\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/frontend/src/components/pages/signup/Signup.js"],"names":["React","useEffect","useSelector","useDispatch","connect","useLocation","useHistory","Formik","Form","ErrorMessage","Yup","DatePicker","subYears","toast","signup","Loader","USER_LOADER","SIGNUP_FORM","isNumber","mapDispatchToProps","dispatch","register","Signup","props","location","history","userState","state","signup_result","signup_error","signup_form","Object","keys","length","console","log","status","message","params","toUpperCase","error","theme","success","initialValues","undefined","first_name","last_name","email","password","confirm_password","dob","mobile_number","std_code","telephone_number","address","user_type","validationSchema","object","string","max","required","oneOf","ref","date","matches","min","number","onDobDateChange","e","field","values","setFieldValue","getDate","getFullYear","getMonth","dobDate","handleForms","onSubmit","formikBag","type","payload","handleSignup","user_loader","JSON","stringify","errors","touched","handleChange","handleBlur","Date"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch, connect }  from 'react-redux';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { subYears } from 'date-fns';\r\nimport { toast } from 'react-toastify';\r\nimport { signup } from '../../../actions/userActions';\r\nimport Loader from '../../Loader';\r\nimport { USER_LOADER, SIGNUP_FORM } from '../../../constants/constants';\r\nimport { isNumber } from '../../../commonFunctions/Validations';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        register: () => {\r\n            dispatch(signup());\r\n        }\r\n    }   \r\n}\r\n\r\n\r\n\r\nfunction Signup(props) {\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n    const userState = useSelector((state) => state.userState);\r\n    const { signup_result, signup_error, signup_form } = userState;\r\n    const dispatch = useDispatch();    \r\n    useEffect(() => {\r\n        if(Object.keys(signup_result).length != 0) {\r\n            console.log('Result ===>'+signup_result);\r\n            if(signup_result.status == 'error') {\r\n                let message = signup_result.params.toUpperCase()+': '+signup_result.message;\r\n                toast.error(message, {theme: \"colored\"});\r\n            } else if(signup_result.status == 'success') {\r\n                toast.success(signup_result.message, {theme: \"colored\"});\r\n                //history.push(\"/home\");\r\n            }\r\n        }\r\n    },[signup_result])\r\n    console.log(signup_form);\r\n    let initialValues = {};\r\n    if(signup_form == undefined) {\r\n        initialValues = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: '',\r\n            confirm_password:'',\r\n            dob: '',\r\n            mobile_number: '',\r\n            std_code:'',\r\n            telephone_number: '',\r\n            address: '',\r\n            user_type:3\r\n        };\r\n    } else {\r\n        initialValues = signup_form;\r\n    }\r\n    \r\n    const validationSchema = Yup.object({\r\n        first_name: Yup.string()\r\n            .max(50, 'First name must be 50 characters or less')\r\n            .required('First name is required'),\r\n        last_name: Yup.string()\r\n            .max(50, 'Last name must be 50 characters or less')\r\n            .required('Last name is required'),\r\n        email: Yup.string()\r\n            .email('Invalid email address')\r\n            .required('Email required'),\r\n        password: Yup.string()\r\n            .required('Password is required'),\r\n        confirm_password:Yup.string()\r\n            .required('Confirm password is required')\r\n            .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n        dob: Yup.date('DOB is date'),\r\n        mobile_number: Yup.string().matches(/^\\d{10}$/, 'Invalid mobile number')\r\n            .min(10, 'Invalid mobile number')\r\n            .max(10,'Invalid mobile number')\r\n            .required('Mobile number is required'),\r\n        std_code:Yup.string().matches(/^\\d{4}$/, 'Invalid STD code')\r\n            .min(3, 'Invalid STD code')\r\n            .max(4,'Invalid STD code'),\r\n        telephone_number: Yup.string().matches(/^\\d{4}$/, 'Invalid telephone number')\r\n            .min(3, 'Invalid telephone number')\r\n            .max(4,'Invalid telephone number'),\r\n        address: Yup.string()\r\n            .required('Address is required'),\r\n        user_type:Yup.number()\r\n            .required('User type is required'),\r\n    });\r\n\r\n    const onDobDateChange = (e, field, values, setFieldValue) => {\r\n        console.log(e.getDate(), e.getFullYear(), e.getMonth());\r\n        var dobDate = e.getFullYear()+'-'+(e.getMonth() + 1)+'-'+e.getDate();\r\n        console.log(dobDate);\r\n        setFieldValue(field, dobDate);\r\n    };\r\n\r\n    const handleForms = async(values) => {\r\n        console.log('Test');\r\n    }\r\n\r\n    const onSubmit = async(values, formikBag) => {\r\n        //console.log(values, userState, props);\r\n        dispatch({type:SIGNUP_FORM, payload: values});\r\n        await props.register();\r\n        /* console.log(props);\r\n        //formikBag.setSubmitting(false);\r\n        //actions.resetForm(initialValues); */\r\n        /* dispatch({type:SIGNUP_FORM, payload: values});\r\n        await props.register(); */\r\n    };\r\n\r\n    const handleSignup = async(values) => {\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <section id=\"signup\">\r\n            {userState.user_loader == true ? <Loader /> : <div>\r\n                <h3 className=\"text-center\">Signup Page</h3>\r\n                <div className=\"container\">\r\n                    <Formik initialValues={initialValues} /* validationSchema={validationSchema}  */ onSubmit={onSubmit}>\r\n                        {(props) => (\r\n                            <Form>\r\n                                <pre>\r\n                                    {JSON.stringify(props.values)}\r\n                                </pre>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"first_name\" className=\"form-label\">First Name</label>\r\n                                    <input type=\"text\" className={'form-control' + (props.errors.first_name && props.touched.first_name ? ' is-invalid' : '')} id=\"first_name\" name=\"first_name\" placeholder=\"Enter your first name\" onChange={props.handleChange} onBlur={props.handleBlur} value={props.values.first_name}  />\r\n                                    <ErrorMessage name=\"first_name\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"last_name\" className=\"form-label\">Last Name</label>\r\n                                    <input type=\"text\" className={'form-control' + (props.errors.last_name && props.touched.last_name ? ' is-invalid' : '')} id=\"last_name\" name=\"last_name\" placeholder=\"Enter your last name\" onChange={props.handleChange} onBlur={props.handleBlur} value={props.values.last_name} />\r\n                                    <ErrorMessage name=\"last_name\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <input type=\"text\" className={'form-control' + (props.errors.email && props.touched.email ? ' is-invalid' : '')} id=\"email\" name=\"email\" placeholder=\"Enter your email\" onChange={props.handleChange} onBlur={props.handleBlur} value={props.values.email} />\r\n                                    <ErrorMessage name=\"email\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <input type=\"password\" className={'form-control' + (props.errors.password && props.touched.password ? ' is-invalid' : '')} id=\"password\" name=\"password\" placeholder=\"Enter your password\" onChange={props.handleChange} onBlur={props.handleBlur} value={props.values.password} />\r\n                                    <ErrorMessage name=\"password\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"confirm_password\" className=\"form-label\">Confirm Password</label>\r\n                                    <input type=\"password\" className={'form-control' + (props.errors.confirm_password && props.touched.confirm_password ? ' is-invalid' : '')} id=\"confirm_password\" name=\"confirm_password\" placeholder=\"Re-enter password\" onChange={props.handleChange} onBlur={props.handleBlur} value={props.values.confirm_password} />\r\n                                    <ErrorMessage name=\"confirm_password\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"dob\" className=\"form-label\">DOB</label>\r\n                                    {/* <input type=\"text\" className=\"form-control\" id=\"dob\" name=\"dob\" placeholder=\"Enter your DOB\" onChange={handleChange} onBlur={handleBlur} /> */}\r\n                                    <div>\r\n                                        <DatePicker id=\"dob\" className={'form-control' + (props.errors.dob && props.touched.dob ? ' is-invalid' : '')} name=\"dob\" maxDate={subYears(new Date(), 17)} onChange={e => onDobDateChange(e, 'dob', props.values, props.setFieldValue)} value={props.values.dob} />\r\n                                    </div>\r\n                                    <ErrorMessage name=\"dob\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"mobile_number\" className=\"form-label\">Mobile Number</label>\r\n                                    <input type=\"text\" className={'form-control' + (props.errors.mobile_number && props.touched.mobile_number ? ' is-invalid' : '')} id=\"mobile_number\" name=\"mobile_number\" placeholder=\"Enter your Mobile number\" onChange={props.handleChange} onBlur={props.handleBlur} value={props.values.mobile_number} />\r\n                                    <ErrorMessage name=\"mobile_number\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"row g-3 align-items-center\">\r\n                                    <div className=\"col-md-12\">\r\n                                        Telephone Number\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                        <label htmlFor=\"std_code\" className=\"\">STD Code</label>\r\n                                        <input type=\"text\" className={'form-control'} id=\"std_code\" name=\"std_code\" placeholder=\"Enter STD code\" onChange={props.handleChange} onBlur={props.handleBlur} value={props.values.std_code} />\r\n                                        <ErrorMessage name=\"std_code\" component=\"span\" className=\"text-danger\" />\r\n                                    </div>\r\n                                    <div className=\"col-auto\">\r\n                                        <label htmlFor=\"telephone_number\" className=\"\">Phone Number</label>\r\n                                        <input type=\"text\" className={'form-control'} id=\"telephone_number\" name=\"telephone_number\" placeholder=\"Enter phone number\" onChange={props.handleChange} onBlur={props.handleBlur} value={props.values.telephone_number} />\r\n                                        <ErrorMessage name=\"telephone_number\" component=\"span\" className=\"text-danger\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"address\" className=\"form-label\">Address</label>\r\n                                    <textarea className={'form-control' + (props.errors.address && props.touched.address ? ' is-invalid' : '')} id=\"address\" name=\"address\" placeholder=\"Enter address\" rows=\"3\" onChange={props.handleChange} onBlur={props.handleBlur} value={props.values.address}></textarea>\r\n                                    <ErrorMessage name=\"address\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                    User Type\r\n                                    <ErrorMessage name=\"user_type\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"user_type\" id=\"user_type_tenant\" value=\"3\"  onChange={props.handleChange} onBlur={props.handleBlur} checked={props.values.user_type == 3 ? true : false} />\r\n                                    <label className=\"form-check-label\" htmlFor=\"user_type_tenant\">Tenant</label>\r\n                                </div>\r\n                                <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"user_type\" id=\"user_type_owner\" value=\"2\" onChange={props.handleChange} onBlur={props.handleBlur} checked={props.values.user_type == 2 ? true : false} />\r\n                                    <label className=\"form-check-label\" htmlFor=\"user_type_owner\">Owner</label>\r\n                                </div>\r\n                                <div className=\"mt-2 text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Signup</button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n            }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup);"]},"metadata":{},"sourceType":"module"}