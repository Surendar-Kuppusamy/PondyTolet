{"ast":null,"code":"import { SITELOAD, WEBSITELOADED } from '../actions/constants';\nconst initialState = {\n  value: 0,\n  is_site_loaded: false\n};\n\nfunction defaultReducers(state = initialState, action) {\n  switch (action.type) {\n    case 'INCREMENTS':\n      {\n        return { ...state,\n          value: state.value + 1\n        };\n      }\n\n    case 'counter/decremented':\n      return { ...state,\n        value: state.value + 1\n      };\n\n    case 'counter/both':\n      {\n        return { ...state,\n          value: state.value - 1,\n          more: 'Test',\n          pay: action.payload\n        };\n      }\n\n    case 'counter/one':\n      {\n        return { ...state,\n          obj: state.pay.map(val => {\n            console.log(val);\n            return { ...val,\n              val: val\n            };\n          })\n        };\n      }\n\n    case 'loader':\n      {\n        return { ...state,\n          loader: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default defaultReducers;","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/reducers/defaultReducers.js"],"names":["SITELOAD","WEBSITELOADED","initialState","value","is_site_loaded","defaultReducers","state","action","type","more","pay","payload","obj","map","val","console","log","loader"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,aAAnB,QAAwC,sBAAxC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,cAAc,EAAE;AAFG,CAArB;;AAKA,SAASC,eAAT,CAAyBC,KAAK,GAAGJ,YAAjC,EAA+CK,MAA/C,EAAuD;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AAAmB;AACjB,eAAO,EAAE,GAAGF,KAAL;AAAYH,UAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAAjC,SAAP;AACD;;AACD,SAAK,qBAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAAjC,OAAP;;AACF,SAAK,cAAL;AAAqB;AACnB,eAAO,EAAE,GAAGG,KAAL;AAAYH,UAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc,CAAjC;AAAoCM,UAAAA,IAAI,EAAE,MAA1C;AAAkDC,UAAAA,GAAG,EAAEH,MAAM,CAACI;AAA9D,SAAP;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB,eAAO,EAAE,GAAGL,KAAL;AAAYM,UAAAA,GAAG,EAAEN,KAAK,CAACI,GAAN,CAAUG,GAAV,CAAcC,GAAG,IAAG;AAACC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,mBAAM,EAAC,GAAGA,GAAJ;AAASA,cAAAA,GAAG,EAAEA;AAAd,aAAN;AAAyB,WAA/D;AAAjB,SAAP;AACD;;AACD,SAAK,QAAL;AAAe;AACb,eAAO,EAAE,GAAGR,KAAL;AAAYW,UAAAA,MAAM,EAACV,MAAM,CAACI;AAA1B,SAAP;AACD;;AACD;AACE,aAAOL,KAAP;AAhBJ;AAkBH;;AAAA;AACD,eAAeD,eAAf","sourcesContent":["import { SITELOAD, WEBSITELOADED } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  value: 0,\r\n  is_site_loaded: false\r\n};\r\n\r\nfunction defaultReducers(state = initialState, action) {\r\n    switch (action.type) {\r\n      case 'INCREMENTS': {\r\n        return { ...state, value: state.value + 1 }\r\n      }\r\n      case 'counter/decremented':\r\n        return { ...state, value: state.value + 1 }\r\n      case 'counter/both': {\r\n        return { ...state, value: state.value - 1, more: 'Test', pay: action.payload }\r\n      }\r\n      case 'counter/one': {\r\n        return { ...state, obj: state.pay.map(val =>{console.log(val);return{...val, val: val}}) }\r\n      }\r\n      case 'loader': {\r\n        return { ...state, loader:action.payload }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n};\r\nexport default defaultReducers;\r\n"]},"metadata":{},"sourceType":"module"}