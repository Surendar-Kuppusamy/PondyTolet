{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport { rootReducer } from '../reducers';\nlet preloadedState = {};\nconst storeOnToLocalStorage = [\"INCREMENT\"];\n\nif (localStorage.hasOwnProperty('state')) {\n  const persistedTodosString = localStorage.getItem('state');\n}\n\nconst saveLocal = ({\n  getState\n}) => {\n  return next => action => {\n    const result = next(action);\n    console.log('Middleware', action);\n\n    if (storeOnToLocalStorage.indexOf(action.type)) {\n      localStorage.setItem('state', JSON.stringify(getState()));\n    }\n\n    return result;\n  };\n};\n\nconsole.log(persistedTodosString);\n\nif (persistedTodosString) {\n  preloadedState = JSON.parse(persistedTodosString);\n}\n\nexport const store = createStore(rootReducer, preloadedState, composeWithDevTools(applyMiddleware(saveLocal, thunkMiddleware)));","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/store/index.js"],"names":["applyMiddleware","createStore","composeWithDevTools","thunkMiddleware","rootReducer","preloadedState","storeOnToLocalStorage","localStorage","hasOwnProperty","persistedTodosString","getItem","saveLocal","getState","next","action","result","console","log","indexOf","type","setItem","JSON","stringify","parse","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,IAAIC,cAAc,GAAC,EAAnB;AACA,MAAMC,qBAAqB,GAAG,CAAC,WAAD,CAA9B;;AACA,IAAGC,YAAY,CAACC,cAAb,CAA4B,OAA5B,CAAH,EAAyC;AACvC,QAAMC,oBAAoB,GAAGF,YAAY,CAACG,OAAb,CAAqB,OAArB,CAA7B;AACD;;AAKD,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAChC,SAAQC,IAAD,IAAWC,MAAD,IAAY;AAC3B,UAAMC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,MAA1B;;AACA,QAAGR,qBAAqB,CAACY,OAAtB,CAA8BJ,MAAM,CAACK,IAArC,CAAH,EAA+C;AAC7CZ,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeV,QAAQ,EAAvB,CAA9B;AACD;;AACD,WAAOG,MAAP;AACD,GAPD;AAQD,CATD;;AAWAC,OAAO,CAACC,GAAR,CAAYR,oBAAZ;;AAEA,IAAGA,oBAAH,EAAyB;AACvBJ,EAAAA,cAAc,GAAGgB,IAAI,CAACE,KAAL,CAAWd,oBAAX,CAAjB;AACD;;AAED,OAAO,MAAMe,KAAK,GAAGvB,WAAW,CAACG,WAAD,EAAcC,cAAd,EAA8BH,mBAAmB,CAACF,eAAe,CAACW,SAAD,EAAYR,eAAZ,CAAhB,CAAjD,CAAzB","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { rootReducer } from '../reducers'\r\n\r\nlet preloadedState={};\r\nconst storeOnToLocalStorage = [\"INCREMENT\"];\r\nif(localStorage.hasOwnProperty('state')) {\r\n  const persistedTodosString = localStorage.getItem('state');\r\n}\r\n\r\n\r\n\r\n\r\nconst saveLocal = ({getState}) => {\r\n  return (next) => (action) => {\r\n    const result = next(action);\r\n    console.log('Middleware', action);\r\n    if(storeOnToLocalStorage.indexOf(action.type)) {\r\n      localStorage.setItem('state', JSON.stringify(getState()));\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\nconsole.log(persistedTodosString);\r\n\r\nif(persistedTodosString) {\r\n  preloadedState = JSON.parse(persistedTodosString)\r\n}\r\n\r\nexport const store = createStore(rootReducer, preloadedState, composeWithDevTools(applyMiddleware(saveLocal, thunkMiddleware)));\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}