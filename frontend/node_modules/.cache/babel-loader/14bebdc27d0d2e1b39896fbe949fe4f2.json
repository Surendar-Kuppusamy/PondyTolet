{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport Cryptr from 'cryptr';\nconst cryptr = new Cryptr('key');\nlet preloadedState;\nconst persistedTodosString = localStorage.getItem('new');\n\nconst saveLocal = ({\n  getState\n}) => {\n  return next => action => {\n    const result = next(action);\n    dispatch({\n      type: SET_SITE_LOADER,\n      payload: true\n    });\n    console.log('Middleware', action, getState());\n    const encryptedString = cryptr.encrypt(JSON.stringify(getState()));\n    localStorage.setItem('new', encryptedString);\n    return result;\n  };\n};\n\nif (persistedTodosString) {\n  const decryptedString = cryptr.decrypt(persistedTodosString);\n  preloadedState = JSON.parse(decryptedString);\n} //const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nexport const store = createStore(rootReducer, preloadedState, composeWithDevTools(applyMiddleware(saveLocal, thunkMiddleware)));","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/store/index.js"],"names":["applyMiddleware","createStore","compose","composeWithDevTools","thunkMiddleware","rootReducer","Cryptr","cryptr","preloadedState","persistedTodosString","localStorage","getItem","saveLocal","getState","next","action","result","dispatch","type","SET_SITE_LOADER","payload","console","log","encryptedString","encrypt","JSON","stringify","setItem","decryptedString","decrypt","parse","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,KAAX,CAAf;AAEA,IAAIE,cAAJ;AACA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA7B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAChC,SAAQC,IAAD,IAAWC,MAAD,IAAY;AAC3B,UAAMC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAnB;AACAE,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEC,eAAP;AAAwBC,MAAAA,OAAO,EAAE;AAAjC,KAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,MAA1B,EAAkCF,QAAQ,EAA1C;AACA,UAAMU,eAAe,GAAGhB,MAAM,CAACiB,OAAP,CAAeC,IAAI,CAACC,SAAL,CAAeb,QAAQ,EAAvB,CAAf,CAAxB;AACAH,IAAAA,YAAY,CAACiB,OAAb,CAAqB,KAArB,EAA4BJ,eAA5B;AACA,WAAOP,MAAP;AACD,GAPD;AAQD,CATD;;AAWA,IAAGP,oBAAH,EAAyB;AACvB,QAAMmB,eAAe,GAAGrB,MAAM,CAACsB,OAAP,CAAepB,oBAAf,CAAxB;AACAD,EAAAA,cAAc,GAAGiB,IAAI,CAACK,KAAL,CAAWF,eAAX,CAAjB;AACD,C,CAED;;;AAEA,OAAO,MAAMG,KAAK,GAAG9B,WAAW,CAACI,WAAD,EAAcG,cAAd,EAA8BL,mBAAmB,CAACH,eAAe,CAACY,SAAD,EAAYR,eAAZ,CAAhB,CAAjD,CAAzB","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\nimport Cryptr from 'cryptr';\r\n\r\nconst cryptr = new Cryptr('key');\r\n\r\nlet preloadedState;\r\nconst persistedTodosString = localStorage.getItem('new');\r\n\r\nconst saveLocal = ({getState}) => {\r\n  return (next) => (action) => {\r\n    const result = next(action);\r\n    dispatch({type: SET_SITE_LOADER, payload: true});\r\n    console.log('Middleware', action, getState());\r\n    const encryptedString = cryptr.encrypt(JSON.stringify(getState()));\r\n    localStorage.setItem('new', encryptedString);\r\n    return result;\r\n  };\r\n}\r\n\r\nif(persistedTodosString) {\r\n  const decryptedString = cryptr.decrypt(persistedTodosString);\r\n  preloadedState = JSON.parse(decryptedString)\r\n}\r\n\r\n//const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, preloadedState, composeWithDevTools(applyMiddleware(saveLocal, thunkMiddleware)));"]},"metadata":{},"sourceType":"module"}