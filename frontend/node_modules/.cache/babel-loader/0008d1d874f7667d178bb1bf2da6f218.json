{"ast":null,"code":"var _jsxFileName = \"D:\\\\Apache\\\\Apache24\\\\htdocs\\\\Server\\\\React\\\\DemoProject\\\\demo\\\\src\\\\components\\\\pages\\\\assets\\\\AddAssets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Formik, Form, FieldArray, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport DatePicker from \"react-datepicker\";\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport { parse, isDate } from \"date-fns\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport StepWizard from \"react-step-wizard\";\nimport { SITE_LOADER, ALL_OPTIONS, SET_WHO_CAN_CONTACT_OPTIONS } from '../../../actions/constants';\nimport AssetAddFormWizzardStep1 from './AssetAddFormWizzardStep1';\nimport AssetAddFormWizzardStep2 from './AssetAddFormWizzardStep2';\nimport AssetAddFormWizzardStep3 from './AssetAddFormWizzardStep3';\nimport AssetAddFormWizzardStep4 from './AssetAddFormWizzardStep4';\nimport AssetAddFormWizzardStep5 from './AssetAddFormWizzardStep5';\nimport AssetAddFormWizzardStep6 from './AssetAddFormWizzardStep6';\nimport AssetAddFormWizzardStep7 from './AssetAddFormWizzardStep7';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoadingIndicator = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    content: 'Custom Loader',\n    className: \"select-loader\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border spinner-border-sm text-primary\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \" Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"  Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_c = LoadingIndicator;\n\nconst onSelectMultipleChange = (value, actionMeta, field, values, setFieldValue) => {\n  var loader = field + '_is_loading';\n  setFieldValue(loader, true);\n  console.log(value, actionMeta);\n  let tempValue = [];\n  tempValue = values.who_can_contact;\n\n  if (actionMeta.action == \"create-option\" && actionMeta.option.__isNew__) {\n    console.log(actionMeta.option.value); //Save and select\n    //all_options.who_can_contact_options.unshift({label: actionMeta.option.value, value: actionMeta.option.value});\n\n    setFieldValue(loader, false);\n  } else if (actionMeta.action == \"select-option\") {\n    tempValue.push(actionMeta.option.value);\n    setFieldValue(field, tempValue);\n    setFieldValue(loader, false);\n  } else if (actionMeta.action == \"remove-value\") {\n    var removedIndex = tempValue.indexOf(actionMeta.removedValue.value);\n    tempValue.splice(removedIndex, 1);\n    setFieldValue(field, tempValue);\n    setFieldValue(loader, false);\n  }\n\n  setFieldValue(loader, false);\n};\n\nfunction AddAssets(props) {\n  _s();\n\n  window.scrollTo(0, 0);\n  const customStyles = {\n    singleValue: (provided, state) => {\n      const color = state.selectProps.isLoading ? 'white' : 'black';\n      return { ...provided,\n        color\n      };\n    },\n    valueContainer: (provided, state) => {\n      const color = state.selectProps.isLoading ? 'white' : 'black';\n      return { ...provided,\n        color\n      };\n    }\n  };\n  const dispatch = useDispatch();\n  const all_options = useSelector(state => state.defaultReducers.all_options);\n\n  const onSelectChange = (e, field, values, setFieldValue, loader) => {\n    var loader = field + '_is_loading';\n    setFieldValue(loader, true);\n\n    if (e.__isNew__) {\n      //Save and select\n      all_options.city_options.push({\n        'label': 'Loading',\n        'value': 0\n      });\n      setFieldValue(field, 0);\n      setTimeout(function () {\n        all_options.city_options.unshift({\n          'label': e.value,\n          'value': e.value\n        });\n        setFieldValue(loader, false);\n        setFieldValue(field, e.value); //setFieldValue(field, 0);\n      }, 2000);\n    } else {\n      setFieldValue(field, e.value);\n      setFieldValue(loader, false);\n    }\n  };\n\n  const onDobDateChange = (e, field, values, setFieldValue) => {\n    var asset_available_on_from = e.getFullYear() + '-' + (e.getMonth() + 1) + '-' + e.getDate();\n    setFieldValue(field, asset_available_on_from);\n  };\n\n  const onClickDMYTypes = (e, field, values, setFieldValue) => {\n    setFieldValue(field, e.value);\n  };\n\n  const onClickRoomsTypes = (e, field, index, values, setFieldValue) => {\n    console.log(values);\n    setFieldValue(field, e.value);\n  };\n\n  const handleRoomChange = (e, index, field, room, setFieldValue) => {\n    setFieldValue(room[field], e.value);\n  };\n\n  const initialValues = {\n    user_id: 0,\n    type_of_asset: 'House',\n    asset_for: 'Rent',\n    asset_name: '',\n    door_number: 0,\n    address_hint: '',\n    street: '',\n    nagar: '',\n    city: 0,\n    city_is_loading: false,\n    state: 0,\n    state_is_loading: false,\n    pincode: 0,\n    landmark: '',\n    number_of_rooms: 0,\n    bhk: 0,\n    age_of_asset: 0,\n    age_of_asset_type: 'Day(s)',\n    asset_main_image: null,\n    asset_size_in_length_type: 'sq.ft.',\n    asset_size_in_length: 0,\n    asset_size_in_width_type: 'sq.ft.',\n    asset_size_in_width: 0,\n    asset_notes_by_owner: '',\n    who_can_contact: [],\n    who_can_contact_is_loading: false,\n    advance_amount_for_asset: 0,\n    monthly_rent_for_asset: 0,\n    lease_amount_for_asset: 0,\n    lease_period_for_asset: 0,\n    lease_period_for_asset_type: 'Day(s)',\n    asset_price: 0,\n    asset_available_on_from: '',\n    notice_period_for_vocate_asset: 0,\n    notice_period_for_vocate_asset_type: 'Day(s)',\n    asset_status_now: 0,\n    asset_status_now_is_loading: false,\n    show_my_asset_for_tenants: 'Show',\n    rooms: []\n  };\n  const validationSchema = Yup.object().shape({\n    type_of_asset: Yup.string().required('Asset type is required.'),\n    asset_for: Yup.string().required('Asset for is required.'),\n    asset_name: Yup.string().required('Asset name is required.').min(3, 'Asset name must be minimum 3 characters.').max(50, 'Asset name character must be less than 50 characters.'),\n    door_number: Yup.number().when('type_of_asset', {\n      is: (type_of_asset, validationSchema) => {\n        if (type_of_asset != 'Land' && type_of_asset != 'Store' && type_of_asset != 'Koddon') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.number().required('Door number is required.').min(1, 'Door number must be valid.')\n    }),\n    address_hint: Yup.string(),\n    street: Yup.string(),\n    nagar: Yup.string(),\n    city: Yup.number().required('City is required.').min(1, 'City is required.'),\n    state: Yup.number().required('State is required.').min(1, 'State is required.'),\n    pincode: Yup.number().required('Pincode is required.').min(1, 'Pincode is required.'),\n    landmark: Yup.string(),\n    number_of_rooms: Yup.number().when('type_of_asset', {\n      is: (type_of_asset, validationSchema) => {\n        if (type_of_asset == 'House' || type_of_asset == 'Appartment') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.number().required('Number of room is required.').min(1, 'Number of room must be valid.').max(20, 'Number of room must be valid.')\n    }),\n    bhk: Yup.number().when('type_of_asset', {\n      is: (type_of_asset, validationSchema) => {\n        if (type_of_asset == 'House' || type_of_asset == 'Appartment') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.number().required('BHK is required.').min(1, 'BHK must be valid.').max(20, 'BHK must be valid.')\n    }),\n    age_of_asset: Yup.number().when('type_of_asset', {\n      is: (type_of_asset, validationSchema) => {\n        if (type_of_asset != 'Land') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.number().required('Age of asset is required.').min(1, 'Age of asset must be valid.').max(50, 'Age of asst must be valid.')\n    }),\n    age_of_asset_type: Yup.string().when('type_of_asset', {\n      is: (type_of_asset, validationSchema) => {\n        if (type_of_asset != 'Land') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.string().required('Age of asset type is required.')\n    }),\n    asset_main_image: Yup.mixed(),\n    asset_size_in_length_type: Yup.string(),\n    asset_size_in_length: Yup.number(),\n    asset_size_in_width_type: Yup.string(),\n    asset_size_in_width: Yup.number(),\n    asset_notes_by_owner: Yup.string(),\n    who_can_contact: Yup.array().min(1, 'Select any one of the tenant type'),\n    advance_amount_for_asset: Yup.number().when('asset_for', {\n      is: (asset_for, validationSchema) => {\n        if (asset_for == 'Rent') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.number().required('Asset advance amount is required.').min(100, 'Asset advance amount must be valid.').max(500000, 'Asset advance amount must be valid.')\n    }),\n    monthly_rent_for_asset: Yup.number().when('asset_for', {\n      is: (asset_for, validationSchema) => {\n        if (asset_for == 'Rent') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.number().required('Asset monthly rent amount is required.').min(100, 'Asset monthly rent amount must be valid.').max(500000, 'Asset monthly rent amount must be valid.')\n    }),\n    lease_amount_for_asset: Yup.number().when('asset_for', {\n      is: (asset_for, validationSchema) => {\n        if (asset_for == 'Lease') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.number().required('Asset lease amount is required.').min(100, 'Asset lease amount must be valid.')\n    }),\n    lease_period_for_asset: Yup.number().when('asset_for', {\n      is: (asset_for, validationSchema) => {\n        if (asset_for == 'Lease') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.number().required('Asset lease period is required.').min(1, 'Asset lease period is required.')\n    }),\n    lease_period_for_asset_type: Yup.string().when('asset_for', {\n      is: (asset_for, validationSchema) => {\n        if (asset_for == 'Lease') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.string().required('Asset lease amount type is required.')\n    }),\n    asset_price: Yup.number().when('asset_for', {\n      is: (asset_for, validationSchema) => {\n        if (asset_for == 'Sale') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.number().required('Asset price is required.').min(100, 'Asset price must be valid.')\n    }),\n    asset_available_on_from: Yup.date().required('Asset available date required.'),\n    notice_period_for_vocate_asset: Yup.number().when('asset_for', {\n      is: (asset_for, validationSchema) => {\n        if (asset_for == 'Rent') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.number().required('Notice period to vocate is required.').min(1, 'Notice period to vocate must be valid.').test('notice_period_for_vocate_asset', 'Only numeric allowed.', value => Number.isInteger(value))\n    }),\n    notice_period_for_vocate_asset_type: Yup.string().when('asset_for', {\n      is: (asset_for, validationSchema) => {\n        if (asset_for == 'Rent') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.string().required('Notice period to vocate type is required.')\n    }),\n    asset_status_now: Yup.number().required('Asset status is required.').min(1, 'Asset status is required.'),\n    show_my_asset_for_tenants: Yup.string().required('Show my asset to tenant status is required.'),\n    rooms: Yup.array().of(Yup.object().shape({\n      room_name: Yup.string().when('type_of_asset', {\n        is: (type_of_asset, validationSchema) => {\n          if (type_of_asset == 'House' || type_of_asset == 'Appartment') {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        then: Yup.string().required('Room name required.')\n      }),\n      room_size_in_length: Yup.number().when('type_of_asset', {\n        is: (type_of_asset, validationSchema) => {\n          if (type_of_asset == 'House' || type_of_asset == 'Appartment') {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        then: Yup.number().required('Room length required.')\n      }),\n      room_size_in_length_type: Yup.string().when('type_of_asset', {\n        is: (type_of_asset, validationSchema) => {\n          if (type_of_asset == 'House' || type_of_asset == 'Appartment') {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        then: Yup.string().required('Room length type required.')\n      }),\n      room_size_in_width: Yup.number().when('type_of_asset', {\n        is: (type_of_asset, validationSchema) => {\n          if (type_of_asset == 'House' || type_of_asset == 'Appartment') {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        then: Yup.number().required('Room width required.')\n      }),\n      room_size_in_width_type: Yup.string().when('type_of_asset', {\n        is: (type_of_asset, validationSchema) => {\n          if (type_of_asset == 'House' || type_of_asset == 'Appartment') {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        then: Yup.string().required('Room width type required.')\n      })\n    }))\n  });\n  let custom = {\n    enterLeft: 'animate__backInUp'\n  };\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"AddAssets\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Asset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        children: ({\n          errors,\n          values,\n          field,\n          touched,\n          setTouched,\n          validateField,\n          setFieldTouched,\n          setValues,\n          setFieldValue,\n          handleChange,\n          handleBlur\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(values)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StepWizard, {\n            transitions: custom,\n            children: [/*#__PURE__*/_jsxDEV(AssetAddFormWizzardStep1, {\n              formikProps: {\n                errors,\n                values,\n                field,\n                touched,\n                setTouched,\n                validateField,\n                setFieldTouched,\n                setValues,\n                setFieldValue,\n                handleChange,\n                handleBlur\n              },\n              all_options: all_options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AssetAddFormWizzardStep2, {\n              formikProps: {\n                errors,\n                values,\n                field,\n                touched,\n                setTouched,\n                validateField,\n                setFieldTouched,\n                setValues,\n                setFieldValue,\n                handleChange,\n                handleBlur\n              },\n              all_options: all_options,\n              customStyles: customStyles,\n              onSelectChange: onSelectChange,\n              onSelectMultipleChange: onSelectMultipleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AssetAddFormWizzardStep3, {\n              formikProps: {\n                errors,\n                values,\n                field,\n                touched,\n                setTouched,\n                validateField,\n                setFieldTouched,\n                setValues,\n                setFieldValue,\n                handleChange,\n                handleBlur\n              },\n              all_options: all_options,\n              onClickDMYTypes: onClickDMYTypes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AssetAddFormWizzardStep4, {\n              formikProps: {\n                errors,\n                values,\n                field,\n                touched,\n                setTouched,\n                validateField,\n                setFieldTouched,\n                setValues,\n                setFieldValue,\n                handleChange,\n                handleBlur\n              },\n              all_options: all_options,\n              onClickDMYTypes: onClickDMYTypes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AssetAddFormWizzardStep5, {\n              formikProps: {\n                errors,\n                values,\n                field,\n                touched,\n                setTouched,\n                validateField,\n                setFieldTouched,\n                setValues,\n                setFieldValue,\n                handleChange,\n                handleBlur\n              },\n              all_options: all_options,\n              customStyles: customStyles,\n              onSelectChange: onSelectChange,\n              onSelectMultipleChange: onSelectMultipleChange,\n              onClickDMYTypes: onClickDMYTypes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AssetAddFormWizzardStep6, {\n              formikProps: {\n                errors,\n                values,\n                field,\n                touched,\n                setTouched,\n                validateField,\n                setFieldTouched,\n                setValues,\n                setFieldValue,\n                handleChange,\n                handleBlur\n              },\n              all_options: all_options,\n              customStyles: customStyles,\n              onSelectChange: onSelectChange,\n              onSelectMultipleChange: onSelectMultipleChange,\n              onClickDMYTypes: onClickDMYTypes,\n              onDobDateChange: onDobDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AssetAddFormWizzardStep7, {\n              formikProps: {\n                errors,\n                values,\n                field,\n                touched,\n                setTouched,\n                validateField,\n                setFieldTouched,\n                setValues,\n                setFieldValue,\n                handleChange,\n                handleBlur\n              },\n              all_options: all_options,\n              customStyles: customStyles,\n              onSelectChange: onSelectChange,\n              onSelectMultipleChange: onSelectMultipleChange,\n              onClickDMYTypes: onClickDMYTypes,\n              onDobDateChange: onDobDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2 mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddAssets, \"Z14oNcehj8+sNZ19VpJV/W5/UM0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = AddAssets;\nexport default AddAssets;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadingIndicator\");\n$RefreshReg$(_c2, \"AddAssets\");","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/components/pages/assets/AddAssets.js"],"names":["React","useEffect","useState","Formik","Form","FieldArray","Field","ErrorMessage","Yup","DatePicker","Select","CreatableSelect","Dropdown","parse","isDate","useSelector","useDispatch","StepWizard","SITE_LOADER","ALL_OPTIONS","SET_WHO_CAN_CONTACT_OPTIONS","AssetAddFormWizzardStep1","AssetAddFormWizzardStep2","AssetAddFormWizzardStep3","AssetAddFormWizzardStep4","AssetAddFormWizzardStep5","AssetAddFormWizzardStep6","AssetAddFormWizzardStep7","LoadingIndicator","props","onSelectMultipleChange","value","actionMeta","field","values","setFieldValue","loader","console","log","tempValue","who_can_contact","action","option","__isNew__","push","removedIndex","indexOf","removedValue","splice","AddAssets","window","scrollTo","customStyles","singleValue","provided","state","color","selectProps","isLoading","valueContainer","dispatch","all_options","defaultReducers","onSelectChange","e","city_options","setTimeout","unshift","onDobDateChange","asset_available_on_from","getFullYear","getMonth","getDate","onClickDMYTypes","onClickRoomsTypes","index","handleRoomChange","room","initialValues","user_id","type_of_asset","asset_for","asset_name","door_number","address_hint","street","nagar","city","city_is_loading","state_is_loading","pincode","landmark","number_of_rooms","bhk","age_of_asset","age_of_asset_type","asset_main_image","asset_size_in_length_type","asset_size_in_length","asset_size_in_width_type","asset_size_in_width","asset_notes_by_owner","who_can_contact_is_loading","advance_amount_for_asset","monthly_rent_for_asset","lease_amount_for_asset","lease_period_for_asset","lease_period_for_asset_type","asset_price","notice_period_for_vocate_asset","notice_period_for_vocate_asset_type","asset_status_now","asset_status_now_is_loading","show_my_asset_for_tenants","rooms","validationSchema","object","shape","string","required","min","max","number","when","is","then","mixed","array","date","test","Number","isInteger","of","room_name","room_size_in_length","room_size_in_length_type","room_size_in_width","room_size_in_width_type","custom","enterLeft","onSubmit","errors","touched","setTouched","validateField","setFieldTouched","setValues","handleChange","handleBlur","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Formik, Form, FieldArray, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport DatePicker from \"react-datepicker\";\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport { parse, isDate } from \"date-fns\";\r\nimport { useSelector, useDispatch }  from 'react-redux';\r\nimport StepWizard from \"react-step-wizard\";\r\nimport { SITE_LOADER, ALL_OPTIONS, SET_WHO_CAN_CONTACT_OPTIONS } from '../../../actions/constants';\r\nimport AssetAddFormWizzardStep1 from './AssetAddFormWizzardStep1';\r\nimport AssetAddFormWizzardStep2 from './AssetAddFormWizzardStep2';\r\nimport AssetAddFormWizzardStep3 from './AssetAddFormWizzardStep3';\r\nimport AssetAddFormWizzardStep4 from './AssetAddFormWizzardStep4';\r\nimport AssetAddFormWizzardStep5 from './AssetAddFormWizzardStep5';\r\nimport AssetAddFormWizzardStep6 from './AssetAddFormWizzardStep6';\r\nimport AssetAddFormWizzardStep7 from './AssetAddFormWizzardStep7';\r\n\r\nconst LoadingIndicator = props => {\r\n    return (\r\n      <div content={'Custom Loader'} className=\"select-loader\">\r\n        <div className=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\r\n            <span className=\"visually-hidden\"> Loading...</span>\r\n        </div>\r\n        <span>  Loading...</span>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst onSelectMultipleChange = (value, actionMeta, field, values, setFieldValue) => {\r\n    var loader = field+'_is_loading';\r\n    setFieldValue(loader, true);\r\n    console.log(value, actionMeta);\r\n    let tempValue = [];\r\n    tempValue = values.who_can_contact;\r\n    if(actionMeta.action == \"create-option\" && actionMeta.option.__isNew__) {\r\n        console.log(actionMeta.option.value);\r\n        //Save and select\r\n        //all_options.who_can_contact_options.unshift({label: actionMeta.option.value, value: actionMeta.option.value});\r\n        setFieldValue(loader, false);\r\n    } else if(actionMeta.action == \"select-option\") {\r\n        tempValue.push(actionMeta.option.value);\r\n        setFieldValue(field, tempValue);\r\n        setFieldValue(loader, false);\r\n    } else if(actionMeta.action == \"remove-value\") {\r\n        var removedIndex = tempValue.indexOf(actionMeta.removedValue.value);\r\n        tempValue.splice(removedIndex, 1);\r\n        setFieldValue(field, tempValue);\r\n        setFieldValue(loader, false);\r\n    }\r\n    setFieldValue(loader, false);\r\n};\r\n\r\n\r\n\r\nfunction AddAssets(props) {\r\n    window.scrollTo(0, 0);\r\n    const customStyles = {\r\n        singleValue: (provided, state) => {\r\n          const color = state.selectProps.isLoading ? 'white' : 'black';\r\n          return { ...provided, color };\r\n        },\r\n        valueContainer: (provided, state) => {\r\n            const color = state.selectProps.isLoading ? 'white' : 'black';\r\n            return { ...provided, color };\r\n          }\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const all_options = useSelector((state) => state.defaultReducers.all_options);\r\n    const onSelectChange = (e, field, values, setFieldValue, loader) => {\r\n        var loader = field+'_is_loading';\r\n        setFieldValue(loader, true);\r\n        if(e.__isNew__) {\r\n            //Save and select\r\n            all_options.city_options.push({'label': 'Loading', 'value': 0});\r\n            setFieldValue(field, 0);\r\n            setTimeout(function() {\r\n                all_options.city_options.unshift({'label': e.value, 'value': e.value});\r\n                setFieldValue(loader, false);\r\n                setFieldValue(field, e.value);\r\n                //setFieldValue(field, 0);\r\n            }, 2000);\r\n        } else {\r\n            setFieldValue(field, e.value);\r\n            setFieldValue(loader, false);\r\n        }\r\n    };\r\n\r\n    \r\n    \r\n    const onDobDateChange = (e, field, values, setFieldValue) => {\r\n        var asset_available_on_from = e.getFullYear()+'-'+(e.getMonth() + 1)+'-'+e.getDate();\r\n        setFieldValue(field, asset_available_on_from);\r\n    };    \r\n    \r\n    const onClickDMYTypes = (e, field, values, setFieldValue) => {\r\n        setFieldValue(field, e.value);\r\n    }\r\n\r\n    \r\n    const onClickRoomsTypes = (e, field, index, values, setFieldValue) => {\r\n        console.log(values);\r\n        setFieldValue(field, e.value);\r\n    }\r\n\r\n    const handleRoomChange = (e, index, field, room, setFieldValue) => {\r\n        setFieldValue(room[field], e.value);\r\n    };\r\n\r\n    const initialValues = {\r\n        user_id: 0,\r\n        type_of_asset: 'House',\r\n        asset_for: 'Rent',\r\n        asset_name: '',\r\n        door_number: 0,\r\n        address_hint:'',\r\n        street: '',\r\n        nagar: '',\r\n        city: 0,\r\n        city_is_loading: false,\r\n        state: 0,\r\n        state_is_loading: false,\r\n        pincode:0,\r\n        landmark: '',\r\n        number_of_rooms: 0,\r\n        bhk: 0,\r\n        age_of_asset: 0,\r\n        age_of_asset_type: 'Day(s)',\r\n        asset_main_image: null,\r\n        asset_size_in_length_type: 'sq.ft.',\r\n        asset_size_in_length: 0,\r\n        asset_size_in_width_type: 'sq.ft.',\r\n        asset_size_in_width: 0,\r\n        asset_notes_by_owner: '',\r\n        who_can_contact: [],\r\n        who_can_contact_is_loading: false,\r\n        advance_amount_for_asset:0,\r\n        monthly_rent_for_asset: 0,\r\n        lease_amount_for_asset: 0,\r\n        lease_period_for_asset: 0,\r\n        lease_period_for_asset_type: 'Day(s)',\r\n        asset_price:0,\r\n        asset_available_on_from: '',\r\n        notice_period_for_vocate_asset: 0,\r\n        notice_period_for_vocate_asset_type: 'Day(s)',\r\n        asset_status_now: 0,\r\n        asset_status_now_is_loading: false,\r\n        show_my_asset_for_tenants: 'Show',\r\n\r\n        rooms: []\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        type_of_asset: Yup.string()\r\n            .required('Asset type is required.'),\r\n        asset_for: Yup.string()\r\n            .required('Asset for is required.'),\r\n        asset_name: Yup.string()\r\n            .required('Asset name is required.')\r\n            .min(3, 'Asset name must be minimum 3 characters.')\r\n            .max(50, 'Asset name character must be less than 50 characters.'),\r\n        door_number: Yup.number()\r\n            .when('type_of_asset', {\r\n                is: (type_of_asset, validationSchema) => {\r\n                    if(type_of_asset  != 'Land' && type_of_asset  != 'Store' && type_of_asset  != 'Koddon') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Door number is required.').min(1, 'Door number must be valid.')\r\n            }),\r\n        address_hint: Yup.string(),\r\n        street: Yup.string(),\r\n        nagar: Yup.string(),\r\n        city: Yup.number()\r\n            .required('City is required.')\r\n            .min(1, 'City is required.'),\r\n        state: Yup.number()\r\n            .required('State is required.')\r\n            .min(1, 'State is required.'),\r\n        pincode: Yup.number()\r\n            .required('Pincode is required.')\r\n            .min(1, 'Pincode is required.'),\r\n        landmark: Yup.string(),\r\n        number_of_rooms: Yup.number()\r\n            .when('type_of_asset', {\r\n                is: (type_of_asset, validationSchema) => {\r\n                    if(type_of_asset  == 'House' || type_of_asset  == 'Appartment') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Number of room is required.').min(1, 'Number of room must be valid.').max(20, 'Number of room must be valid.')\r\n            }),\r\n        bhk: Yup.number()\r\n            .when('type_of_asset', {\r\n                is: (type_of_asset, validationSchema) => {\r\n                    if(type_of_asset  == 'House' || type_of_asset  == 'Appartment') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('BHK is required.').min(1, 'BHK must be valid.').max(20, 'BHK must be valid.')\r\n            }),\r\n        age_of_asset: Yup.number()\r\n            .when('type_of_asset', {\r\n                is: (type_of_asset, validationSchema) => {\r\n                    if(type_of_asset  != 'Land') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Age of asset is required.').min(1, 'Age of asset must be valid.').max(50, 'Age of asst must be valid.')\r\n            }),\r\n        age_of_asset_type: Yup.string()\r\n            .when('type_of_asset', {\r\n                is: (type_of_asset, validationSchema) => {\r\n                    if(type_of_asset  != 'Land') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.string().required('Age of asset type is required.')\r\n            }),\r\n        asset_main_image: Yup.mixed(),\r\n        asset_size_in_length_type: Yup.string(),\r\n        asset_size_in_length: Yup.number(),\r\n        asset_size_in_width_type: Yup.string(),\r\n        asset_size_in_width: Yup.number(),\r\n        asset_notes_by_owner: Yup.string(),\r\n        who_can_contact: Yup.array().min(1, 'Select any one of the tenant type'),\r\n        advance_amount_for_asset: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for  == 'Rent') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset advance amount is required.').min(100, 'Asset advance amount must be valid.').max(500000, 'Asset advance amount must be valid.')\r\n            }),\r\n        monthly_rent_for_asset: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for  == 'Rent') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset monthly rent amount is required.').min(100, 'Asset monthly rent amount must be valid.').max(500000, 'Asset monthly rent amount must be valid.')\r\n            }),\r\n        lease_amount_for_asset: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for  == 'Lease') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset lease amount is required.').min(100, 'Asset lease amount must be valid.')\r\n            }),\r\n        lease_period_for_asset: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for  == 'Lease') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset lease period is required.').min(1, 'Asset lease period is required.')\r\n            }),\r\n        lease_period_for_asset_type: Yup.string()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for  == 'Lease') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.string().required('Asset lease amount type is required.')\r\n            }),\r\n        asset_price: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for  == 'Sale') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Asset price is required.').min(100, 'Asset price must be valid.')\r\n            }),\r\n        asset_available_on_from: Yup.date().required('Asset available date required.'),\r\n        notice_period_for_vocate_asset: Yup.number()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for  == 'Rent') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.number().required('Notice period to vocate is required.').min(1, 'Notice period to vocate must be valid.').test('notice_period_for_vocate_asset', 'Only numeric allowed.',(value) => Number.isInteger(value))\r\n            }),\r\n        notice_period_for_vocate_asset_type: Yup.string()\r\n            .when('asset_for', {\r\n                is: (asset_for, validationSchema) => {\r\n                    if(asset_for  == 'Rent') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                },\r\n                then: Yup.string().required('Notice period to vocate type is required.')\r\n            }),\r\n        asset_status_now: Yup.number()\r\n            .required('Asset status is required.')\r\n            .min(1, 'Asset status is required.'),\r\n        show_my_asset_for_tenants: Yup.string()\r\n            .required('Show my asset to tenant status is required.'),\r\n        rooms: Yup.array().of(Yup.object().shape({\r\n            room_name: Yup.string()\r\n                .when('type_of_asset', {\r\n                    is: (type_of_asset, validationSchema) => {\r\n                        if(type_of_asset  == 'House' || type_of_asset  == 'Appartment') {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    then:  Yup.string().required('Room name required.')\r\n                }),\r\n            room_size_in_length: Yup.number()\r\n                .when('type_of_asset', {\r\n                    is: (type_of_asset, validationSchema) => {\r\n                        if(type_of_asset  == 'House' || type_of_asset  == 'Appartment') {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    then:  Yup.number().required('Room length required.')\r\n                }),\r\n            room_size_in_length_type: Yup.string()\r\n                .when('type_of_asset', {\r\n                    is: (type_of_asset, validationSchema) => {\r\n                        if(type_of_asset  == 'House' || type_of_asset  == 'Appartment') {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    then:  Yup.string().required('Room length type required.')\r\n                }),\r\n            room_size_in_width: Yup.number()\r\n                .when('type_of_asset', {\r\n                    is: (type_of_asset, validationSchema) => {\r\n                        if(type_of_asset  == 'House' || type_of_asset  == 'Appartment') {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    then:  Yup.number().required('Room width required.')\r\n                }),\r\n            room_size_in_width_type: Yup.string()\r\n                .when('type_of_asset', {\r\n                    is: (type_of_asset, validationSchema) => {\r\n                        if(type_of_asset  == 'House' || type_of_asset  == 'Appartment') {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    },\r\n                    then:  Yup.string().required('Room width type required.')\r\n                })\r\n        }))\r\n    });\r\n\r\n    let custom = {\r\n        enterLeft: 'animate__backInUp'\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <section id=\"AddAssets\">\r\n            <h3>Add Asset</h3>\r\n            <div className=\"container\">\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {({ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }) => (\r\n                        <Form>\r\n                            <pre>\r\n                                {JSON.stringify(values)}\r\n                            </pre>\r\n                        \r\n                            <StepWizard transitions={custom}>\r\n                                <AssetAddFormWizzardStep1 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={all_options} />\r\n                                <AssetAddFormWizzardStep2 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={all_options} customStyles={customStyles} onSelectChange={onSelectChange} onSelectMultipleChange={onSelectMultipleChange} />\r\n                                <AssetAddFormWizzardStep3 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={all_options} onClickDMYTypes={onClickDMYTypes} />\r\n                                <AssetAddFormWizzardStep4 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={all_options} onClickDMYTypes={onClickDMYTypes} />\r\n                                <AssetAddFormWizzardStep5 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={all_options} customStyles={customStyles} onSelectChange={onSelectChange} onSelectMultipleChange={onSelectMultipleChange} onClickDMYTypes={onClickDMYTypes} />\r\n                                <AssetAddFormWizzardStep6 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={all_options} customStyles={customStyles} onSelectChange={onSelectChange} onSelectMultipleChange={onSelectMultipleChange} onClickDMYTypes={onClickDMYTypes} onDobDateChange={onDobDateChange} />\r\n                                <AssetAddFormWizzardStep7 formikProps={{ errors, values, field, touched, setTouched, validateField, setFieldTouched, setValues, setFieldValue, handleChange, handleBlur }} all_options={all_options} customStyles={customStyles} onSelectChange={onSelectChange} onSelectMultipleChange={onSelectMultipleChange} onClickDMYTypes={onClickDMYTypes} onDobDateChange={onDobDateChange} />\r\n                            </StepWizard>   \r\n                            <div className=\"mb-2 mt-2\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default AddAssets;"]},"metadata":{},"sourceType":"module"}