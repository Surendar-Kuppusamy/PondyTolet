{"ast":null,"code":"var _jsxFileName = \"D:\\\\Apache\\\\Apache24\\\\htdocs\\\\Server\\\\React\\\\DemoProject\\\\demo\\\\src\\\\components\\\\pages\\\\login\\\\Login.js\";\nimport React from 'react';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  const options = [{\n    value: 'chocolate',\n    label: 'Chocolate'\n  }, {\n    value: 'strawberry',\n    label: 'Strawberry'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }];\n  const initialValues = {\n    email: '',\n    password: '',\n    selectValue: ''\n  };\n\n  const onSelectChange = (e, field, values, setFieldValue) => {\n    setFieldValue(field, e.value);\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().required('Password is required').min(8, 'Password must have 8 characters').max(50, 'Password must be less than 50 characters')\n  });\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        children: ({\n          errors,\n          values,\n          touched,\n          setValues,\n          setFieldValue,\n          handleChange,\n          handleBlur\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(values)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"form-label\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n                id: \"email\",\n                name: \"email\",\n                placeholder: \"Enter your email\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"form-label\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: 'form-control' + (errors.password && touched.password ? ' is-invalid' : ''),\n                id: \"password\",\n                name: \"password\",\n                placeholder: \"Enter your password\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"span\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                className: \"basic-single\",\n                classNamePrefix: \"select\",\n                id: \"selectValue\",\n                name: \"selectValue\",\n                options: options,\n                onChange: e => onSelectChange(e, 'selectValue', values, setFieldValue),\n                defaultValue: values.selectValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/components/pages/login/Login.js"],"names":["React","Formik","Form","Field","FieldArray","ErrorMessage","Select","Yup","Login","options","value","label","initialValues","email","password","selectValue","onSelectChange","e","field","values","setFieldValue","validationSchema","object","shape","string","required","min","max","onSubmit","console","log","errors","touched","setValues","handleChange","handleBlur","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport Select from 'react-select';\r\nimport * as Yup from 'yup';\r\n\r\nfunction Login() {\r\n\r\n    const options = [\r\n        { value: 'chocolate', label: 'Chocolate' },\r\n        { value: 'strawberry', label: 'Strawberry' },\r\n        { value: 'vanilla', label: 'Vanilla' }\r\n    ]\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        selectValue:''\r\n    };\r\n\r\n    const onSelectChange = (e, field, values, setFieldValue) => {\r\n        setFieldValue(field, e.value);\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n                .required('Email is required')\r\n                .email('Email is invalid'),\r\n        password: Yup.string()\r\n                .required('Password is required')\r\n                .min(8, 'Password must have 8 characters')\r\n                .max(50, 'Password must be less than 50 characters')\r\n    });\r\n    \r\n    const onSubmit = (values) => {\r\n        console.log(values);\r\n    }\r\n    \r\n    return (\r\n        <section id=\"login\">\r\n            <h3>Login Page</h3>\r\n            <div className=\"container\">\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {({ errors, values, touched, setValues, setFieldValue, handleChange, handleBlur }) => (\r\n                        <Form>\r\n                            <pre>{JSON.stringify(values)}</pre>\r\n                            <div className=\"container\">\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <input type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} id=\"email\" name=\"email\" placeholder=\"Enter your email\" onChange={handleChange} onBlur={handleBlur} value={values.email} />\r\n                                    <ErrorMessage name=\"email\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                    <input type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} id=\"password\" name=\"password\" placeholder=\"Enter your password\" onChange={handleChange} onBlur={handleBlur} value={values.password} />\r\n                                    <ErrorMessage name=\"password\" component=\"span\" className=\"text-danger\" />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <Select className=\"basic-single\" classNamePrefix=\"select\" id=\"selectValue\" name=\"selectValue\" options={options} onChange={e => onSelectChange(e, 'selectValue', values, setFieldValue)} defaultValue={values.selectValue} />\r\n                                </div>\r\n                                \r\n                                <div className=\"mt-3 text-right\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">Login</button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}