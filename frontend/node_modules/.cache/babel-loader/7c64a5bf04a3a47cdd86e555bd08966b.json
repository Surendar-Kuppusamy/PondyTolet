{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport { rootReducer } from '../reducers';\nimport Cryptr from 'cryptr';\nconst cryptr = new Cryptr('key');\nlet preloadedState;\nconst persistedTodosString = localStorage.getItem('state');\n\nconst saveLocal = ({\n  getState\n}) => {\n  return next => action => {\n    const result = next(action);\n    console.log('Middleware', action, getState());\n    const encryptedString = cryptr.encrypt(JSON.stringify(getState()));\n    localStorage.setItem('state', encryptedString);\n    return result;\n  };\n};\n\nif (persistedTodosString) {\n  const decryptedString = cryptr.decrypt(persistedTodosString);\n  preloadedState = JSON.parse(decryptedString);\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, preloadedState, composeEnhancers(applyMiddleware(saveLocal, thunkMiddleware)));","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/store/index.js"],"names":["applyMiddleware","createStore","composeWithDevTools","thunkMiddleware","rootReducer","Cryptr","cryptr","preloadedState","persistedTodosString","localStorage","getItem","saveLocal","getState","next","action","result","console","log","encryptedString","encrypt","JSON","stringify","setItem","decryptedString","decrypt","parse","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,KAAX,CAAf;AAEA,IAAIE,cAAJ;AACA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA7B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAChC,SAAQC,IAAD,IAAWC,MAAD,IAAY;AAC3B,UAAMC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,MAA1B,EAAkCF,QAAQ,EAA1C;AACA,UAAMM,eAAe,GAAGZ,MAAM,CAACa,OAAP,CAAeC,IAAI,CAACC,SAAL,CAAeT,QAAQ,EAAvB,CAAf,CAAxB;AACAH,IAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AAGA,WAAOH,MAAP;AACD,GARD;AASD,CAVD;;AAYA,IAAGP,oBAAH,EAAyB;AACvB,QAAMe,eAAe,GAAGjB,MAAM,CAACkB,OAAP,CAAehB,oBAAf,CAAxB;AACAD,EAAAA,cAAc,GAAGa,IAAI,CAACK,KAAL,CAAWF,eAAX,CAAjB;AACD;;AAED,MAAMG,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CC,OAAxE;AAEA,OAAO,MAAMC,KAAK,GAAG7B,WAAW,CAACG,WAAD,EAAcG,cAAd,EAA8BmB,gBAAgB,CAAC1B,eAAe,CAACW,SAAD,EAAYR,eAAZ,CAAhB,CAA9C,CAAzB","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { rootReducer } from '../reducers'\r\nimport Cryptr from 'cryptr';\r\n\r\nconst cryptr = new Cryptr('key');\r\n\r\nlet preloadedState;\r\nconst persistedTodosString = localStorage.getItem('state');\r\n\r\nconst saveLocal = ({getState}) => {\r\n  return (next) => (action) => {\r\n    const result = next(action);\r\n    console.log('Middleware', action, getState());\r\n    const encryptedString = cryptr.encrypt(JSON.stringify(getState()));\r\n    localStorage.setItem('state', encryptedString);\r\n    \r\n  \r\n    return result;\r\n  };\r\n}\r\n\r\nif(persistedTodosString) {\r\n  const decryptedString = cryptr.decrypt(persistedTodosString);\r\n  preloadedState = JSON.parse(decryptedString)\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, preloadedState, composeEnhancers(applyMiddleware(saveLocal, thunkMiddleware)));"]},"metadata":{},"sourceType":"module"}