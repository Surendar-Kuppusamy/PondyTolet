{"ast":null,"code":"var _jsxFileName = \"D:\\\\Apache\\\\Apache24\\\\htdocs\\\\Server\\\\React\\\\DemoProject\\\\frontend\\\\src\\\\components\\\\pages\\\\settings\\\\BulkDataInsert.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router';\nimport { CUSTOM_STYLES, BULK_DATA_INSERT_TYPES } from '../../../config/globalConstant';\nimport LoadingIndicator from '../common/LoadingIndicator';\nimport { getAllOptions } from '../../../actions/assetActions';\nimport { bulkInsert } from '../../../actions/settingActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BulkDataInsert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type_of_data_to_insert: 0,\n      available_options: 0,\n      bulk_data: \"\",\n      bulk_loader: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getoptions();\n    console.log(this.props.assetState); //this.setState({available_options})\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  onSelectDataType(e) {\n    this.setState({\n      type_of_data_to_insert: e.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"BulkDataInsert\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-4 pt-5\",\n        children: \"Bulk Data Insert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"bulkDataForm\",\n        name: \"bulkDataForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-2\",\n            children: \"Select Data want to insert:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isLoading: this.state.bulk_loader,\n            className: \"basic-single\",\n            classNamePrefix: \"select\",\n            id: \"type_of_data_to_insert\",\n            name: \"type_of_data_to_insert\",\n            options: BULK_DATA_INSERT_TYPES,\n            onChange: e => this.onSelectDataType(e),\n            defaultValue: this.state.type_of_data_to_insert,\n            components: {\n              LoadingIndicator\n            },\n            styles: CUSTOM_STYLES\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"type_of_data_to_insert_error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-2\",\n            children: BULK_DATA_INSERT_TYPES[this.state.type_of_data_to_insert].label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CreatableSelect, {\n            isLoading: this.state.bulk_loader,\n            formatCreateLabel: inputValue => 'Add or Create \"' + inputValue + '\"',\n            createOptionPosition: \"first\",\n            className: \"basic-single\",\n            classNamePrefix: \"select\",\n            id: \"who_can_contact\",\n            name: \"who_can_contact\",\n            options: props.all_options.who_can_contact_options,\n            createOptionPosition: \"first\",\n            onChange: (value, actionMeta) => props.onSelectMultipleChange(value, actionMeta, 'who_can_contact', props.formikProps.values, props.formikProps.setFieldValue),\n            defaultValue: props.formikProps.values.who_can_contact,\n            components: {\n              LoadingIndicator\n            },\n            styles: props.customStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    assetState: state.assetState,\n    settingState: state.settingState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getoptions: () => {\n      dispatch(getAllOptions());\n    },\n    bulkInsert: () => {\n      dispatch(bulkInsert());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BulkDataInsert);","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/frontend/src/components/pages/settings/BulkDataInsert.js"],"names":["React","Select","CreatableSelect","useSelector","useDispatch","connect","useLocation","useHistory","CUSTOM_STYLES","BULK_DATA_INSERT_TYPES","LoadingIndicator","getAllOptions","bulkInsert","BulkDataInsert","Component","constructor","props","state","type_of_data_to_insert","available_options","bulk_data","bulk_loader","componentDidMount","getoptions","console","log","assetState","componentWillUnmount","onSelectDataType","e","setState","value","render","label","inputValue","all_options","who_can_contact_options","actionMeta","onSelectMultipleChange","formikProps","values","setFieldValue","who_can_contact","customStyles","mapStateToProps","settingState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { useLocation, useHistory } from 'react-router';\r\nimport { CUSTOM_STYLES, BULK_DATA_INSERT_TYPES } from '../../../config/globalConstant';\r\nimport LoadingIndicator from '../common/LoadingIndicator';\r\nimport { getAllOptions } from '../../../actions/assetActions';\r\nimport { bulkInsert } from '../../../actions/settingActions';\r\n\r\n\r\n\r\nclass BulkDataInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state={\r\n            type_of_data_to_insert: 0,\r\n            available_options: 0,\r\n            bulk_data: \"\",\r\n            bulk_loader:false\r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        this.props.getoptions();\r\n        console.log(this.props.assetState);\r\n        //this.setState({available_options})\r\n    }\r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount');\r\n    }\r\n    onSelectDataType(e) {\r\n        this.setState({type_of_data_to_insert: e.value});\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <section id=\"BulkDataInsert\">\r\n                <h4 className=\"mt-4 pt-5\">\r\n                    Bulk Data Insert\r\n                </h4>\r\n                <form id=\"bulkDataForm\" name=\"bulkDataForm\">\r\n                <div className=\"my-2\">\r\n                    <div className=\"my-2\">\r\n                        Select Data want to insert:\r\n                    </div>\r\n                    <Select isLoading={this.state.bulk_loader} className=\"basic-single\" classNamePrefix=\"select\" id=\"type_of_data_to_insert\" name=\"type_of_data_to_insert\" options={BULK_DATA_INSERT_TYPES} onChange={e => this.onSelectDataType(e)} defaultValue={this.state.type_of_data_to_insert} components={{LoadingIndicator}} styles={CUSTOM_STYLES} />\r\n                    <span id=\"type_of_data_to_insert_error\"></span>\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <div className=\"my-2\">\r\n                        {BULK_DATA_INSERT_TYPES[this.state.type_of_data_to_insert].label}\r\n                    </div>\r\n                    <CreatableSelect isLoading={this.state.bulk_loader} formatCreateLabel={(inputValue) => 'Add or Create \"'+inputValue+'\"'} createOptionPosition=\"first\" className=\"basic-single\" classNamePrefix=\"select\" id=\"who_can_contact\" name=\"who_can_contact\" options={props.all_options.who_can_contact_options} createOptionPosition={\"first\"} onChange={(value, actionMeta) => props.onSelectMultipleChange(value, actionMeta, 'who_can_contact', props.formikProps.values, props.formikProps.setFieldValue)} defaultValue={props.formikProps.values.who_can_contact} components={{LoadingIndicator}} styles={props.customStyles} />\r\n                    <span></span>\r\n                </div>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        assetState: state.assetState,\r\n        settingState: state.settingState\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getoptions: () => {\r\n            dispatch(getAllOptions())\r\n        },\r\n        bulkInsert: () => {\r\n            dispatch(bulkInsert())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BulkDataInsert);"]},"metadata":{},"sourceType":"module"}