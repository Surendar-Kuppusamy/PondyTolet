{"ast":null,"code":"var _jsxFileName = \"D:\\\\Apache\\\\Apache24\\\\htdocs\\\\Server\\\\React\\\\DemoProject\\\\demo\\\\src\\\\components\\\\pages\\\\assets\\\\AssetAddFormWizzardStep1.js\";\nimport React from 'react';\nimport { FieldArray, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AssetAddFormWizzardStep1(props) {\n  const handleNext = async () => {\n    console.log(props);\n    const testt = await props.formikProps.setFieldTouched({\n      type_of_asset: true,\n      asset_for: true,\n      asset_name: true\n    });\n    console.log(testt.asset_name);\n    /* setFieldTouched('type_of_asset', true, true).then(err => {\r\n        if(!err.hasOwnProperty(\"type_of_asset\")) {\r\n            alert('Test')\r\n        } else {\r\n            console.log('Test1');\r\n        }\r\n    }); */\n    //props.nextStep();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n      name: \"arrayOfAssetTypes\",\n      render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: \"Asset/Property Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), props.all_options.type_of_asset_options.map((type, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"type_of_asset\",\n            id: 'type_of_asset_' + index,\n            value: type.value,\n            onChange: props.formikProps.handleChange,\n            onBlur: props.formikProps.handleBlur,\n            checked: props.formikProps.values.type_of_asset == type.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: 'type_of_asset_' + index,\n            children: type.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"type_of_asset\",\n          component: \"span\",\n          className: \"text-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n      name: \"arrayOfAssetFor\",\n      render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: \"Asset/Property For:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), props.all_options.asset_for_options.map((type, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"asset_for\",\n            id: 'asset_for_options_' + index,\n            value: type.value,\n            onChange: props.formikProps.handleChange,\n            onBlur: props.formikProps.handleBlur,\n            checked: props.formikProps.values.asset_for == type.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: 'asset_for_options_' + index,\n            children: type.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"asset_for\",\n          component: \"span\",\n          className: \"text-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success\",\n        onClick: handleNext,\n        children: \"Next Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AssetAddFormWizzardStep1;\nexport default AssetAddFormWizzardStep1;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssetAddFormWizzardStep1\");","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/components/pages/assets/AssetAddFormWizzardStep1.js"],"names":["React","FieldArray","ErrorMessage","AssetAddFormWizzardStep1","props","handleNext","console","log","testt","formikProps","setFieldTouched","type_of_asset","asset_for","asset_name","arrayHelpers","all_options","type_of_asset_options","map","type","index","value","handleChange","handleBlur","values","label","asset_for_options"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FieldArray, ErrorMessage } from 'formik';\r\n\r\n\r\nfunction AssetAddFormWizzardStep1(props) {\r\n\r\n    const handleNext = async () => {\r\n        console.log(props);\r\n        const testt = await props.formikProps.setFieldTouched({\r\n            type_of_asset: true,\r\n            asset_for: true,\r\n            asset_name: true\r\n        });\r\n        console.log(testt.asset_name);\r\n        /* setFieldTouched('type_of_asset', true, true).then(err => {\r\n            if(!err.hasOwnProperty(\"type_of_asset\")) {\r\n                alert('Test')\r\n            } else {\r\n                console.log('Test1');\r\n            }\r\n        }); */\r\n    //props.nextStep();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FieldArray\r\n                name=\"arrayOfAssetTypes\"\r\n                render={arrayHelpers => (\r\n                    <div className=\"my-2\">\r\n                        <div className=\"mb-2\">\r\n                            Asset/Property Type:\r\n                        </div>\r\n                        {props.all_options.type_of_asset_options.map((type, index) =>\r\n                            (\r\n                                <div className=\"form-check form-check-inline\"  key={index}>\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"type_of_asset\" id={'type_of_asset_'+index} value={type.value} onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} checked={props.formikProps.values.type_of_asset == type.value } />\r\n                                    <label className=\"form-check-label\" htmlFor={'type_of_asset_'+index}>{type.label}</label>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                        <br/>\r\n                        <ErrorMessage name=\"type_of_asset\" component=\"span\" className=\"text-danger\" />\r\n                    </div>\r\n                )}\r\n            />\r\n\r\n            <FieldArray\r\n                name=\"arrayOfAssetFor\"\r\n                render={arrayHelpers => (\r\n                    <div className=\"my-2\">\r\n                        <div className=\"mb-2\">\r\n                            Asset/Property For:\r\n                        </div>\r\n                        {props.all_options.asset_for_options.map((type, index) =>\r\n                            (\r\n                                <div className=\"form-check form-check-inline\"  key={index}>\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"asset_for\" id={'asset_for_options_'+index} value={type.value} onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} checked={props.formikProps.values.asset_for == type.value } />\r\n                                    <label className=\"form-check-label\" htmlFor={'asset_for_options_'+index}>{type.label}</label>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                        <br/>\r\n                        <ErrorMessage name=\"asset_for\" component=\"span\" className=\"text-danger\" />\r\n                    </div>\r\n                )}\r\n            />\r\n\r\n            <p>\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={handleNext}>Next Step</button>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\nexport default AssetAddFormWizzardStep1;"]},"metadata":{},"sourceType":"module"}