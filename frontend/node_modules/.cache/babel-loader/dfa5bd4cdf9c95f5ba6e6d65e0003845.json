{"ast":null,"code":"import { INCREMENT, LOGIN } from '../actions/constants';\nconst initialState = {};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      {\n        return { ...state,\n          [action.type]: action.payload\n        };\n      }\n\n    case INCREMENT:\n      {\n        return { ...state,\n          value: state.value + 1\n        };\n      }\n\n    case 'counter/decremented':\n      return { ...state,\n        value: state.value - 1\n      };\n\n    case 'counter/both':\n      {\n        return { ...state,\n          value: state.value - 1,\n          more: 'Test',\n          pay: action.payload\n        };\n      }\n\n    case 'counter/one':\n      {\n        return { ...state,\n          obj: state.pay.map(val => {\n            console.log(val);\n            return { ...val,\n              val: val\n            };\n          })\n        };\n      }\n\n    case 'loader':\n      {\n        return { ...state,\n          loader: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/reducers/userReducers.js"],"names":["INCREMENT","LOGIN","initialState","state","action","type","payload","value","more","pay","obj","map","val","console","log","loader"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,sBAAjC;AAEA,MAAMC,YAAY,GAAG,EAArB;AAIA,gBAAe,CAACC,KAAK,GAAGD,YAAT,EAAuBE,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKJ,KAAL;AAAY;AACX,eAAO,EAAE,GAAGE,KAAL;AAAY,WAACC,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAAlC,SAAP;AACA;;AACD,SAAKN,SAAL;AAAgB;AACf,eAAO,EAAE,GAAGG,KAAL;AAAYI,UAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAc;AAAjC,SAAP;AACA;;AACD,SAAK,qBAAL;AACC,aAAO,EAAE,GAAGJ,KAAL;AAAYI,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAc;AAAjC,OAAP;;AACD,SAAK,cAAL;AAAqB;AACpB,eAAO,EAAE,GAAGJ,KAAL;AAAYI,UAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAc,CAAjC;AAAoCC,UAAAA,IAAI,EAAE,MAA1C;AAAkDC,UAAAA,GAAG,EAAEL,MAAM,CAACE;AAA9D,SAAP;AACA;;AACD,SAAK,aAAL;AAAoB;AACnB,eAAO,EAAE,GAAGH,KAAL;AAAYO,UAAAA,GAAG,EAAEP,KAAK,CAACM,GAAN,CAAUE,GAAV,CAAcC,GAAG,IAAG;AAACC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,mBAAM,EAAC,GAAGA,GAAJ;AAASA,cAAAA,GAAG,EAAEA;AAAd,aAAN;AAAyB,WAA/D;AAAjB,SAAP;AACA;;AACD,SAAK,QAAL;AAAe;AACd,eAAO,EAAE,GAAGT,KAAL;AAAYY,UAAAA,MAAM,EAACX,MAAM,CAACE;AAA1B,SAAP;AACA;;AACD;AACC,aAAOH,KAAP;AAnBF;AAqBA,CAtBF","sourcesContent":["import { INCREMENT, LOGIN } from '../actions/constants';\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase LOGIN: {\r\n\t\t\t\treturn { ...state, [action.type]: action.payload }\r\n\t\t\t}\r\n\t\t\tcase INCREMENT: {\r\n\t\t\t\treturn { ...state, value: state.value + 1 }\r\n\t\t\t}        \r\n\t\t\tcase 'counter/decremented':\r\n\t\t\t\treturn { ...state, value: state.value - 1 }\r\n\t\t\tcase 'counter/both': {\r\n\t\t\t\treturn { ...state, value: state.value - 1, more: 'Test', pay: action.payload }\r\n\t\t\t}\r\n\t\t\tcase 'counter/one': {\r\n\t\t\t\treturn { ...state, obj: state.pay.map(val =>{console.log(val);return{...val, val: val}}) }\r\n\t\t\t}\r\n\t\t\tcase 'loader': {\r\n\t\t\t\treturn { ...state, loader:action.payload }\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\treturn state\r\n\t\t}\r\n\t};"]},"metadata":{},"sourceType":"module"}