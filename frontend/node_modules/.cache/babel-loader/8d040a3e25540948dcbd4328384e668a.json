{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { assetReducer, assetReducer1 } from '../reducers/assetReducer';\nimport { userReducer } from '../reducers/userReducer';\nimport { settingReducer } from '../reducers/settingReducer';\nconst reducer = combineReducers({\n  userState: userReducer,\n  assetState: assetReducer,\n  assetState1: assetReducer1,\n  settingState: settingReducer\n});\nconst allOptions = localStorage.getItem('allopt') ? JSON.parse(localStorage.getItem('allopt')) : {};\nconst initialState = {\n  assetState: {\n    //key should be from above any one of the reducer\n    alloptions: allOptions\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/frontend/src/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","assetReducer","assetReducer1","userReducer","settingReducer","reducer","userState","assetState","assetState1","settingState","allOptions","localStorage","getItem","JSON","parse","initialState","alloptions","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACIC,YADJ,EAEIC,aAFJ,QAGO,0BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,SAAS,EAACH,WADkB;AAE5BI,EAAAA,UAAU,EAAEN,YAFgB;AAG5BO,EAAAA,WAAW,EAAEN,aAHe;AAI5BO,EAAAA,YAAY,EAAEL;AAJc,CAAD,CAA/B;AAOA,MAAMM,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,IACfC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CADe,GAEf,EAFJ;AAIA,MAAMG,YAAY,GAAG;AACjBR,EAAAA,UAAU,EAAE;AAAK;AACbS,IAAAA,UAAU,EAAEN;AADJ;AADK,CAArB;AAME,MAAMO,UAAU,GAAG,CAAClB,KAAD,CAAnB;AAEA,MAAMmB,KAAK,GAAGtB,WAAW,CACvBS,OADuB,EAEvBL,mBAAmB,CAACF,eAAe,CAAC,GAAGmB,UAAJ,CAAhB,CAFI,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    assetReducer,\r\n    assetReducer1,\r\n} from '../reducers/assetReducer';\r\nimport { userReducer } from '../reducers/userReducer';\r\nimport { settingReducer } from '../reducers/settingReducer';\r\n\r\nconst reducer = combineReducers({\r\n    userState:userReducer,\r\n    assetState: assetReducer,\r\n    assetState1: assetReducer1,\r\n    settingState: settingReducer\r\n})\r\n\r\nconst allOptions = localStorage.getItem('allopt')\r\n  ? JSON.parse(localStorage.getItem('allopt'))\r\n  : {}\r\n\r\nconst initialState = {\r\n    assetState: {    //key should be from above any one of the reducer\r\n        alloptions: allOptions\r\n    }\r\n}\r\n  \r\n  const middleware = [thunk]\r\n  \r\n  const store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  )\r\n  \r\n  export default store;"]},"metadata":{},"sourceType":"module"}