{"ast":null,"code":"var _jsxFileName = \"D:\\\\Apache\\\\Apache24\\\\htdocs\\\\Server\\\\React\\\\DemoProject\\\\demo\\\\src\\\\components\\\\pages\\\\common\\\\FileUploadComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box'\n};\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\nfunction FileUploadComponent(props) {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const [filesData, setFilesData] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.onloadend = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })));\n        setFilesData(filesData.push(binaryStr));\n        props.setField.setFieldValue(props.fieldName, filesData);\n        console.log(binaryStr);\n      };\n\n      reader.readAsText(file);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    acceptedFiles,\n    fileRejections\n  } = useDropzone({\n    noDrag: true,\n    multiple: true,\n    maxSize: 900000,\n    onDrop,\n    maxFiles: props.maxFiles,\n    accept: props.fileTypes\n  });\n  const acceptedFileItems = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: thumb,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbInner,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        style: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this));\n  const fileRejectionItems = fileRejections.map(({\n    file,\n    errors\n  }) => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"text-danger\",\n    children: [file.path, \" - \", file.size, \" bytes\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: errors.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: e.message\n      }, e.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: acceptedFileItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: fileRejectionItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FileUploadComponent, \"k8qCZ6KwqxV2ST+0VCzdhX2ed78=\", false, function () {\n  return [useDropzone];\n});\n\n_c = FileUploadComponent;\nexport default FileUploadComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploadComponent\");","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/components/pages/common/FileUploadComponent.js"],"names":["React","useCallback","useState","useDropzone","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","FileUploadComponent","props","files","setFiles","filesData","setFilesData","onDrop","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onloadend","binaryStr","result","map","Object","assign","preview","URL","createObjectURL","push","setField","setFieldValue","fieldName","readAsText","getRootProps","getInputProps","fileRejections","noDrag","multiple","maxSize","maxFiles","accept","fileTypes","acceptedFileItems","name","fileRejectionItems","errors","path","size","e","message","code","className"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\n\r\nconst thumbsContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: 'auto',\r\n  height: '100%'\r\n};\r\n\r\n\r\nfunction FileUploadComponent(props) {\r\n  \r\n  const [files, setFiles] = useState([]);\r\n  const [filesData, setFilesData] = useState([]);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const reader = new FileReader()\r\n      reader.onabort = () => console.log('file reading was aborted')\r\n      reader.onerror = () => console.log('file reading has failed')\r\n      reader.onloadend = () => {\r\n      // Do whatever you want with the file contents\r\n        const binaryStr = reader.result\r\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })));\r\n        \r\n        setFilesData(filesData.push(binaryStr));\r\n        props.setField.setFieldValue(props.fieldName, filesData)\r\n        console.log(binaryStr);\r\n      }\r\n      reader.readAsText(file);\r\n    })\r\n  }, []);\r\n  const {getRootProps, getInputProps, acceptedFiles, fileRejections} = useDropzone({noDrag: true, multiple: true, maxSize: 900000, onDrop, maxFiles:props.maxFiles, accept:props.fileTypes });\r\n  const acceptedFileItems = files.map(file => (\r\n    <div style={thumb} key={file.name}>\r\n      <div style={thumbInner}>\r\n        <img\r\n          src={file.preview}\r\n          style={img}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n  const fileRejectionItems = fileRejections.map(({ file, errors }) => (\r\n    <li key={file.path} className=\"text-danger\">\r\n      {file.path} - {file.size} bytes\r\n      <ul>\r\n        {errors.map(e => (\r\n          <li key={e.code}>{e.message}</li>\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone'})}>\r\n        <p>Upload File</p>\r\n        <input {...getInputProps()} />\r\n        <aside>\r\n          <ul>{acceptedFileItems}</ul>\r\n          <ul>{fileRejectionItems}</ul>\r\n        </aside>\r\n      </div>\r\n      <aside>\r\n        <h4>Files</h4>\r\n      </aside>\r\n    </section>\r\n  );\r\n}\r\nexport default FileUploadComponent;"]},"metadata":{},"sourceType":"module"}