{"ast":null,"code":"var _jsxFileName = \"D:\\\\Apache\\\\Apache24\\\\htdocs\\\\Server\\\\React\\\\DemoProject\\\\demo\\\\src\\\\components\\\\pages\\\\assets\\\\AssetAddFormWizzardStep4.js\";\nimport React from 'react';\nimport Dropdown from 'react-dropdown';\nimport { FieldArray, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AssetAddFormWizzardStep4(props) {\n  const handleNext = async () => {\n    await props.formikProps.setTouched({\n      ['asset_main_image']: true,\n      ['asset_size_in_width']: true,\n      ['asset_size_in_width_type']: true,\n      ['asset_size_in_length']: true,\n      ['asset_size_in_length_type']: true,\n      ['asset_notes_by_owner']: true\n    });\n    console.log(props);\n\n    if (props.formikProps.errors.asset_main_image == undefined && props.formikProps.errors.asset_size_in_width == undefined && props.formikProps.errors.asset_size_in_width_type == undefined && props.formikProps.errors.asset_size_in_length == undefined && props.formikProps.errors.asset_size_in_length_type == undefined && props.formikProps.errors.asset_notes_by_owner == undefined) {\n      props.nextStep();\n    }\n  };\n\n  const customStyles = {\n    singleValue: (provided, state) => {\n      const color = state.selectProps.isLoading ? 'white' : 'black';\n      return { ...provided,\n        color\n      };\n    },\n    valueContainer: (provided, state) => {\n      const color = state.selectProps.isLoading ? 'white' : 'black';\n      return { ...provided,\n        color\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"asset_main_image\",\n        className: \"form-label\",\n        children: \"Asset Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"asset_main_image\",\n        name: \"asset_main_image\",\n        type: \"file\",\n        onChange: event => {\n          setFieldValue(\"asset_main_image\", event.currentTarget.files[0]);\n        },\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"asset_main_image\",\n        component: \"span\",\n        className: \"text-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: \"Asset width:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: 'form-control' + (errors.asset_size_in_width && touched.asset_size_in_width ? ' is-invalid' : ''),\n        \"aria-label\": \"Asset width\",\n        name: \"asset_size_in_width\",\n        id: \"asset_size_in_width\",\n        min: \"0\",\n        placeholder: \"Enter asset width\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        value: values.asset_size_in_width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: all_options.asset_length_width_options,\n        onChange: e => onClickDMYTypes(e, 'asset_size_in_width_type', values, setFieldValue),\n        value: values.asset_size_in_width_type,\n        placeholder: \"Select unit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"asset_size_in_width\",\n        component: \"span\",\n        className: \"text-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"asset_size_in_width_type\",\n        component: \"span\",\n        className: \"text-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: \"Asset Length:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: 'form-control' + (errors.asset_size_in_length && touched.asset_size_in_length ? ' is-invalid' : ''),\n        \"aria-label\": \"Asset length\",\n        name: \"asset_size_in_length\",\n        id: \"asset_size_in_length\",\n        min: \"0\",\n        placeholder: \"Enter asset length\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        value: values.asset_size_in_length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: all_options.asset_length_width_options,\n        onChange: e => onClickDMYTypes(e, 'asset_size_in_length_type', values, setFieldValue),\n        value: values.asset_size_in_length_type,\n        placeholder: \"Select unit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"asset_size_in_length\",\n        component: \"span\",\n        className: \"text-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"asset_size_in_length_type\",\n        component: \"span\",\n        className: \"text-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"asset_notes_by_owner\",\n        className: \"form-label\",\n        children: \"Notes or hints about asset:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"asset_notes_by_owner\",\n        name: \"asset_notes_by_owner\",\n        rows: \"3\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        value: values.asset_notes_by_owner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"asset_notes_by_owner\",\n        component: \"span\",\n        className: \"text-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AssetAddFormWizzardStep4;\nexport default AssetAddFormWizzardStep4;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssetAddFormWizzardStep4\");","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/components/pages/assets/AssetAddFormWizzardStep4.js"],"names":["React","Dropdown","FieldArray","ErrorMessage","AssetAddFormWizzardStep4","props","handleNext","formikProps","setTouched","console","log","errors","asset_main_image","undefined","asset_size_in_width","asset_size_in_width_type","asset_size_in_length","asset_size_in_length_type","asset_notes_by_owner","nextStep","customStyles","singleValue","provided","state","color","selectProps","isLoading","valueContainer","event","setFieldValue","currentTarget","files","touched","handleChange","handleBlur","values","all_options","asset_length_width_options","e","onClickDMYTypes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Dropdown from 'react-dropdown';\r\nimport { FieldArray, ErrorMessage } from 'formik';\r\n\r\n\r\nfunction AssetAddFormWizzardStep4(props) {\r\n\r\n    const handleNext = async () => {\r\n        await props.formikProps.setTouched({['asset_main_image']:true, ['asset_size_in_width']:true, ['asset_size_in_width_type']:true, ['asset_size_in_length']:true, ['asset_size_in_length_type']:true, ['asset_notes_by_owner']:true});\r\n        console.log(props);\r\n        if(props.formikProps.errors.asset_main_image == undefined && props.formikProps.errors.asset_size_in_width == undefined && props.formikProps.errors.asset_size_in_width_type == undefined && props.formikProps.errors.asset_size_in_length == undefined && props.formikProps.errors.asset_size_in_length_type == undefined && props.formikProps.errors.asset_notes_by_owner == undefined) {\r\n            props.nextStep();\r\n        }\r\n    };\r\n\r\n    const customStyles = {\r\n        singleValue: (provided, state) => {\r\n          const color = state.selectProps.isLoading ? 'white' : 'black';\r\n          return { ...provided, color };\r\n        },\r\n        valueContainer: (provided, state) => {\r\n            const color = state.selectProps.isLoading ? 'white' : 'black';\r\n            return { ...provided, color };\r\n          }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"asset_main_image\" className=\"form-label\">Asset Image</label>\r\n                <input id=\"asset_main_image\" name=\"asset_main_image\" type=\"file\" onChange={(event) => { setFieldValue(\"asset_main_image\", event.currentTarget.files[0]); }} className=\"form-control\" />\r\n                <ErrorMessage name=\"asset_main_image\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n            \r\n            <div className=\"mb-2\">\r\n                Asset width:\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n                <input type=\"number\" className={'form-control' + (errors.asset_size_in_width && touched.asset_size_in_width ? ' is-invalid' : '')} aria-label=\"Asset width\" name=\"asset_size_in_width\" id=\"asset_size_in_width\" min=\"0\" placeholder=\"Enter asset width\" onChange={handleChange} onBlur={handleBlur} value={values.asset_size_in_width} />\r\n                <Dropdown options={all_options.asset_length_width_options} onChange={e => onClickDMYTypes(e, 'asset_size_in_width_type', values, setFieldValue)} value={values.asset_size_in_width_type} placeholder=\"Select unit\" />\r\n                <ErrorMessage name=\"asset_size_in_width\" component=\"span\" className=\"text-danger\" />\r\n                <ErrorMessage name=\"asset_size_in_width_type\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n            \r\n            <div className=\"mb-2\">\r\n                Asset Length:\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n                <input type=\"number\" className={'form-control' + (errors.asset_size_in_length && touched.asset_size_in_length ? ' is-invalid' : '')} aria-label=\"Asset length\" name=\"asset_size_in_length\" id=\"asset_size_in_length\" min=\"0\" placeholder=\"Enter asset length\" onChange={handleChange} onBlur={handleBlur} value={values.asset_size_in_length} />\r\n                <Dropdown options={all_options.asset_length_width_options} onChange={e => onClickDMYTypes(e, 'asset_size_in_length_type', values, setFieldValue)} value={values.asset_size_in_length_type} placeholder=\"Select unit\" />\r\n                <ErrorMessage name=\"asset_size_in_length\" component=\"span\" className=\"text-danger\" />\r\n                <ErrorMessage name=\"asset_size_in_length_type\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n            \r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"asset_notes_by_owner\" className=\"form-label\">Notes or hints about asset:</label>\r\n                <textarea className=\"form-control\" id=\"asset_notes_by_owner\" name=\"asset_notes_by_owner\" rows=\"3\"  onChange={handleChange} onBlur={handleBlur} value={values.asset_notes_by_owner}></textarea>\r\n                <ErrorMessage name=\"asset_notes_by_owner\" component=\"span\" className=\"text-danger\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default AssetAddFormWizzardStep4;"]},"metadata":{},"sourceType":"module"}