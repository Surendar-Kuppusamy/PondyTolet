{"ast":null,"code":"var _jsxFileName = \"D:\\\\Apache\\\\Apache24\\\\htdocs\\\\Server\\\\React\\\\DemoProject\\\\demo\\\\src\\\\components\\\\pages\\\\assets\\\\AddAssets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport { TYPE_OF_ASSET_OPTIONS, ASSET_FOR_OPTIONS, WHO_CAN_CONTACT_OPTIONS, ASSET_STATUS_NOW_OPTIONS, SHOW_MY_ASSET_FOR_TENANTS_OPTIONS, LIKE_OR_DISLIKE_OPTIONS, IS_PROPOSAL_CANCELLED_OPTIONS, ASSET_HEIGHT_WIDTH_OPTIONS } from '../../../actions/constants';\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { loadOptions } from '../../../actions/assetActions';\n/* const mapStateToProps = (state) => {\r\n    return state.defaultReducers;   \r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    action1: () => {\r\n        return dispatch => {\r\n            dispatch({type:TYPE_OF_ASSET_OPTIONS});\r\n            dispatch({type:ASSET_FOR_OPTIONS});\r\n            dispatch({type:WHO_CAN_CONTACT_OPTIONS});\r\n            dispatch({type:ASSET_STATUS_NOW_OPTIONS});\r\n            dispatch({type:SHOW_MY_ASSET_FOR_TENANTS_OPTIONS});\r\n            dispatch({type:LIKE_OR_DISLIKE_OPTIONS});\r\n            dispatch({type:IS_PROPOSAL_CANCELLED_OPTIONS});\r\n            dispatch({type:ASSET_HEIGHT_WIDTH_OPTIONS});        \r\n        }\r\n    } \r\n}; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddAssets() {\n  _s();\n\n  //console.log(props);\n  const dispatch = useDispatch();\n  dispatch(loadOptions);\n  const state = useSelector(state => state.defaultReducers);\n  console.log(state);\n  /* const dispatch = useDispatch();\r\n  dispatch({type:TYPE_OF_ASSET_OPTIONS});\r\n  dispatch({type:ASSET_FOR_OPTIONS});\r\n  dispatch({type:WHO_CAN_CONTACT_OPTIONS});\r\n  dispatch({type:ASSET_STATUS_NOW_OPTIONS});\r\n  dispatch({type:SHOW_MY_ASSET_FOR_TENANTS_OPTIONS});\r\n  dispatch({type:LIKE_OR_DISLIKE_OPTIONS});\r\n  dispatch({type:IS_PROPOSAL_CANCELLED_OPTIONS});\r\n  dispatch({type:ASSET_HEIGHT_WIDTH_OPTIONS}); */\n\n  /* const state = useSelector((state) => state);\r\n  console.log(state); */\n\n  const initialValues = {\n    user_id: 0,\n    type_of_asset: 0,\n    asset_for: 'Rent',\n    asset_name: '',\n    door_number: 0,\n    street: '',\n    nagar: '',\n    city: 0,\n    state: 0,\n    landmark: '',\n    age_of_asset: 0,\n    age_of_asset_type: '',\n    asset_main_image: {},\n    asset_size_in_width_type: 'sq.ft.',\n    asset_size_in_width: 0,\n    asset_size_in_height_type: 'sq.ft.',\n    asset_size_in_height: 0,\n    asset_notes_by_owner: '',\n    who_can_contact: [],\n    advance_amount_for_asset: 0,\n    monthly_rent_for_asset: 0,\n    lease_amount_for_asset: 0,\n    lease_period_for_asset_type: '',\n    asset_available_within: 0,\n    asset_available_within_type: '',\n    notice_period_for_vocate_asset: 0,\n    notice_period_for_vocate_asset_type: '',\n    asset_status_now: 0,\n    show_my_asset_for_tenants: 'Show',\n    number_of_rooms: 0,\n    bhk: 0\n  };\n  const validationSchema = Yup.object().shape({\n    type_of_asset: Yup.number().required('Asset type is required'),\n    asset_for: Yup.string().required('Asset for is required'),\n    asset_name: Yup.string().required('Asset name is required'),\n    door_number: Yup.number().required('Door number is required'),\n    city: Yup.number().required('City is required'),\n    state: Yup.number().required('State is required'),\n    asset_main_image: Yup.mixed().required('Asset image is required')\n  });\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"AddAssets\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Asset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        children: ({\n          errors,\n          values,\n          field,\n          touched,\n          setValues,\n          setFieldValue,\n          handleChange,\n          handleBlur\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(values)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: 'form-control' + (errors.type_of_asset && touched.type_of_asset ? ' is-invalid' : ''),\n              id: \"type_of_asset\",\n              name: \"type_of_asset\",\n              placeholder: \"Enter your first name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.first_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), \"type_of_asset: 0, asset_for: 'Rent', asset_name: '', door_number: 0, street: '', nagar: '', city: 0, state: 0, landmark: '', age_of_asset: 0, age_of_asset_type: '', asset_main_image: \", \", asset_size_in_width_type: 'sq.ft.', asset_size_in_width: 0, asset_size_in_height_type: 'sq.ft.', asset_size_in_height: 0, asset_notes_by_owner: '', who_can_contact: [], advance_amount_for_asset:0, monthly_rent_for_asset: 0, lease_amount_for_asset: 0, lease_period_for_asset_type: '', asset_available_within: 0, asset_available_within_type: '', notice_period_for_vocate_asset: 0, notice_period_for_vocate_asset_type: '', asset_status_now: 0, show_my_asset_for_tenants: 'Show', number_of_rooms: 0, bhk: 0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddAssets, \"A8SM/VqoXMRvOH0bo/vCUSA9UbM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddAssets;\nexport default AddAssets;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAssets\");","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/components/pages/assets/AddAssets.js"],"names":["React","useEffect","Formik","Form","Field","FieldArray","ErrorMessage","TYPE_OF_ASSET_OPTIONS","ASSET_FOR_OPTIONS","WHO_CAN_CONTACT_OPTIONS","ASSET_STATUS_NOW_OPTIONS","SHOW_MY_ASSET_FOR_TENANTS_OPTIONS","LIKE_OR_DISLIKE_OPTIONS","IS_PROPOSAL_CANCELLED_OPTIONS","ASSET_HEIGHT_WIDTH_OPTIONS","Yup","Select","connect","useSelector","useDispatch","bindActionCreators","loadOptions","AddAssets","dispatch","state","defaultReducers","console","log","initialValues","user_id","type_of_asset","asset_for","asset_name","door_number","street","nagar","city","landmark","age_of_asset","age_of_asset_type","asset_main_image","asset_size_in_width_type","asset_size_in_width","asset_size_in_height_type","asset_size_in_height","asset_notes_by_owner","who_can_contact","advance_amount_for_asset","monthly_rent_for_asset","lease_amount_for_asset","lease_period_for_asset_type","asset_available_within","asset_available_within_type","notice_period_for_vocate_asset","notice_period_for_vocate_asset_type","asset_status_now","show_my_asset_for_tenants","number_of_rooms","bhk","validationSchema","object","shape","number","required","string","mixed","onSubmit","values","errors","field","touched","setValues","setFieldValue","handleChange","handleBlur","JSON","stringify","first_name"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport { TYPE_OF_ASSET_OPTIONS, ASSET_FOR_OPTIONS, WHO_CAN_CONTACT_OPTIONS, ASSET_STATUS_NOW_OPTIONS, SHOW_MY_ASSET_FOR_TENANTS_OPTIONS, LIKE_OR_DISLIKE_OPTIONS, IS_PROPOSAL_CANCELLED_OPTIONS,  ASSET_HEIGHT_WIDTH_OPTIONS } from '../../../actions/constants'\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport { connect, useSelector, useDispatch }  from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { loadOptions } from '../../../actions/assetActions';\r\n\r\n\r\n/* const mapStateToProps = (state) => {\r\n    return state.defaultReducers;   \r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    action1: () => {\r\n        return dispatch => {\r\n            dispatch({type:TYPE_OF_ASSET_OPTIONS});\r\n            dispatch({type:ASSET_FOR_OPTIONS});\r\n            dispatch({type:WHO_CAN_CONTACT_OPTIONS});\r\n            dispatch({type:ASSET_STATUS_NOW_OPTIONS});\r\n            dispatch({type:SHOW_MY_ASSET_FOR_TENANTS_OPTIONS});\r\n            dispatch({type:LIKE_OR_DISLIKE_OPTIONS});\r\n            dispatch({type:IS_PROPOSAL_CANCELLED_OPTIONS});\r\n            dispatch({type:ASSET_HEIGHT_WIDTH_OPTIONS});        \r\n        }\r\n    } \r\n}; */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction AddAssets() {\r\n    //console.log(props);\r\n    const dispatch = useDispatch();\r\n    dispatch(loadOptions);\r\n    const state = useSelector((state) => state.defaultReducers);\r\n    console.log(state);\r\n    /* const dispatch = useDispatch();\r\n    dispatch({type:TYPE_OF_ASSET_OPTIONS});\r\n    dispatch({type:ASSET_FOR_OPTIONS});\r\n    dispatch({type:WHO_CAN_CONTACT_OPTIONS});\r\n    dispatch({type:ASSET_STATUS_NOW_OPTIONS});\r\n    dispatch({type:SHOW_MY_ASSET_FOR_TENANTS_OPTIONS});\r\n    dispatch({type:LIKE_OR_DISLIKE_OPTIONS});\r\n    dispatch({type:IS_PROPOSAL_CANCELLED_OPTIONS});\r\n    dispatch({type:ASSET_HEIGHT_WIDTH_OPTIONS}); */\r\n\r\n    /* const state = useSelector((state) => state);\r\n    console.log(state); */\r\n\r\n    \r\n\r\n    const initialValues = {\r\n        user_id: 0,\r\n        type_of_asset: 0,\r\n        asset_for: 'Rent',\r\n        asset_name: '',\r\n        door_number: 0,\r\n        street: '',\r\n        nagar: '',\r\n        city: 0,\r\n        state: 0,\r\n        landmark: '',\r\n        age_of_asset: 0,\r\n        age_of_asset_type: '',\r\n        asset_main_image: {},\r\n        asset_size_in_width_type: 'sq.ft.',\r\n        asset_size_in_width: 0,\r\n        asset_size_in_height_type: 'sq.ft.',\r\n        asset_size_in_height: 0,\r\n        asset_notes_by_owner: '',\r\n        who_can_contact: [],\r\n        advance_amount_for_asset:0,\r\n        monthly_rent_for_asset: 0,\r\n        lease_amount_for_asset: 0,\r\n        lease_period_for_asset_type: '',\r\n        asset_available_within: 0,\r\n        asset_available_within_type: '',\r\n        notice_period_for_vocate_asset: 0,\r\n        notice_period_for_vocate_asset_type: '',\r\n        asset_status_now: 0,\r\n        show_my_asset_for_tenants: 'Show',\r\n        number_of_rooms: 0,\r\n        bhk: 0\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        type_of_asset: Yup.number()\r\n            .required('Asset type is required'),\r\n        asset_for: Yup.string()\r\n            .required('Asset for is required'),\r\n        asset_name: Yup.string()\r\n            .required('Asset name is required'),\r\n        door_number: Yup.number()\r\n            .required('Door number is required'),\r\n        city: Yup.number()\r\n            .required('City is required'),\r\n        state: Yup.number()\r\n            .required('State is required'),\r\n        asset_main_image: Yup.mixed()\r\n            .required('Asset image is required')\r\n    });\r\n\r\n    const onSubmit = (values) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <section id=\"AddAssets\">\r\n            <h3>Add Asset</h3>\r\n            <div className=\"container\">\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {({ errors, values, field, touched, setValues, setFieldValue, handleChange, handleBlur }) => (\r\n                        <Form>\r\n                            <pre>\r\n                                {JSON.stringify(values)}\r\n                            </pre>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\">\r\n\r\n                                </label>\r\n                                <input type=\"text\" className={'form-control' + (errors.type_of_asset && touched.type_of_asset ? ' is-invalid' : '')} id=\"type_of_asset\" name=\"type_of_asset\"  placeholder=\"Enter your first name\" onChange={handleChange} onBlur={handleBlur} value={values.first_name}  />\r\n                            </div>\r\n                            type_of_asset: 0,\r\n                            asset_for: 'Rent',\r\n                            asset_name: '',\r\n                            door_number: 0,\r\n                            street: '',\r\n                            nagar: '',\r\n                            city: 0,\r\n                            state: 0,\r\n                            landmark: '',\r\n                            age_of_asset: 0,\r\n                            age_of_asset_type: '',\r\n                            asset_main_image: {},\r\n                            asset_size_in_width_type: 'sq.ft.',\r\n                            asset_size_in_width: 0,\r\n                            asset_size_in_height_type: 'sq.ft.',\r\n                            asset_size_in_height: 0,\r\n                            asset_notes_by_owner: '',\r\n                            who_can_contact: [],\r\n                            advance_amount_for_asset:0,\r\n                            monthly_rent_for_asset: 0,\r\n                            lease_amount_for_asset: 0,\r\n                            lease_period_for_asset_type: '',\r\n                            asset_available_within: 0,\r\n                            asset_available_within_type: '',\r\n                            notice_period_for_vocate_asset: 0,\r\n                            notice_period_for_vocate_asset_type: '',\r\n                            asset_status_now: 0,\r\n                            show_my_asset_for_tenants: 'Show',\r\n                            number_of_rooms: 0,\r\n                            bhk: 0\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default AddAssets;"]},"metadata":{},"sourceType":"module"}