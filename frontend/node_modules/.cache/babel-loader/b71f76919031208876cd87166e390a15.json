{"ast":null,"code":"import { INCREMENT } from '../actions/constants';\nconst initialState = {\n  value: 0\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      {\n        localStorage.setItem('state', state);\n        return { ...state,\n          value: state.value + 1\n        };\n      }\n\n    case 'counter/decremented':\n      return { ...state,\n        value: state.value - 1\n      };\n\n    case 'counter/both':\n      {\n        return { ...state,\n          value: state.value - 1,\n          more: 'Test',\n          pay: action.payload\n        };\n      }\n\n    case 'counter/one':\n      {\n        return { ...state,\n          obj: state.pay.map(val => {\n            console.log(val);\n            return { ...val,\n              val: val\n            };\n          })\n        };\n      }\n\n    case 'loader':\n      {\n        return { ...state,\n          loader: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/reducers/userReducers.js"],"names":["INCREMENT","initialState","value","state","action","type","localStorage","setItem","more","pay","payload","obj","map","val","console","log","loader"],"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,SAAL;AAAgB;AACdM,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACA,eAAO,EAAE,GAAGA,KAAL;AAAYD,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,GAAc;AAAjC,SAAP;AACD;;AACD,SAAK,qBAAL;AACE,aAAO,EAAE,GAAGC,KAAL;AAAYD,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,GAAc;AAAjC,OAAP;;AACF,SAAK,cAAL;AAAqB;AACnB,eAAO,EAAE,GAAGC,KAAL;AAAYD,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,GAAc,CAAjC;AAAoCM,UAAAA,IAAI,EAAE,MAA1C;AAAkDC,UAAAA,GAAG,EAAEL,MAAM,CAACM;AAA9D,SAAP;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB,eAAO,EAAE,GAAGP,KAAL;AAAYQ,UAAAA,GAAG,EAAER,KAAK,CAACM,GAAN,CAAUG,GAAV,CAAcC,GAAG,IAAG;AAACC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,mBAAM,EAAC,GAAGA,GAAJ;AAASA,cAAAA,GAAG,EAAEA;AAAd,aAAN;AAAyB,WAA/D;AAAjB,SAAP;AACD;;AACD,SAAK,QAAL;AAAe;AACb,eAAO,EAAE,GAAGV,KAAL;AAAYa,UAAAA,MAAM,EAACZ,MAAM,CAACM;AAA1B,SAAP;AACD;;AACD;AACE,aAAOP,KAAP;AAjBJ;AAmBD,CApBH","sourcesContent":["import { INCREMENT } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  value: 0\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case INCREMENT: {\r\n        localStorage.setItem('state', state);\r\n        return { ...state, value: state.value + 1 }\r\n      }        \r\n      case 'counter/decremented':\r\n        return { ...state, value: state.value - 1 }\r\n      case 'counter/both': {\r\n        return { ...state, value: state.value - 1, more: 'Test', pay: action.payload }\r\n      }\r\n      case 'counter/one': {\r\n        return { ...state, obj: state.pay.map(val =>{console.log(val);return{...val, val: val}}) }\r\n      }\r\n      case 'loader': {\r\n        return { ...state, loader:action.payload }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}