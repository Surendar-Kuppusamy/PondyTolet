{"ast":null,"code":"var _jsxFileName = \"D:\\\\Apache\\\\Apache24\\\\htdocs\\\\Server\\\\React\\\\DemoProject\\\\demo\\\\src\\\\components\\\\pages\\\\assets\\\\AssetAddFormWizzardStep1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { FieldArray, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AssetAddFormWizzardStep1(props) {\n  _s();\n\n  const [onLoad, setLoad] = useState(0);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [onLoad]);\n\n  const handleNext = async () => {\n    await props.formikProps.setTouched({\n      ['type_of_asset']: true,\n      ['asset_for']: true\n    });\n\n    if (props.formikProps.errors.type_of_asset == undefined && props.formikProps.errors.asset_for == undefined) {\n      props.nextStep();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n      name: \"arrayOfAssetTypes\",\n      render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: \"Asset/Property Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), props.all_options.type_of_asset_options.map((type, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"type_of_asset\",\n            id: 'type_of_asset_' + type.key,\n            value: type.key,\n            onChange: props.formikProps.handleChange,\n            onBlur: props.formikProps.handleBlur,\n            checked: props.formikProps.values.type_of_asset == type.key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: 'type_of_asset_' + type.key,\n            children: type.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"type_of_asset\",\n          component: \"span\",\n          className: \"text-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n      name: \"arrayOfAssetFor\",\n      render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: \"Asset/Property For:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), props.all_options.asset_for_options.map((type, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"asset_for\",\n            id: 'asset_for_options_' + type.key,\n            value: type.key,\n            onChange: props.formikProps.handleChange,\n            onBlur: props.formikProps.handleBlur,\n            checked: props.formikProps.values.asset_for == type.key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: 'asset_for_options_' + type.key,\n            children: type.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"asset_for\",\n          component: \"span\",\n          className: \"text-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success\",\n        onClick: handleNext,\n        children: \"Next Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AssetAddFormWizzardStep1, \"W7uEeZvKSzlcDyHl6JLk+abi2Jw=\");\n\n_c = AssetAddFormWizzardStep1;\nexport default AssetAddFormWizzardStep1;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssetAddFormWizzardStep1\");","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/demo/src/components/pages/assets/AssetAddFormWizzardStep1.js"],"names":["React","useEffect","useState","FieldArray","ErrorMessage","AssetAddFormWizzardStep1","props","onLoad","setLoad","window","scrollTo","handleNext","formikProps","setTouched","errors","type_of_asset","undefined","asset_for","nextStep","arrayHelpers","all_options","type_of_asset_options","map","type","index","key","handleChange","handleBlur","values","label","asset_for_options"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,QAAzC;;;AAEA,SAASC,wBAAT,CAAkCC,KAAlC,EAAyC;AAAA;;AAErC,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,GAFQ,EAEP,CAACH,MAAD,CAFO,CAAT;;AAIA,QAAMI,UAAU,GAAG,YAAY;AAC3B,UAAML,KAAK,CAACM,WAAN,CAAkBC,UAAlB,CAA6B;AAAC,OAAC,eAAD,GAAkB,IAAnB;AAAyB,OAAC,WAAD,GAAc;AAAvC,KAA7B,CAAN;;AACA,QAAGP,KAAK,CAACM,WAAN,CAAkBE,MAAlB,CAAyBC,aAAzB,IAA0CC,SAA1C,IAAuDV,KAAK,CAACM,WAAN,CAAkBE,MAAlB,CAAyBG,SAAzB,IAAsCD,SAAhG,EAA2G;AACvGV,MAAAA,KAAK,CAACY,QAAN;AACH;AACJ,GALD;;AAMA,sBACI;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,IAAI,EAAC,mBADT;AAEI,MAAA,MAAM,EAAEC,YAAY,iBAChB;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKb,KAAK,CAACc,WAAN,CAAkBC,qBAAlB,CAAwCC,GAAxC,CAA4C,CAACC,IAAD,EAAOC,KAAP,kBAErC;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,IAAI,EAAC,OAAzC;AAAiD,YAAA,IAAI,EAAC,eAAtD;AAAsE,YAAA,EAAE,EAAE,mBAAiBD,IAAI,CAACE,GAAhG;AAAqG,YAAA,KAAK,EAAEF,IAAI,CAACE,GAAjH;AAAsH,YAAA,QAAQ,EAAEnB,KAAK,CAACM,WAAN,CAAkBc,YAAlJ;AAAgK,YAAA,MAAM,EAAEpB,KAAK,CAACM,WAAN,CAAkBe,UAA1L;AAAsM,YAAA,OAAO,EAAErB,KAAK,CAACM,WAAN,CAAkBgB,MAAlB,CAAyBb,aAAzB,IAA0CQ,IAAI,CAACE;AAA9P;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,OAAO,EAAE,mBAAiBF,IAAI,CAACE,GAAnE;AAAA,sBAAyEF,IAAI,CAACM;AAA9E;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAoDL,KAApD;AAAA;AAAA;AAAA;AAAA,gBAFP,CAJL,eAYI;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,eAAnB;AAAmC,UAAA,SAAS,EAAC,MAA7C;AAAoD,UAAA,SAAS,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,YADJ,eAqBI,QAAC,UAAD;AACI,MAAA,IAAI,EAAC,iBADT;AAEI,MAAA,MAAM,EAAEL,YAAY,iBAChB;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKb,KAAK,CAACc,WAAN,CAAkBU,iBAAlB,CAAoCR,GAApC,CAAwC,CAACC,IAAD,EAAOC,KAAP,kBAEjC;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,IAAI,EAAC,OAAzC;AAAiD,YAAA,IAAI,EAAC,WAAtD;AAAkE,YAAA,EAAE,EAAE,uBAAqBD,IAAI,CAACE,GAAhG;AAAqG,YAAA,KAAK,EAAEF,IAAI,CAACE,GAAjH;AAAsH,YAAA,QAAQ,EAAEnB,KAAK,CAACM,WAAN,CAAkBc,YAAlJ;AAAgK,YAAA,MAAM,EAAEpB,KAAK,CAACM,WAAN,CAAkBe,UAA1L;AAAsM,YAAA,OAAO,EAAErB,KAAK,CAACM,WAAN,CAAkBgB,MAAlB,CAAyBX,SAAzB,IAAsCM,IAAI,CAACE;AAA1P;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,OAAO,EAAE,uBAAqBF,IAAI,CAACE,GAAvE;AAAA,sBAA6EF,IAAI,CAACM;AAAlF;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAoDL,KAApD;AAAA;AAAA;AAAA;AAAA,gBAFP,CAJL,eAYI;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,WAAnB;AAA+B,UAAA,SAAS,EAAC,MAAzC;AAAgD,UAAA,SAAS,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,YArBJ,eAyCI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAEb,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH;;GA7DQN,wB;;KAAAA,wB;AA8DT,eAAeA,wBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FieldArray, ErrorMessage } from 'formik';\r\n\r\nfunction AssetAddFormWizzardStep1(props) {\r\n    \r\n    const [onLoad, setLoad] = useState(0);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    },[onLoad])\r\n\r\n    const handleNext = async () => {\r\n        await props.formikProps.setTouched({['type_of_asset']:true, ['asset_for']:true});\r\n        if(props.formikProps.errors.type_of_asset == undefined && props.formikProps.errors.asset_for == undefined) {\r\n            props.nextStep();\r\n        }        \r\n    };\r\n    return (\r\n        <div>\r\n            <FieldArray\r\n                name=\"arrayOfAssetTypes\"\r\n                render={arrayHelpers => (\r\n                    <div className=\"my-2\">\r\n                        <div className=\"mb-2\">\r\n                            Asset/Property Type:\r\n                        </div>\r\n                        {props.all_options.type_of_asset_options.map((type, index) =>\r\n                            (\r\n                                <div className=\"form-check form-check-inline\"  key={index}>\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"type_of_asset\" id={'type_of_asset_'+type.key} value={type.key} onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} checked={props.formikProps.values.type_of_asset == type.key } />\r\n                                    <label className=\"form-check-label\" htmlFor={'type_of_asset_'+type.key}>{type.label}</label>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                        <br/>\r\n                        <ErrorMessage name=\"type_of_asset\" component=\"span\" className=\"text-danger\" />\r\n                    </div>\r\n                )}\r\n            />\r\n            <FieldArray\r\n                name=\"arrayOfAssetFor\"\r\n                render={arrayHelpers => (\r\n                    <div className=\"my-2\">\r\n                        <div className=\"mb-2\">\r\n                            Asset/Property For:\r\n                        </div>\r\n                        {props.all_options.asset_for_options.map((type, index) =>\r\n                            (\r\n                                <div className=\"form-check form-check-inline\"  key={index}>\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"asset_for\" id={'asset_for_options_'+type.key} value={type.key} onChange={props.formikProps.handleChange} onBlur={props.formikProps.handleBlur} checked={props.formikProps.values.asset_for == type.key } />\r\n                                    <label className=\"form-check-label\" htmlFor={'asset_for_options_'+type.key}>{type.label}</label>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                        <br/>\r\n                        <ErrorMessage name=\"asset_for\" component=\"span\" className=\"text-danger\" />\r\n                    </div>\r\n                )}\r\n            />\r\n            <div className=\"mt-2\">\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={handleNext}>Next Step</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default AssetAddFormWizzardStep1;"]},"metadata":{},"sourceType":"module"}