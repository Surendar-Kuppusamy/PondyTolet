{"ast":null,"code":"import axios from 'axios';\nimport { ALL_OPTIONS, ASSET_LOADER } from '../constants/constants';\nimport { DAYS_MONTH_YEARS_OPTIONS, TYPE_OF_ASSET_OPTIONS, ASSET_LENGTH_WIDTH_OPTIONS, SHOW_MY_ASSET_FOR_TENANTS_OPTIONS, ASSET_FOR_OPTIONS, CITY_OPTIONS, STATE_OPTIONS, WHO_CAN_CONTACT_OPTIONS, ASSET_STATUS_NOW_OPTIONS, LIKE_OR_DISLIKE_OPTIONS, IS_PROPOSAL_CANCELLED_OPTIONS } from '../config/globalConstant';\nexport const getAllOptions = () => async dispatch => {\n  const all_options = {\n    days_month_years_options: DAYS_MONTH_YEARS_OPTIONS,\n    type_of_asset_options: TYPE_OF_ASSET_OPTIONS,\n    asset_for_options: ASSET_FOR_OPTIONS,\n    city_options: CITY_OPTIONS,\n    state_options: STATE_OPTIONS,\n    who_can_contact_options: WHO_CAN_CONTACT_OPTIONS,\n    asset_status_now_options: ASSET_STATUS_NOW_OPTIONS,\n    show_my_asset_for_tenants_options: SHOW_MY_ASSET_FOR_TENANTS_OPTIONS,\n    like_or_dislike_options: LIKE_OR_DISLIKE_OPTIONS,\n    is_proposal_cancelled_options: IS_PROPOSAL_CANCELLED_OPTIONS,\n    asset_length_width_options: ASSET_LENGTH_WIDTH_OPTIONS\n  };\n  dispatch({\n    type: ALL_OPTIONS,\n    payload: all_options\n  });\n};\nexport const createAsset = assetValues => async (dispatch, getState) => {\n  const state = getState();\n  const {\n    asset_form\n  } = state.assetState;\n  console.log('Actions ===>' + JSON.stringify(asset_form));\n\n  try {\n    const {\n      data\n    } = await axios.post(USERSIGNUP, userState.signup_form);\n    dispatch({\n      type: ASSET_RESULT,\n      payload: tempData\n    });\n  } catch (error) {\n    console.log('Catch Error ==>' + error);\n    let tempData = {\n      status: 'error',\n      message: 'Something went wrong',\n      'error': error\n    };\n    dispatch({\n      type: ASSET_RESULT,\n      payload: tempData\n    });\n  }\n\n  dispatch({\n    type: ASSET_LOADER\n  });\n};","map":{"version":3,"sources":["D:/Apache/Apache24/htdocs/Server/React/DemoProject/frontend/src/actions/assetActions.js"],"names":["axios","ALL_OPTIONS","ASSET_LOADER","DAYS_MONTH_YEARS_OPTIONS","TYPE_OF_ASSET_OPTIONS","ASSET_LENGTH_WIDTH_OPTIONS","SHOW_MY_ASSET_FOR_TENANTS_OPTIONS","ASSET_FOR_OPTIONS","CITY_OPTIONS","STATE_OPTIONS","WHO_CAN_CONTACT_OPTIONS","ASSET_STATUS_NOW_OPTIONS","LIKE_OR_DISLIKE_OPTIONS","IS_PROPOSAL_CANCELLED_OPTIONS","getAllOptions","dispatch","all_options","days_month_years_options","type_of_asset_options","asset_for_options","city_options","state_options","who_can_contact_options","asset_status_now_options","show_my_asset_for_tenants_options","like_or_dislike_options","is_proposal_cancelled_options","asset_length_width_options","type","payload","createAsset","assetValues","getState","state","asset_form","assetState","console","log","JSON","stringify","data","post","USERSIGNUP","userState","signup_form","ASSET_RESULT","tempData","error","status","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,wBAA1C;AACA,SACIC,wBADJ,EAEIC,qBAFJ,EAGIC,0BAHJ,EAIIC,iCAJJ,EAKIC,iBALJ,EAMIC,YANJ,EAOIC,aAPJ,EAQIC,uBARJ,EASIC,wBATJ,EAUIC,uBAVJ,EAWIC,6BAXJ,QAYO,0BAZP;AAcA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,QAAMC,WAAW,GAAG;AAChBC,IAAAA,wBAAwB,EAAEd,wBADV;AAEhBe,IAAAA,qBAAqB,EAAEd,qBAFP;AAGhBe,IAAAA,iBAAiB,EAAEZ,iBAHH;AAIhBa,IAAAA,YAAY,EAAEZ,YAJE;AAKhBa,IAAAA,aAAa,EAAEZ,aALC;AAMhBa,IAAAA,uBAAuB,EAAEZ,uBANT;AAOhBa,IAAAA,wBAAwB,EAAEZ,wBAPV;AAQhBa,IAAAA,iCAAiC,EAAElB,iCARnB;AAShBmB,IAAAA,uBAAuB,EAAEb,uBATT;AAUhBc,IAAAA,6BAA6B,EAAEb,6BAVf;AAWhBc,IAAAA,0BAA0B,EAAEtB;AAXZ,GAApB;AAaAU,EAAAA,QAAQ,CAAC;AAACa,IAAAA,IAAI,EAAE3B,WAAP;AAAoB4B,IAAAA,OAAO,EAAEb;AAA7B,GAAD,CAAR;AACH,CAfM;AAiBP,OAAO,MAAMc,WAAW,GAAIC,WAAD,IAAiB,OAAOhB,QAAP,EAAiBiB,QAAjB,KAA8B;AACtE,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAkBD,KAAK,CAACE,UAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAeC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAA3B;;AACA,MAAI;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMxC,KAAK,CAACyC,IAAN,CACnBC,UADmB,EAEnBC,SAAS,CAACC,WAFS,CAAvB;AAIA7B,IAAAA,QAAQ,CAAC;AAACa,MAAAA,IAAI,EAACiB,YAAN;AAAoBhB,MAAAA,OAAO,EAAEiB;AAA7B,KAAD,CAAR;AACH,GAND,CAME,OAAMC,KAAN,EAAa;AACXX,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBU,KAA9B;AACA,QAAID,QAAQ,GAAG;AAAEE,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,OAAO,EAAE,sBAA5B;AAAoD,eAASF;AAA7D,KAAf;AACAhC,IAAAA,QAAQ,CAAC;AAACa,MAAAA,IAAI,EAACiB,YAAN;AAAoBhB,MAAAA,OAAO,EAAEiB;AAA7B,KAAD,CAAR;AACH;;AAED/B,EAAAA,QAAQ,CAAC;AACLa,IAAAA,IAAI,EAAE1B;AADD,GAAD,CAAR;AAGH,CAnBM","sourcesContent":["import axios from 'axios';\r\nimport { ALL_OPTIONS, ASSET_LOADER } from '../constants/constants';\r\nimport {\r\n    DAYS_MONTH_YEARS_OPTIONS,\r\n    TYPE_OF_ASSET_OPTIONS,\r\n    ASSET_LENGTH_WIDTH_OPTIONS,\r\n    SHOW_MY_ASSET_FOR_TENANTS_OPTIONS,\r\n    ASSET_FOR_OPTIONS,\r\n    CITY_OPTIONS,\r\n    STATE_OPTIONS,\r\n    WHO_CAN_CONTACT_OPTIONS,\r\n    ASSET_STATUS_NOW_OPTIONS,\r\n    LIKE_OR_DISLIKE_OPTIONS,\r\n    IS_PROPOSAL_CANCELLED_OPTIONS\r\n} from '../config/globalConstant';\r\n\r\nexport const getAllOptions = () => async (dispatch) => {\r\n    const all_options = {\r\n        days_month_years_options: DAYS_MONTH_YEARS_OPTIONS,\r\n        type_of_asset_options: TYPE_OF_ASSET_OPTIONS,\r\n        asset_for_options: ASSET_FOR_OPTIONS,\r\n        city_options: CITY_OPTIONS,\r\n        state_options: STATE_OPTIONS,\r\n        who_can_contact_options: WHO_CAN_CONTACT_OPTIONS,\r\n        asset_status_now_options: ASSET_STATUS_NOW_OPTIONS,\r\n        show_my_asset_for_tenants_options: SHOW_MY_ASSET_FOR_TENANTS_OPTIONS,\r\n        like_or_dislike_options: LIKE_OR_DISLIKE_OPTIONS,\r\n        is_proposal_cancelled_options: IS_PROPOSAL_CANCELLED_OPTIONS,\r\n        asset_length_width_options: ASSET_LENGTH_WIDTH_OPTIONS\r\n    };\r\n    dispatch({type: ALL_OPTIONS, payload: all_options});\r\n}\r\n\r\nexport const createAsset = (assetValues) => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const { asset_form } =  state.assetState;\r\n    console.log('Actions ===>'+JSON.stringify(asset_form));\r\n    try {\r\n        const { data } = await axios.post(\r\n            USERSIGNUP,\r\n            userState.signup_form\r\n        );\r\n        dispatch({type:ASSET_RESULT, payload: tempData});\r\n    } catch(error) {\r\n        console.log('Catch Error ==>'+error);\r\n        let tempData = { status: 'error', message: 'Something went wrong', 'error': error  };\r\n        dispatch({type:ASSET_RESULT, payload: tempData});\r\n    }\r\n    \r\n    dispatch({\r\n        type: ASSET_LOADER\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}